// qsys_system_mm_interconnect_0.v

// This file was auto-generated from altera_mm_interconnect_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 17.1 590

`timescale 1 ps / 1 ps
module qsys_system_mm_interconnect_0 (
		input  wire        clk_0_clk_clk,                              //                            clk_0_clk.clk
		input  wire        nios2_00_reset_reset_bridge_in_reset_reset, // nios2_00_reset_reset_bridge_in_reset.reset
		input  wire [15:0] nios2_00_data_master_address,               //                 nios2_00_data_master.address
		output wire        nios2_00_data_master_waitrequest,           //                                     .waitrequest
		input  wire [3:0]  nios2_00_data_master_byteenable,            //                                     .byteenable
		input  wire        nios2_00_data_master_read,                  //                                     .read
		output wire [31:0] nios2_00_data_master_readdata,              //                                     .readdata
		input  wire        nios2_00_data_master_write,                 //                                     .write
		input  wire [31:0] nios2_00_data_master_writedata,             //                                     .writedata
		input  wire        nios2_00_data_master_debugaccess,           //                                     .debugaccess
		input  wire [15:0] nios2_00_instruction_master_address,        //          nios2_00_instruction_master.address
		output wire        nios2_00_instruction_master_waitrequest,    //                                     .waitrequest
		input  wire        nios2_00_instruction_master_read,           //                                     .read
		output wire [31:0] nios2_00_instruction_master_readdata,       //                                     .readdata
		input  wire [15:0] nios2_01_data_master_address,               //                 nios2_01_data_master.address
		output wire        nios2_01_data_master_waitrequest,           //                                     .waitrequest
		input  wire [3:0]  nios2_01_data_master_byteenable,            //                                     .byteenable
		input  wire        nios2_01_data_master_read,                  //                                     .read
		output wire [31:0] nios2_01_data_master_readdata,              //                                     .readdata
		input  wire        nios2_01_data_master_write,                 //                                     .write
		input  wire [31:0] nios2_01_data_master_writedata,             //                                     .writedata
		input  wire        nios2_01_data_master_debugaccess,           //                                     .debugaccess
		input  wire [15:0] nios2_01_instruction_master_address,        //          nios2_01_instruction_master.address
		output wire        nios2_01_instruction_master_waitrequest,    //                                     .waitrequest
		input  wire        nios2_01_instruction_master_read,           //                                     .read
		output wire [31:0] nios2_01_instruction_master_readdata,       //                                     .readdata
		input  wire [15:0] nios2_10_data_master_address,               //                 nios2_10_data_master.address
		output wire        nios2_10_data_master_waitrequest,           //                                     .waitrequest
		input  wire [3:0]  nios2_10_data_master_byteenable,            //                                     .byteenable
		input  wire        nios2_10_data_master_read,                  //                                     .read
		output wire [31:0] nios2_10_data_master_readdata,              //                                     .readdata
		input  wire        nios2_10_data_master_write,                 //                                     .write
		input  wire [31:0] nios2_10_data_master_writedata,             //                                     .writedata
		input  wire        nios2_10_data_master_debugaccess,           //                                     .debugaccess
		input  wire [15:0] nios2_10_instruction_master_address,        //          nios2_10_instruction_master.address
		output wire        nios2_10_instruction_master_waitrequest,    //                                     .waitrequest
		input  wire        nios2_10_instruction_master_read,           //                                     .read
		output wire [31:0] nios2_10_instruction_master_readdata,       //                                     .readdata
		input  wire [15:0] nios2_11_data_master_address,               //                 nios2_11_data_master.address
		output wire        nios2_11_data_master_waitrequest,           //                                     .waitrequest
		input  wire [3:0]  nios2_11_data_master_byteenable,            //                                     .byteenable
		input  wire        nios2_11_data_master_read,                  //                                     .read
		output wire [31:0] nios2_11_data_master_readdata,              //                                     .readdata
		input  wire        nios2_11_data_master_write,                 //                                     .write
		input  wire [31:0] nios2_11_data_master_writedata,             //                                     .writedata
		input  wire        nios2_11_data_master_debugaccess,           //                                     .debugaccess
		input  wire [15:0] nios2_11_instruction_master_address,        //          nios2_11_instruction_master.address
		output wire        nios2_11_instruction_master_waitrequest,    //                                     .waitrequest
		input  wire        nios2_11_instruction_master_read,           //                                     .read
		output wire [31:0] nios2_11_instruction_master_readdata,       //                                     .readdata
		output wire [11:0] data_mem_00_s1_address,                     //                       data_mem_00_s1.address
		output wire        data_mem_00_s1_write,                       //                                     .write
		input  wire [31:0] data_mem_00_s1_readdata,                    //                                     .readdata
		output wire [31:0] data_mem_00_s1_writedata,                   //                                     .writedata
		output wire [3:0]  data_mem_00_s1_byteenable,                  //                                     .byteenable
		output wire        data_mem_00_s1_chipselect,                  //                                     .chipselect
		output wire        data_mem_00_s1_clken,                       //                                     .clken
		output wire [11:0] data_mem_01_s1_address,                     //                       data_mem_01_s1.address
		output wire        data_mem_01_s1_write,                       //                                     .write
		input  wire [31:0] data_mem_01_s1_readdata,                    //                                     .readdata
		output wire [31:0] data_mem_01_s1_writedata,                   //                                     .writedata
		output wire [3:0]  data_mem_01_s1_byteenable,                  //                                     .byteenable
		output wire        data_mem_01_s1_chipselect,                  //                                     .chipselect
		output wire        data_mem_01_s1_clken,                       //                                     .clken
		output wire [11:0] data_mem_10_s1_address,                     //                       data_mem_10_s1.address
		output wire        data_mem_10_s1_write,                       //                                     .write
		input  wire [31:0] data_mem_10_s1_readdata,                    //                                     .readdata
		output wire [31:0] data_mem_10_s1_writedata,                   //                                     .writedata
		output wire [3:0]  data_mem_10_s1_byteenable,                  //                                     .byteenable
		output wire        data_mem_10_s1_chipselect,                  //                                     .chipselect
		output wire        data_mem_10_s1_clken,                       //                                     .clken
		output wire [11:0] data_mem_11_s1_address,                     //                       data_mem_11_s1.address
		output wire        data_mem_11_s1_write,                       //                                     .write
		input  wire [31:0] data_mem_11_s1_readdata,                    //                                     .readdata
		output wire [31:0] data_mem_11_s1_writedata,                   //                                     .writedata
		output wire [3:0]  data_mem_11_s1_byteenable,                  //                                     .byteenable
		output wire        data_mem_11_s1_chipselect,                  //                                     .chipselect
		output wire        data_mem_11_s1_clken,                       //                                     .clken
		output wire [2:0]  fifo_sink_00_in_csr_address,                //                  fifo_sink_00_in_csr.address
		output wire        fifo_sink_00_in_csr_write,                  //                                     .write
		output wire        fifo_sink_00_in_csr_read,                   //                                     .read
		input  wire [31:0] fifo_sink_00_in_csr_readdata,               //                                     .readdata
		output wire [31:0] fifo_sink_00_in_csr_writedata,              //                                     .writedata
		output wire [0:0]  fifo_sink_00_out_address,                   //                     fifo_sink_00_out.address
		output wire        fifo_sink_00_out_read,                      //                                     .read
		input  wire [31:0] fifo_sink_00_out_readdata,                  //                                     .readdata
		input  wire        fifo_sink_00_out_waitrequest,               //                                     .waitrequest
		output wire [2:0]  fifo_sink_01_in_csr_address,                //                  fifo_sink_01_in_csr.address
		output wire        fifo_sink_01_in_csr_write,                  //                                     .write
		output wire        fifo_sink_01_in_csr_read,                   //                                     .read
		input  wire [31:0] fifo_sink_01_in_csr_readdata,               //                                     .readdata
		output wire [31:0] fifo_sink_01_in_csr_writedata,              //                                     .writedata
		output wire [0:0]  fifo_sink_01_out_address,                   //                     fifo_sink_01_out.address
		output wire        fifo_sink_01_out_read,                      //                                     .read
		input  wire [31:0] fifo_sink_01_out_readdata,                  //                                     .readdata
		input  wire        fifo_sink_01_out_waitrequest,               //                                     .waitrequest
		output wire [2:0]  fifo_sink_10_in_csr_address,                //                  fifo_sink_10_in_csr.address
		output wire        fifo_sink_10_in_csr_write,                  //                                     .write
		output wire        fifo_sink_10_in_csr_read,                   //                                     .read
		input  wire [31:0] fifo_sink_10_in_csr_readdata,               //                                     .readdata
		output wire [31:0] fifo_sink_10_in_csr_writedata,              //                                     .writedata
		output wire [0:0]  fifo_sink_10_out_address,                   //                     fifo_sink_10_out.address
		output wire        fifo_sink_10_out_read,                      //                                     .read
		input  wire [31:0] fifo_sink_10_out_readdata,                  //                                     .readdata
		input  wire        fifo_sink_10_out_waitrequest,               //                                     .waitrequest
		output wire [2:0]  fifo_sink_11_in_csr_address,                //                  fifo_sink_11_in_csr.address
		output wire        fifo_sink_11_in_csr_write,                  //                                     .write
		output wire        fifo_sink_11_in_csr_read,                   //                                     .read
		input  wire [31:0] fifo_sink_11_in_csr_readdata,               //                                     .readdata
		output wire [31:0] fifo_sink_11_in_csr_writedata,              //                                     .writedata
		output wire [0:0]  fifo_sink_11_out_address,                   //                     fifo_sink_11_out.address
		output wire        fifo_sink_11_out_read,                      //                                     .read
		input  wire [31:0] fifo_sink_11_out_readdata,                  //                                     .readdata
		input  wire        fifo_sink_11_out_waitrequest,               //                                     .waitrequest
		output wire [0:0]  fifo_source_00_in_address,                  //                    fifo_source_00_in.address
		output wire        fifo_source_00_in_write,                    //                                     .write
		output wire [31:0] fifo_source_00_in_writedata,                //                                     .writedata
		input  wire        fifo_source_00_in_waitrequest,              //                                     .waitrequest
		output wire [2:0]  fifo_source_00_in_csr_address,              //                fifo_source_00_in_csr.address
		output wire        fifo_source_00_in_csr_write,                //                                     .write
		output wire        fifo_source_00_in_csr_read,                 //                                     .read
		input  wire [31:0] fifo_source_00_in_csr_readdata,             //                                     .readdata
		output wire [31:0] fifo_source_00_in_csr_writedata,            //                                     .writedata
		output wire [0:0]  fifo_source_01_in_address,                  //                    fifo_source_01_in.address
		output wire        fifo_source_01_in_write,                    //                                     .write
		output wire [31:0] fifo_source_01_in_writedata,                //                                     .writedata
		input  wire        fifo_source_01_in_waitrequest,              //                                     .waitrequest
		output wire [2:0]  fifo_source_01_in_csr_address,              //                fifo_source_01_in_csr.address
		output wire        fifo_source_01_in_csr_write,                //                                     .write
		output wire        fifo_source_01_in_csr_read,                 //                                     .read
		input  wire [31:0] fifo_source_01_in_csr_readdata,             //                                     .readdata
		output wire [31:0] fifo_source_01_in_csr_writedata,            //                                     .writedata
		output wire [0:0]  fifo_source_10_in_address,                  //                    fifo_source_10_in.address
		output wire        fifo_source_10_in_write,                    //                                     .write
		output wire [31:0] fifo_source_10_in_writedata,                //                                     .writedata
		input  wire        fifo_source_10_in_waitrequest,              //                                     .waitrequest
		output wire [2:0]  fifo_source_10_in_csr_address,              //                fifo_source_10_in_csr.address
		output wire        fifo_source_10_in_csr_write,                //                                     .write
		output wire        fifo_source_10_in_csr_read,                 //                                     .read
		input  wire [31:0] fifo_source_10_in_csr_readdata,             //                                     .readdata
		output wire [31:0] fifo_source_10_in_csr_writedata,            //                                     .writedata
		output wire [0:0]  fifo_source_11_in_address,                  //                    fifo_source_11_in.address
		output wire        fifo_source_11_in_write,                    //                                     .write
		output wire [31:0] fifo_source_11_in_writedata,                //                                     .writedata
		input  wire        fifo_source_11_in_waitrequest,              //                                     .waitrequest
		output wire [2:0]  fifo_source_11_in_csr_address,              //                fifo_source_11_in_csr.address
		output wire        fifo_source_11_in_csr_write,                //                                     .write
		output wire        fifo_source_11_in_csr_read,                 //                                     .read
		input  wire [31:0] fifo_source_11_in_csr_readdata,             //                                     .readdata
		output wire [31:0] fifo_source_11_in_csr_writedata,            //                                     .writedata
		output wire [0:0]  jtag_uart_0_avalon_jtag_slave_address,      //        jtag_uart_0_avalon_jtag_slave.address
		output wire        jtag_uart_0_avalon_jtag_slave_write,        //                                     .write
		output wire        jtag_uart_0_avalon_jtag_slave_read,         //                                     .read
		input  wire [31:0] jtag_uart_0_avalon_jtag_slave_readdata,     //                                     .readdata
		output wire [31:0] jtag_uart_0_avalon_jtag_slave_writedata,    //                                     .writedata
		input  wire        jtag_uart_0_avalon_jtag_slave_waitrequest,  //                                     .waitrequest
		output wire        jtag_uart_0_avalon_jtag_slave_chipselect,   //                                     .chipselect
		output wire [8:0]  nios2_00_debug_mem_slave_address,           //             nios2_00_debug_mem_slave.address
		output wire        nios2_00_debug_mem_slave_write,             //                                     .write
		output wire        nios2_00_debug_mem_slave_read,              //                                     .read
		input  wire [31:0] nios2_00_debug_mem_slave_readdata,          //                                     .readdata
		output wire [31:0] nios2_00_debug_mem_slave_writedata,         //                                     .writedata
		output wire [3:0]  nios2_00_debug_mem_slave_byteenable,        //                                     .byteenable
		input  wire        nios2_00_debug_mem_slave_waitrequest,       //                                     .waitrequest
		output wire        nios2_00_debug_mem_slave_debugaccess,       //                                     .debugaccess
		output wire [8:0]  nios2_01_debug_mem_slave_address,           //             nios2_01_debug_mem_slave.address
		output wire        nios2_01_debug_mem_slave_write,             //                                     .write
		output wire        nios2_01_debug_mem_slave_read,              //                                     .read
		input  wire [31:0] nios2_01_debug_mem_slave_readdata,          //                                     .readdata
		output wire [31:0] nios2_01_debug_mem_slave_writedata,         //                                     .writedata
		output wire [3:0]  nios2_01_debug_mem_slave_byteenable,        //                                     .byteenable
		input  wire        nios2_01_debug_mem_slave_waitrequest,       //                                     .waitrequest
		output wire        nios2_01_debug_mem_slave_debugaccess,       //                                     .debugaccess
		output wire [8:0]  nios2_10_debug_mem_slave_address,           //             nios2_10_debug_mem_slave.address
		output wire        nios2_10_debug_mem_slave_write,             //                                     .write
		output wire        nios2_10_debug_mem_slave_read,              //                                     .read
		input  wire [31:0] nios2_10_debug_mem_slave_readdata,          //                                     .readdata
		output wire [31:0] nios2_10_debug_mem_slave_writedata,         //                                     .writedata
		output wire [3:0]  nios2_10_debug_mem_slave_byteenable,        //                                     .byteenable
		input  wire        nios2_10_debug_mem_slave_waitrequest,       //                                     .waitrequest
		output wire        nios2_10_debug_mem_slave_debugaccess,       //                                     .debugaccess
		output wire [8:0]  nios2_11_debug_mem_slave_address,           //             nios2_11_debug_mem_slave.address
		output wire        nios2_11_debug_mem_slave_write,             //                                     .write
		output wire        nios2_11_debug_mem_slave_read,              //                                     .read
		input  wire [31:0] nios2_11_debug_mem_slave_readdata,          //                                     .readdata
		output wire [31:0] nios2_11_debug_mem_slave_writedata,         //                                     .writedata
		output wire [3:0]  nios2_11_debug_mem_slave_byteenable,        //                                     .byteenable
		input  wire        nios2_11_debug_mem_slave_waitrequest,       //                                     .waitrequest
		output wire        nios2_11_debug_mem_slave_debugaccess        //                                     .debugaccess
	);

	wire         nios2_00_data_master_translator_avalon_universal_master_0_waitrequest;          // nios2_00_data_master_agent:av_waitrequest -> nios2_00_data_master_translator:uav_waitrequest
	wire  [31:0] nios2_00_data_master_translator_avalon_universal_master_0_readdata;             // nios2_00_data_master_agent:av_readdata -> nios2_00_data_master_translator:uav_readdata
	wire         nios2_00_data_master_translator_avalon_universal_master_0_debugaccess;          // nios2_00_data_master_translator:uav_debugaccess -> nios2_00_data_master_agent:av_debugaccess
	wire  [15:0] nios2_00_data_master_translator_avalon_universal_master_0_address;              // nios2_00_data_master_translator:uav_address -> nios2_00_data_master_agent:av_address
	wire         nios2_00_data_master_translator_avalon_universal_master_0_read;                 // nios2_00_data_master_translator:uav_read -> nios2_00_data_master_agent:av_read
	wire   [3:0] nios2_00_data_master_translator_avalon_universal_master_0_byteenable;           // nios2_00_data_master_translator:uav_byteenable -> nios2_00_data_master_agent:av_byteenable
	wire         nios2_00_data_master_translator_avalon_universal_master_0_readdatavalid;        // nios2_00_data_master_agent:av_readdatavalid -> nios2_00_data_master_translator:uav_readdatavalid
	wire         nios2_00_data_master_translator_avalon_universal_master_0_lock;                 // nios2_00_data_master_translator:uav_lock -> nios2_00_data_master_agent:av_lock
	wire         nios2_00_data_master_translator_avalon_universal_master_0_write;                // nios2_00_data_master_translator:uav_write -> nios2_00_data_master_agent:av_write
	wire  [31:0] nios2_00_data_master_translator_avalon_universal_master_0_writedata;            // nios2_00_data_master_translator:uav_writedata -> nios2_00_data_master_agent:av_writedata
	wire   [2:0] nios2_00_data_master_translator_avalon_universal_master_0_burstcount;           // nios2_00_data_master_translator:uav_burstcount -> nios2_00_data_master_agent:av_burstcount
	wire         rsp_mux_src_valid;                                                              // rsp_mux:src_valid -> nios2_00_data_master_agent:rp_valid
	wire  [95:0] rsp_mux_src_data;                                                               // rsp_mux:src_data -> nios2_00_data_master_agent:rp_data
	wire         rsp_mux_src_ready;                                                              // nios2_00_data_master_agent:rp_ready -> rsp_mux:src_ready
	wire  [24:0] rsp_mux_src_channel;                                                            // rsp_mux:src_channel -> nios2_00_data_master_agent:rp_channel
	wire         rsp_mux_src_startofpacket;                                                      // rsp_mux:src_startofpacket -> nios2_00_data_master_agent:rp_startofpacket
	wire         rsp_mux_src_endofpacket;                                                        // rsp_mux:src_endofpacket -> nios2_00_data_master_agent:rp_endofpacket
	wire         nios2_01_data_master_translator_avalon_universal_master_0_waitrequest;          // nios2_01_data_master_agent:av_waitrequest -> nios2_01_data_master_translator:uav_waitrequest
	wire  [31:0] nios2_01_data_master_translator_avalon_universal_master_0_readdata;             // nios2_01_data_master_agent:av_readdata -> nios2_01_data_master_translator:uav_readdata
	wire         nios2_01_data_master_translator_avalon_universal_master_0_debugaccess;          // nios2_01_data_master_translator:uav_debugaccess -> nios2_01_data_master_agent:av_debugaccess
	wire  [15:0] nios2_01_data_master_translator_avalon_universal_master_0_address;              // nios2_01_data_master_translator:uav_address -> nios2_01_data_master_agent:av_address
	wire         nios2_01_data_master_translator_avalon_universal_master_0_read;                 // nios2_01_data_master_translator:uav_read -> nios2_01_data_master_agent:av_read
	wire   [3:0] nios2_01_data_master_translator_avalon_universal_master_0_byteenable;           // nios2_01_data_master_translator:uav_byteenable -> nios2_01_data_master_agent:av_byteenable
	wire         nios2_01_data_master_translator_avalon_universal_master_0_readdatavalid;        // nios2_01_data_master_agent:av_readdatavalid -> nios2_01_data_master_translator:uav_readdatavalid
	wire         nios2_01_data_master_translator_avalon_universal_master_0_lock;                 // nios2_01_data_master_translator:uav_lock -> nios2_01_data_master_agent:av_lock
	wire         nios2_01_data_master_translator_avalon_universal_master_0_write;                // nios2_01_data_master_translator:uav_write -> nios2_01_data_master_agent:av_write
	wire  [31:0] nios2_01_data_master_translator_avalon_universal_master_0_writedata;            // nios2_01_data_master_translator:uav_writedata -> nios2_01_data_master_agent:av_writedata
	wire   [2:0] nios2_01_data_master_translator_avalon_universal_master_0_burstcount;           // nios2_01_data_master_translator:uav_burstcount -> nios2_01_data_master_agent:av_burstcount
	wire         rsp_mux_001_src_valid;                                                          // rsp_mux_001:src_valid -> nios2_01_data_master_agent:rp_valid
	wire  [95:0] rsp_mux_001_src_data;                                                           // rsp_mux_001:src_data -> nios2_01_data_master_agent:rp_data
	wire         rsp_mux_001_src_ready;                                                          // nios2_01_data_master_agent:rp_ready -> rsp_mux_001:src_ready
	wire  [24:0] rsp_mux_001_src_channel;                                                        // rsp_mux_001:src_channel -> nios2_01_data_master_agent:rp_channel
	wire         rsp_mux_001_src_startofpacket;                                                  // rsp_mux_001:src_startofpacket -> nios2_01_data_master_agent:rp_startofpacket
	wire         rsp_mux_001_src_endofpacket;                                                    // rsp_mux_001:src_endofpacket -> nios2_01_data_master_agent:rp_endofpacket
	wire         nios2_10_data_master_translator_avalon_universal_master_0_waitrequest;          // nios2_10_data_master_agent:av_waitrequest -> nios2_10_data_master_translator:uav_waitrequest
	wire  [31:0] nios2_10_data_master_translator_avalon_universal_master_0_readdata;             // nios2_10_data_master_agent:av_readdata -> nios2_10_data_master_translator:uav_readdata
	wire         nios2_10_data_master_translator_avalon_universal_master_0_debugaccess;          // nios2_10_data_master_translator:uav_debugaccess -> nios2_10_data_master_agent:av_debugaccess
	wire  [15:0] nios2_10_data_master_translator_avalon_universal_master_0_address;              // nios2_10_data_master_translator:uav_address -> nios2_10_data_master_agent:av_address
	wire         nios2_10_data_master_translator_avalon_universal_master_0_read;                 // nios2_10_data_master_translator:uav_read -> nios2_10_data_master_agent:av_read
	wire   [3:0] nios2_10_data_master_translator_avalon_universal_master_0_byteenable;           // nios2_10_data_master_translator:uav_byteenable -> nios2_10_data_master_agent:av_byteenable
	wire         nios2_10_data_master_translator_avalon_universal_master_0_readdatavalid;        // nios2_10_data_master_agent:av_readdatavalid -> nios2_10_data_master_translator:uav_readdatavalid
	wire         nios2_10_data_master_translator_avalon_universal_master_0_lock;                 // nios2_10_data_master_translator:uav_lock -> nios2_10_data_master_agent:av_lock
	wire         nios2_10_data_master_translator_avalon_universal_master_0_write;                // nios2_10_data_master_translator:uav_write -> nios2_10_data_master_agent:av_write
	wire  [31:0] nios2_10_data_master_translator_avalon_universal_master_0_writedata;            // nios2_10_data_master_translator:uav_writedata -> nios2_10_data_master_agent:av_writedata
	wire   [2:0] nios2_10_data_master_translator_avalon_universal_master_0_burstcount;           // nios2_10_data_master_translator:uav_burstcount -> nios2_10_data_master_agent:av_burstcount
	wire         rsp_mux_002_src_valid;                                                          // rsp_mux_002:src_valid -> nios2_10_data_master_agent:rp_valid
	wire  [95:0] rsp_mux_002_src_data;                                                           // rsp_mux_002:src_data -> nios2_10_data_master_agent:rp_data
	wire         rsp_mux_002_src_ready;                                                          // nios2_10_data_master_agent:rp_ready -> rsp_mux_002:src_ready
	wire  [24:0] rsp_mux_002_src_channel;                                                        // rsp_mux_002:src_channel -> nios2_10_data_master_agent:rp_channel
	wire         rsp_mux_002_src_startofpacket;                                                  // rsp_mux_002:src_startofpacket -> nios2_10_data_master_agent:rp_startofpacket
	wire         rsp_mux_002_src_endofpacket;                                                    // rsp_mux_002:src_endofpacket -> nios2_10_data_master_agent:rp_endofpacket
	wire         nios2_11_data_master_translator_avalon_universal_master_0_waitrequest;          // nios2_11_data_master_agent:av_waitrequest -> nios2_11_data_master_translator:uav_waitrequest
	wire  [31:0] nios2_11_data_master_translator_avalon_universal_master_0_readdata;             // nios2_11_data_master_agent:av_readdata -> nios2_11_data_master_translator:uav_readdata
	wire         nios2_11_data_master_translator_avalon_universal_master_0_debugaccess;          // nios2_11_data_master_translator:uav_debugaccess -> nios2_11_data_master_agent:av_debugaccess
	wire  [15:0] nios2_11_data_master_translator_avalon_universal_master_0_address;              // nios2_11_data_master_translator:uav_address -> nios2_11_data_master_agent:av_address
	wire         nios2_11_data_master_translator_avalon_universal_master_0_read;                 // nios2_11_data_master_translator:uav_read -> nios2_11_data_master_agent:av_read
	wire   [3:0] nios2_11_data_master_translator_avalon_universal_master_0_byteenable;           // nios2_11_data_master_translator:uav_byteenable -> nios2_11_data_master_agent:av_byteenable
	wire         nios2_11_data_master_translator_avalon_universal_master_0_readdatavalid;        // nios2_11_data_master_agent:av_readdatavalid -> nios2_11_data_master_translator:uav_readdatavalid
	wire         nios2_11_data_master_translator_avalon_universal_master_0_lock;                 // nios2_11_data_master_translator:uav_lock -> nios2_11_data_master_agent:av_lock
	wire         nios2_11_data_master_translator_avalon_universal_master_0_write;                // nios2_11_data_master_translator:uav_write -> nios2_11_data_master_agent:av_write
	wire  [31:0] nios2_11_data_master_translator_avalon_universal_master_0_writedata;            // nios2_11_data_master_translator:uav_writedata -> nios2_11_data_master_agent:av_writedata
	wire   [2:0] nios2_11_data_master_translator_avalon_universal_master_0_burstcount;           // nios2_11_data_master_translator:uav_burstcount -> nios2_11_data_master_agent:av_burstcount
	wire         rsp_mux_003_src_valid;                                                          // rsp_mux_003:src_valid -> nios2_11_data_master_agent:rp_valid
	wire  [95:0] rsp_mux_003_src_data;                                                           // rsp_mux_003:src_data -> nios2_11_data_master_agent:rp_data
	wire         rsp_mux_003_src_ready;                                                          // nios2_11_data_master_agent:rp_ready -> rsp_mux_003:src_ready
	wire  [24:0] rsp_mux_003_src_channel;                                                        // rsp_mux_003:src_channel -> nios2_11_data_master_agent:rp_channel
	wire         rsp_mux_003_src_startofpacket;                                                  // rsp_mux_003:src_startofpacket -> nios2_11_data_master_agent:rp_startofpacket
	wire         rsp_mux_003_src_endofpacket;                                                    // rsp_mux_003:src_endofpacket -> nios2_11_data_master_agent:rp_endofpacket
	wire         nios2_11_instruction_master_translator_avalon_universal_master_0_waitrequest;   // nios2_11_instruction_master_agent:av_waitrequest -> nios2_11_instruction_master_translator:uav_waitrequest
	wire  [31:0] nios2_11_instruction_master_translator_avalon_universal_master_0_readdata;      // nios2_11_instruction_master_agent:av_readdata -> nios2_11_instruction_master_translator:uav_readdata
	wire         nios2_11_instruction_master_translator_avalon_universal_master_0_debugaccess;   // nios2_11_instruction_master_translator:uav_debugaccess -> nios2_11_instruction_master_agent:av_debugaccess
	wire  [15:0] nios2_11_instruction_master_translator_avalon_universal_master_0_address;       // nios2_11_instruction_master_translator:uav_address -> nios2_11_instruction_master_agent:av_address
	wire         nios2_11_instruction_master_translator_avalon_universal_master_0_read;          // nios2_11_instruction_master_translator:uav_read -> nios2_11_instruction_master_agent:av_read
	wire   [3:0] nios2_11_instruction_master_translator_avalon_universal_master_0_byteenable;    // nios2_11_instruction_master_translator:uav_byteenable -> nios2_11_instruction_master_agent:av_byteenable
	wire         nios2_11_instruction_master_translator_avalon_universal_master_0_readdatavalid; // nios2_11_instruction_master_agent:av_readdatavalid -> nios2_11_instruction_master_translator:uav_readdatavalid
	wire         nios2_11_instruction_master_translator_avalon_universal_master_0_lock;          // nios2_11_instruction_master_translator:uav_lock -> nios2_11_instruction_master_agent:av_lock
	wire         nios2_11_instruction_master_translator_avalon_universal_master_0_write;         // nios2_11_instruction_master_translator:uav_write -> nios2_11_instruction_master_agent:av_write
	wire  [31:0] nios2_11_instruction_master_translator_avalon_universal_master_0_writedata;     // nios2_11_instruction_master_translator:uav_writedata -> nios2_11_instruction_master_agent:av_writedata
	wire   [2:0] nios2_11_instruction_master_translator_avalon_universal_master_0_burstcount;    // nios2_11_instruction_master_translator:uav_burstcount -> nios2_11_instruction_master_agent:av_burstcount
	wire         rsp_mux_004_src_valid;                                                          // rsp_mux_004:src_valid -> nios2_11_instruction_master_agent:rp_valid
	wire  [95:0] rsp_mux_004_src_data;                                                           // rsp_mux_004:src_data -> nios2_11_instruction_master_agent:rp_data
	wire         rsp_mux_004_src_ready;                                                          // nios2_11_instruction_master_agent:rp_ready -> rsp_mux_004:src_ready
	wire  [24:0] rsp_mux_004_src_channel;                                                        // rsp_mux_004:src_channel -> nios2_11_instruction_master_agent:rp_channel
	wire         rsp_mux_004_src_startofpacket;                                                  // rsp_mux_004:src_startofpacket -> nios2_11_instruction_master_agent:rp_startofpacket
	wire         rsp_mux_004_src_endofpacket;                                                    // rsp_mux_004:src_endofpacket -> nios2_11_instruction_master_agent:rp_endofpacket
	wire         nios2_10_instruction_master_translator_avalon_universal_master_0_waitrequest;   // nios2_10_instruction_master_agent:av_waitrequest -> nios2_10_instruction_master_translator:uav_waitrequest
	wire  [31:0] nios2_10_instruction_master_translator_avalon_universal_master_0_readdata;      // nios2_10_instruction_master_agent:av_readdata -> nios2_10_instruction_master_translator:uav_readdata
	wire         nios2_10_instruction_master_translator_avalon_universal_master_0_debugaccess;   // nios2_10_instruction_master_translator:uav_debugaccess -> nios2_10_instruction_master_agent:av_debugaccess
	wire  [15:0] nios2_10_instruction_master_translator_avalon_universal_master_0_address;       // nios2_10_instruction_master_translator:uav_address -> nios2_10_instruction_master_agent:av_address
	wire         nios2_10_instruction_master_translator_avalon_universal_master_0_read;          // nios2_10_instruction_master_translator:uav_read -> nios2_10_instruction_master_agent:av_read
	wire   [3:0] nios2_10_instruction_master_translator_avalon_universal_master_0_byteenable;    // nios2_10_instruction_master_translator:uav_byteenable -> nios2_10_instruction_master_agent:av_byteenable
	wire         nios2_10_instruction_master_translator_avalon_universal_master_0_readdatavalid; // nios2_10_instruction_master_agent:av_readdatavalid -> nios2_10_instruction_master_translator:uav_readdatavalid
	wire         nios2_10_instruction_master_translator_avalon_universal_master_0_lock;          // nios2_10_instruction_master_translator:uav_lock -> nios2_10_instruction_master_agent:av_lock
	wire         nios2_10_instruction_master_translator_avalon_universal_master_0_write;         // nios2_10_instruction_master_translator:uav_write -> nios2_10_instruction_master_agent:av_write
	wire  [31:0] nios2_10_instruction_master_translator_avalon_universal_master_0_writedata;     // nios2_10_instruction_master_translator:uav_writedata -> nios2_10_instruction_master_agent:av_writedata
	wire   [2:0] nios2_10_instruction_master_translator_avalon_universal_master_0_burstcount;    // nios2_10_instruction_master_translator:uav_burstcount -> nios2_10_instruction_master_agent:av_burstcount
	wire         rsp_mux_005_src_valid;                                                          // rsp_mux_005:src_valid -> nios2_10_instruction_master_agent:rp_valid
	wire  [95:0] rsp_mux_005_src_data;                                                           // rsp_mux_005:src_data -> nios2_10_instruction_master_agent:rp_data
	wire         rsp_mux_005_src_ready;                                                          // nios2_10_instruction_master_agent:rp_ready -> rsp_mux_005:src_ready
	wire  [24:0] rsp_mux_005_src_channel;                                                        // rsp_mux_005:src_channel -> nios2_10_instruction_master_agent:rp_channel
	wire         rsp_mux_005_src_startofpacket;                                                  // rsp_mux_005:src_startofpacket -> nios2_10_instruction_master_agent:rp_startofpacket
	wire         rsp_mux_005_src_endofpacket;                                                    // rsp_mux_005:src_endofpacket -> nios2_10_instruction_master_agent:rp_endofpacket
	wire         nios2_01_instruction_master_translator_avalon_universal_master_0_waitrequest;   // nios2_01_instruction_master_agent:av_waitrequest -> nios2_01_instruction_master_translator:uav_waitrequest
	wire  [31:0] nios2_01_instruction_master_translator_avalon_universal_master_0_readdata;      // nios2_01_instruction_master_agent:av_readdata -> nios2_01_instruction_master_translator:uav_readdata
	wire         nios2_01_instruction_master_translator_avalon_universal_master_0_debugaccess;   // nios2_01_instruction_master_translator:uav_debugaccess -> nios2_01_instruction_master_agent:av_debugaccess
	wire  [15:0] nios2_01_instruction_master_translator_avalon_universal_master_0_address;       // nios2_01_instruction_master_translator:uav_address -> nios2_01_instruction_master_agent:av_address
	wire         nios2_01_instruction_master_translator_avalon_universal_master_0_read;          // nios2_01_instruction_master_translator:uav_read -> nios2_01_instruction_master_agent:av_read
	wire   [3:0] nios2_01_instruction_master_translator_avalon_universal_master_0_byteenable;    // nios2_01_instruction_master_translator:uav_byteenable -> nios2_01_instruction_master_agent:av_byteenable
	wire         nios2_01_instruction_master_translator_avalon_universal_master_0_readdatavalid; // nios2_01_instruction_master_agent:av_readdatavalid -> nios2_01_instruction_master_translator:uav_readdatavalid
	wire         nios2_01_instruction_master_translator_avalon_universal_master_0_lock;          // nios2_01_instruction_master_translator:uav_lock -> nios2_01_instruction_master_agent:av_lock
	wire         nios2_01_instruction_master_translator_avalon_universal_master_0_write;         // nios2_01_instruction_master_translator:uav_write -> nios2_01_instruction_master_agent:av_write
	wire  [31:0] nios2_01_instruction_master_translator_avalon_universal_master_0_writedata;     // nios2_01_instruction_master_translator:uav_writedata -> nios2_01_instruction_master_agent:av_writedata
	wire   [2:0] nios2_01_instruction_master_translator_avalon_universal_master_0_burstcount;    // nios2_01_instruction_master_translator:uav_burstcount -> nios2_01_instruction_master_agent:av_burstcount
	wire         rsp_mux_006_src_valid;                                                          // rsp_mux_006:src_valid -> nios2_01_instruction_master_agent:rp_valid
	wire  [95:0] rsp_mux_006_src_data;                                                           // rsp_mux_006:src_data -> nios2_01_instruction_master_agent:rp_data
	wire         rsp_mux_006_src_ready;                                                          // nios2_01_instruction_master_agent:rp_ready -> rsp_mux_006:src_ready
	wire  [24:0] rsp_mux_006_src_channel;                                                        // rsp_mux_006:src_channel -> nios2_01_instruction_master_agent:rp_channel
	wire         rsp_mux_006_src_startofpacket;                                                  // rsp_mux_006:src_startofpacket -> nios2_01_instruction_master_agent:rp_startofpacket
	wire         rsp_mux_006_src_endofpacket;                                                    // rsp_mux_006:src_endofpacket -> nios2_01_instruction_master_agent:rp_endofpacket
	wire         nios2_00_instruction_master_translator_avalon_universal_master_0_waitrequest;   // nios2_00_instruction_master_agent:av_waitrequest -> nios2_00_instruction_master_translator:uav_waitrequest
	wire  [31:0] nios2_00_instruction_master_translator_avalon_universal_master_0_readdata;      // nios2_00_instruction_master_agent:av_readdata -> nios2_00_instruction_master_translator:uav_readdata
	wire         nios2_00_instruction_master_translator_avalon_universal_master_0_debugaccess;   // nios2_00_instruction_master_translator:uav_debugaccess -> nios2_00_instruction_master_agent:av_debugaccess
	wire  [15:0] nios2_00_instruction_master_translator_avalon_universal_master_0_address;       // nios2_00_instruction_master_translator:uav_address -> nios2_00_instruction_master_agent:av_address
	wire         nios2_00_instruction_master_translator_avalon_universal_master_0_read;          // nios2_00_instruction_master_translator:uav_read -> nios2_00_instruction_master_agent:av_read
	wire   [3:0] nios2_00_instruction_master_translator_avalon_universal_master_0_byteenable;    // nios2_00_instruction_master_translator:uav_byteenable -> nios2_00_instruction_master_agent:av_byteenable
	wire         nios2_00_instruction_master_translator_avalon_universal_master_0_readdatavalid; // nios2_00_instruction_master_agent:av_readdatavalid -> nios2_00_instruction_master_translator:uav_readdatavalid
	wire         nios2_00_instruction_master_translator_avalon_universal_master_0_lock;          // nios2_00_instruction_master_translator:uav_lock -> nios2_00_instruction_master_agent:av_lock
	wire         nios2_00_instruction_master_translator_avalon_universal_master_0_write;         // nios2_00_instruction_master_translator:uav_write -> nios2_00_instruction_master_agent:av_write
	wire  [31:0] nios2_00_instruction_master_translator_avalon_universal_master_0_writedata;     // nios2_00_instruction_master_translator:uav_writedata -> nios2_00_instruction_master_agent:av_writedata
	wire   [2:0] nios2_00_instruction_master_translator_avalon_universal_master_0_burstcount;    // nios2_00_instruction_master_translator:uav_burstcount -> nios2_00_instruction_master_agent:av_burstcount
	wire         rsp_mux_007_src_valid;                                                          // rsp_mux_007:src_valid -> nios2_00_instruction_master_agent:rp_valid
	wire  [95:0] rsp_mux_007_src_data;                                                           // rsp_mux_007:src_data -> nios2_00_instruction_master_agent:rp_data
	wire         rsp_mux_007_src_ready;                                                          // nios2_00_instruction_master_agent:rp_ready -> rsp_mux_007:src_ready
	wire  [24:0] rsp_mux_007_src_channel;                                                        // rsp_mux_007:src_channel -> nios2_00_instruction_master_agent:rp_channel
	wire         rsp_mux_007_src_startofpacket;                                                  // rsp_mux_007:src_startofpacket -> nios2_00_instruction_master_agent:rp_startofpacket
	wire         rsp_mux_007_src_endofpacket;                                                    // rsp_mux_007:src_endofpacket -> nios2_00_instruction_master_agent:rp_endofpacket
	wire  [31:0] jtag_uart_0_avalon_jtag_slave_agent_m0_readdata;                                // jtag_uart_0_avalon_jtag_slave_translator:uav_readdata -> jtag_uart_0_avalon_jtag_slave_agent:m0_readdata
	wire         jtag_uart_0_avalon_jtag_slave_agent_m0_waitrequest;                             // jtag_uart_0_avalon_jtag_slave_translator:uav_waitrequest -> jtag_uart_0_avalon_jtag_slave_agent:m0_waitrequest
	wire         jtag_uart_0_avalon_jtag_slave_agent_m0_debugaccess;                             // jtag_uart_0_avalon_jtag_slave_agent:m0_debugaccess -> jtag_uart_0_avalon_jtag_slave_translator:uav_debugaccess
	wire  [15:0] jtag_uart_0_avalon_jtag_slave_agent_m0_address;                                 // jtag_uart_0_avalon_jtag_slave_agent:m0_address -> jtag_uart_0_avalon_jtag_slave_translator:uav_address
	wire   [3:0] jtag_uart_0_avalon_jtag_slave_agent_m0_byteenable;                              // jtag_uart_0_avalon_jtag_slave_agent:m0_byteenable -> jtag_uart_0_avalon_jtag_slave_translator:uav_byteenable
	wire         jtag_uart_0_avalon_jtag_slave_agent_m0_read;                                    // jtag_uart_0_avalon_jtag_slave_agent:m0_read -> jtag_uart_0_avalon_jtag_slave_translator:uav_read
	wire         jtag_uart_0_avalon_jtag_slave_agent_m0_readdatavalid;                           // jtag_uart_0_avalon_jtag_slave_translator:uav_readdatavalid -> jtag_uart_0_avalon_jtag_slave_agent:m0_readdatavalid
	wire         jtag_uart_0_avalon_jtag_slave_agent_m0_lock;                                    // jtag_uart_0_avalon_jtag_slave_agent:m0_lock -> jtag_uart_0_avalon_jtag_slave_translator:uav_lock
	wire  [31:0] jtag_uart_0_avalon_jtag_slave_agent_m0_writedata;                               // jtag_uart_0_avalon_jtag_slave_agent:m0_writedata -> jtag_uart_0_avalon_jtag_slave_translator:uav_writedata
	wire         jtag_uart_0_avalon_jtag_slave_agent_m0_write;                                   // jtag_uart_0_avalon_jtag_slave_agent:m0_write -> jtag_uart_0_avalon_jtag_slave_translator:uav_write
	wire   [2:0] jtag_uart_0_avalon_jtag_slave_agent_m0_burstcount;                              // jtag_uart_0_avalon_jtag_slave_agent:m0_burstcount -> jtag_uart_0_avalon_jtag_slave_translator:uav_burstcount
	wire         jtag_uart_0_avalon_jtag_slave_agent_rf_source_valid;                            // jtag_uart_0_avalon_jtag_slave_agent:rf_source_valid -> jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:in_valid
	wire  [96:0] jtag_uart_0_avalon_jtag_slave_agent_rf_source_data;                             // jtag_uart_0_avalon_jtag_slave_agent:rf_source_data -> jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:in_data
	wire         jtag_uart_0_avalon_jtag_slave_agent_rf_source_ready;                            // jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:in_ready -> jtag_uart_0_avalon_jtag_slave_agent:rf_source_ready
	wire         jtag_uart_0_avalon_jtag_slave_agent_rf_source_startofpacket;                    // jtag_uart_0_avalon_jtag_slave_agent:rf_source_startofpacket -> jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:in_startofpacket
	wire         jtag_uart_0_avalon_jtag_slave_agent_rf_source_endofpacket;                      // jtag_uart_0_avalon_jtag_slave_agent:rf_source_endofpacket -> jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:in_endofpacket
	wire         jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_valid;                         // jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:out_valid -> jtag_uart_0_avalon_jtag_slave_agent:rf_sink_valid
	wire  [96:0] jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_data;                          // jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:out_data -> jtag_uart_0_avalon_jtag_slave_agent:rf_sink_data
	wire         jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_ready;                         // jtag_uart_0_avalon_jtag_slave_agent:rf_sink_ready -> jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:out_ready
	wire         jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_startofpacket;                 // jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:out_startofpacket -> jtag_uart_0_avalon_jtag_slave_agent:rf_sink_startofpacket
	wire         jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_endofpacket;                   // jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:out_endofpacket -> jtag_uart_0_avalon_jtag_slave_agent:rf_sink_endofpacket
	wire         cmd_mux_src_valid;                                                              // cmd_mux:src_valid -> jtag_uart_0_avalon_jtag_slave_agent:cp_valid
	wire  [95:0] cmd_mux_src_data;                                                               // cmd_mux:src_data -> jtag_uart_0_avalon_jtag_slave_agent:cp_data
	wire         cmd_mux_src_ready;                                                              // jtag_uart_0_avalon_jtag_slave_agent:cp_ready -> cmd_mux:src_ready
	wire  [24:0] cmd_mux_src_channel;                                                            // cmd_mux:src_channel -> jtag_uart_0_avalon_jtag_slave_agent:cp_channel
	wire         cmd_mux_src_startofpacket;                                                      // cmd_mux:src_startofpacket -> jtag_uart_0_avalon_jtag_slave_agent:cp_startofpacket
	wire         cmd_mux_src_endofpacket;                                                        // cmd_mux:src_endofpacket -> jtag_uart_0_avalon_jtag_slave_agent:cp_endofpacket
	wire  [31:0] nios2_00_debug_mem_slave_agent_m0_readdata;                                     // nios2_00_debug_mem_slave_translator:uav_readdata -> nios2_00_debug_mem_slave_agent:m0_readdata
	wire         nios2_00_debug_mem_slave_agent_m0_waitrequest;                                  // nios2_00_debug_mem_slave_translator:uav_waitrequest -> nios2_00_debug_mem_slave_agent:m0_waitrequest
	wire         nios2_00_debug_mem_slave_agent_m0_debugaccess;                                  // nios2_00_debug_mem_slave_agent:m0_debugaccess -> nios2_00_debug_mem_slave_translator:uav_debugaccess
	wire  [15:0] nios2_00_debug_mem_slave_agent_m0_address;                                      // nios2_00_debug_mem_slave_agent:m0_address -> nios2_00_debug_mem_slave_translator:uav_address
	wire   [3:0] nios2_00_debug_mem_slave_agent_m0_byteenable;                                   // nios2_00_debug_mem_slave_agent:m0_byteenable -> nios2_00_debug_mem_slave_translator:uav_byteenable
	wire         nios2_00_debug_mem_slave_agent_m0_read;                                         // nios2_00_debug_mem_slave_agent:m0_read -> nios2_00_debug_mem_slave_translator:uav_read
	wire         nios2_00_debug_mem_slave_agent_m0_readdatavalid;                                // nios2_00_debug_mem_slave_translator:uav_readdatavalid -> nios2_00_debug_mem_slave_agent:m0_readdatavalid
	wire         nios2_00_debug_mem_slave_agent_m0_lock;                                         // nios2_00_debug_mem_slave_agent:m0_lock -> nios2_00_debug_mem_slave_translator:uav_lock
	wire  [31:0] nios2_00_debug_mem_slave_agent_m0_writedata;                                    // nios2_00_debug_mem_slave_agent:m0_writedata -> nios2_00_debug_mem_slave_translator:uav_writedata
	wire         nios2_00_debug_mem_slave_agent_m0_write;                                        // nios2_00_debug_mem_slave_agent:m0_write -> nios2_00_debug_mem_slave_translator:uav_write
	wire   [2:0] nios2_00_debug_mem_slave_agent_m0_burstcount;                                   // nios2_00_debug_mem_slave_agent:m0_burstcount -> nios2_00_debug_mem_slave_translator:uav_burstcount
	wire         nios2_00_debug_mem_slave_agent_rf_source_valid;                                 // nios2_00_debug_mem_slave_agent:rf_source_valid -> nios2_00_debug_mem_slave_agent_rsp_fifo:in_valid
	wire  [96:0] nios2_00_debug_mem_slave_agent_rf_source_data;                                  // nios2_00_debug_mem_slave_agent:rf_source_data -> nios2_00_debug_mem_slave_agent_rsp_fifo:in_data
	wire         nios2_00_debug_mem_slave_agent_rf_source_ready;                                 // nios2_00_debug_mem_slave_agent_rsp_fifo:in_ready -> nios2_00_debug_mem_slave_agent:rf_source_ready
	wire         nios2_00_debug_mem_slave_agent_rf_source_startofpacket;                         // nios2_00_debug_mem_slave_agent:rf_source_startofpacket -> nios2_00_debug_mem_slave_agent_rsp_fifo:in_startofpacket
	wire         nios2_00_debug_mem_slave_agent_rf_source_endofpacket;                           // nios2_00_debug_mem_slave_agent:rf_source_endofpacket -> nios2_00_debug_mem_slave_agent_rsp_fifo:in_endofpacket
	wire         nios2_00_debug_mem_slave_agent_rsp_fifo_out_valid;                              // nios2_00_debug_mem_slave_agent_rsp_fifo:out_valid -> nios2_00_debug_mem_slave_agent:rf_sink_valid
	wire  [96:0] nios2_00_debug_mem_slave_agent_rsp_fifo_out_data;                               // nios2_00_debug_mem_slave_agent_rsp_fifo:out_data -> nios2_00_debug_mem_slave_agent:rf_sink_data
	wire         nios2_00_debug_mem_slave_agent_rsp_fifo_out_ready;                              // nios2_00_debug_mem_slave_agent:rf_sink_ready -> nios2_00_debug_mem_slave_agent_rsp_fifo:out_ready
	wire         nios2_00_debug_mem_slave_agent_rsp_fifo_out_startofpacket;                      // nios2_00_debug_mem_slave_agent_rsp_fifo:out_startofpacket -> nios2_00_debug_mem_slave_agent:rf_sink_startofpacket
	wire         nios2_00_debug_mem_slave_agent_rsp_fifo_out_endofpacket;                        // nios2_00_debug_mem_slave_agent_rsp_fifo:out_endofpacket -> nios2_00_debug_mem_slave_agent:rf_sink_endofpacket
	wire         cmd_mux_001_src_valid;                                                          // cmd_mux_001:src_valid -> nios2_00_debug_mem_slave_agent:cp_valid
	wire  [95:0] cmd_mux_001_src_data;                                                           // cmd_mux_001:src_data -> nios2_00_debug_mem_slave_agent:cp_data
	wire         cmd_mux_001_src_ready;                                                          // nios2_00_debug_mem_slave_agent:cp_ready -> cmd_mux_001:src_ready
	wire  [24:0] cmd_mux_001_src_channel;                                                        // cmd_mux_001:src_channel -> nios2_00_debug_mem_slave_agent:cp_channel
	wire         cmd_mux_001_src_startofpacket;                                                  // cmd_mux_001:src_startofpacket -> nios2_00_debug_mem_slave_agent:cp_startofpacket
	wire         cmd_mux_001_src_endofpacket;                                                    // cmd_mux_001:src_endofpacket -> nios2_00_debug_mem_slave_agent:cp_endofpacket
	wire  [31:0] fifo_source_00_in_agent_m0_readdata;                                            // fifo_source_00_in_translator:uav_readdata -> fifo_source_00_in_agent:m0_readdata
	wire         fifo_source_00_in_agent_m0_waitrequest;                                         // fifo_source_00_in_translator:uav_waitrequest -> fifo_source_00_in_agent:m0_waitrequest
	wire         fifo_source_00_in_agent_m0_debugaccess;                                         // fifo_source_00_in_agent:m0_debugaccess -> fifo_source_00_in_translator:uav_debugaccess
	wire  [15:0] fifo_source_00_in_agent_m0_address;                                             // fifo_source_00_in_agent:m0_address -> fifo_source_00_in_translator:uav_address
	wire   [3:0] fifo_source_00_in_agent_m0_byteenable;                                          // fifo_source_00_in_agent:m0_byteenable -> fifo_source_00_in_translator:uav_byteenable
	wire         fifo_source_00_in_agent_m0_read;                                                // fifo_source_00_in_agent:m0_read -> fifo_source_00_in_translator:uav_read
	wire         fifo_source_00_in_agent_m0_readdatavalid;                                       // fifo_source_00_in_translator:uav_readdatavalid -> fifo_source_00_in_agent:m0_readdatavalid
	wire         fifo_source_00_in_agent_m0_lock;                                                // fifo_source_00_in_agent:m0_lock -> fifo_source_00_in_translator:uav_lock
	wire  [31:0] fifo_source_00_in_agent_m0_writedata;                                           // fifo_source_00_in_agent:m0_writedata -> fifo_source_00_in_translator:uav_writedata
	wire         fifo_source_00_in_agent_m0_write;                                               // fifo_source_00_in_agent:m0_write -> fifo_source_00_in_translator:uav_write
	wire   [2:0] fifo_source_00_in_agent_m0_burstcount;                                          // fifo_source_00_in_agent:m0_burstcount -> fifo_source_00_in_translator:uav_burstcount
	wire         fifo_source_00_in_agent_rf_source_valid;                                        // fifo_source_00_in_agent:rf_source_valid -> fifo_source_00_in_agent_rsp_fifo:in_valid
	wire  [96:0] fifo_source_00_in_agent_rf_source_data;                                         // fifo_source_00_in_agent:rf_source_data -> fifo_source_00_in_agent_rsp_fifo:in_data
	wire         fifo_source_00_in_agent_rf_source_ready;                                        // fifo_source_00_in_agent_rsp_fifo:in_ready -> fifo_source_00_in_agent:rf_source_ready
	wire         fifo_source_00_in_agent_rf_source_startofpacket;                                // fifo_source_00_in_agent:rf_source_startofpacket -> fifo_source_00_in_agent_rsp_fifo:in_startofpacket
	wire         fifo_source_00_in_agent_rf_source_endofpacket;                                  // fifo_source_00_in_agent:rf_source_endofpacket -> fifo_source_00_in_agent_rsp_fifo:in_endofpacket
	wire         fifo_source_00_in_agent_rsp_fifo_out_valid;                                     // fifo_source_00_in_agent_rsp_fifo:out_valid -> fifo_source_00_in_agent:rf_sink_valid
	wire  [96:0] fifo_source_00_in_agent_rsp_fifo_out_data;                                      // fifo_source_00_in_agent_rsp_fifo:out_data -> fifo_source_00_in_agent:rf_sink_data
	wire         fifo_source_00_in_agent_rsp_fifo_out_ready;                                     // fifo_source_00_in_agent:rf_sink_ready -> fifo_source_00_in_agent_rsp_fifo:out_ready
	wire         fifo_source_00_in_agent_rsp_fifo_out_startofpacket;                             // fifo_source_00_in_agent_rsp_fifo:out_startofpacket -> fifo_source_00_in_agent:rf_sink_startofpacket
	wire         fifo_source_00_in_agent_rsp_fifo_out_endofpacket;                               // fifo_source_00_in_agent_rsp_fifo:out_endofpacket -> fifo_source_00_in_agent:rf_sink_endofpacket
	wire         cmd_mux_002_src_valid;                                                          // cmd_mux_002:src_valid -> fifo_source_00_in_agent:cp_valid
	wire  [95:0] cmd_mux_002_src_data;                                                           // cmd_mux_002:src_data -> fifo_source_00_in_agent:cp_data
	wire         cmd_mux_002_src_ready;                                                          // fifo_source_00_in_agent:cp_ready -> cmd_mux_002:src_ready
	wire  [24:0] cmd_mux_002_src_channel;                                                        // cmd_mux_002:src_channel -> fifo_source_00_in_agent:cp_channel
	wire         cmd_mux_002_src_startofpacket;                                                  // cmd_mux_002:src_startofpacket -> fifo_source_00_in_agent:cp_startofpacket
	wire         cmd_mux_002_src_endofpacket;                                                    // cmd_mux_002:src_endofpacket -> fifo_source_00_in_agent:cp_endofpacket
	wire  [31:0] fifo_sink_00_in_csr_agent_m0_readdata;                                          // fifo_sink_00_in_csr_translator:uav_readdata -> fifo_sink_00_in_csr_agent:m0_readdata
	wire         fifo_sink_00_in_csr_agent_m0_waitrequest;                                       // fifo_sink_00_in_csr_translator:uav_waitrequest -> fifo_sink_00_in_csr_agent:m0_waitrequest
	wire         fifo_sink_00_in_csr_agent_m0_debugaccess;                                       // fifo_sink_00_in_csr_agent:m0_debugaccess -> fifo_sink_00_in_csr_translator:uav_debugaccess
	wire  [15:0] fifo_sink_00_in_csr_agent_m0_address;                                           // fifo_sink_00_in_csr_agent:m0_address -> fifo_sink_00_in_csr_translator:uav_address
	wire   [3:0] fifo_sink_00_in_csr_agent_m0_byteenable;                                        // fifo_sink_00_in_csr_agent:m0_byteenable -> fifo_sink_00_in_csr_translator:uav_byteenable
	wire         fifo_sink_00_in_csr_agent_m0_read;                                              // fifo_sink_00_in_csr_agent:m0_read -> fifo_sink_00_in_csr_translator:uav_read
	wire         fifo_sink_00_in_csr_agent_m0_readdatavalid;                                     // fifo_sink_00_in_csr_translator:uav_readdatavalid -> fifo_sink_00_in_csr_agent:m0_readdatavalid
	wire         fifo_sink_00_in_csr_agent_m0_lock;                                              // fifo_sink_00_in_csr_agent:m0_lock -> fifo_sink_00_in_csr_translator:uav_lock
	wire  [31:0] fifo_sink_00_in_csr_agent_m0_writedata;                                         // fifo_sink_00_in_csr_agent:m0_writedata -> fifo_sink_00_in_csr_translator:uav_writedata
	wire         fifo_sink_00_in_csr_agent_m0_write;                                             // fifo_sink_00_in_csr_agent:m0_write -> fifo_sink_00_in_csr_translator:uav_write
	wire   [2:0] fifo_sink_00_in_csr_agent_m0_burstcount;                                        // fifo_sink_00_in_csr_agent:m0_burstcount -> fifo_sink_00_in_csr_translator:uav_burstcount
	wire         fifo_sink_00_in_csr_agent_rf_source_valid;                                      // fifo_sink_00_in_csr_agent:rf_source_valid -> fifo_sink_00_in_csr_agent_rsp_fifo:in_valid
	wire  [96:0] fifo_sink_00_in_csr_agent_rf_source_data;                                       // fifo_sink_00_in_csr_agent:rf_source_data -> fifo_sink_00_in_csr_agent_rsp_fifo:in_data
	wire         fifo_sink_00_in_csr_agent_rf_source_ready;                                      // fifo_sink_00_in_csr_agent_rsp_fifo:in_ready -> fifo_sink_00_in_csr_agent:rf_source_ready
	wire         fifo_sink_00_in_csr_agent_rf_source_startofpacket;                              // fifo_sink_00_in_csr_agent:rf_source_startofpacket -> fifo_sink_00_in_csr_agent_rsp_fifo:in_startofpacket
	wire         fifo_sink_00_in_csr_agent_rf_source_endofpacket;                                // fifo_sink_00_in_csr_agent:rf_source_endofpacket -> fifo_sink_00_in_csr_agent_rsp_fifo:in_endofpacket
	wire         fifo_sink_00_in_csr_agent_rsp_fifo_out_valid;                                   // fifo_sink_00_in_csr_agent_rsp_fifo:out_valid -> fifo_sink_00_in_csr_agent:rf_sink_valid
	wire  [96:0] fifo_sink_00_in_csr_agent_rsp_fifo_out_data;                                    // fifo_sink_00_in_csr_agent_rsp_fifo:out_data -> fifo_sink_00_in_csr_agent:rf_sink_data
	wire         fifo_sink_00_in_csr_agent_rsp_fifo_out_ready;                                   // fifo_sink_00_in_csr_agent:rf_sink_ready -> fifo_sink_00_in_csr_agent_rsp_fifo:out_ready
	wire         fifo_sink_00_in_csr_agent_rsp_fifo_out_startofpacket;                           // fifo_sink_00_in_csr_agent_rsp_fifo:out_startofpacket -> fifo_sink_00_in_csr_agent:rf_sink_startofpacket
	wire         fifo_sink_00_in_csr_agent_rsp_fifo_out_endofpacket;                             // fifo_sink_00_in_csr_agent_rsp_fifo:out_endofpacket -> fifo_sink_00_in_csr_agent:rf_sink_endofpacket
	wire         cmd_mux_003_src_valid;                                                          // cmd_mux_003:src_valid -> fifo_sink_00_in_csr_agent:cp_valid
	wire  [95:0] cmd_mux_003_src_data;                                                           // cmd_mux_003:src_data -> fifo_sink_00_in_csr_agent:cp_data
	wire         cmd_mux_003_src_ready;                                                          // fifo_sink_00_in_csr_agent:cp_ready -> cmd_mux_003:src_ready
	wire  [24:0] cmd_mux_003_src_channel;                                                        // cmd_mux_003:src_channel -> fifo_sink_00_in_csr_agent:cp_channel
	wire         cmd_mux_003_src_startofpacket;                                                  // cmd_mux_003:src_startofpacket -> fifo_sink_00_in_csr_agent:cp_startofpacket
	wire         cmd_mux_003_src_endofpacket;                                                    // cmd_mux_003:src_endofpacket -> fifo_sink_00_in_csr_agent:cp_endofpacket
	wire  [31:0] fifo_source_00_in_csr_agent_m0_readdata;                                        // fifo_source_00_in_csr_translator:uav_readdata -> fifo_source_00_in_csr_agent:m0_readdata
	wire         fifo_source_00_in_csr_agent_m0_waitrequest;                                     // fifo_source_00_in_csr_translator:uav_waitrequest -> fifo_source_00_in_csr_agent:m0_waitrequest
	wire         fifo_source_00_in_csr_agent_m0_debugaccess;                                     // fifo_source_00_in_csr_agent:m0_debugaccess -> fifo_source_00_in_csr_translator:uav_debugaccess
	wire  [15:0] fifo_source_00_in_csr_agent_m0_address;                                         // fifo_source_00_in_csr_agent:m0_address -> fifo_source_00_in_csr_translator:uav_address
	wire   [3:0] fifo_source_00_in_csr_agent_m0_byteenable;                                      // fifo_source_00_in_csr_agent:m0_byteenable -> fifo_source_00_in_csr_translator:uav_byteenable
	wire         fifo_source_00_in_csr_agent_m0_read;                                            // fifo_source_00_in_csr_agent:m0_read -> fifo_source_00_in_csr_translator:uav_read
	wire         fifo_source_00_in_csr_agent_m0_readdatavalid;                                   // fifo_source_00_in_csr_translator:uav_readdatavalid -> fifo_source_00_in_csr_agent:m0_readdatavalid
	wire         fifo_source_00_in_csr_agent_m0_lock;                                            // fifo_source_00_in_csr_agent:m0_lock -> fifo_source_00_in_csr_translator:uav_lock
	wire  [31:0] fifo_source_00_in_csr_agent_m0_writedata;                                       // fifo_source_00_in_csr_agent:m0_writedata -> fifo_source_00_in_csr_translator:uav_writedata
	wire         fifo_source_00_in_csr_agent_m0_write;                                           // fifo_source_00_in_csr_agent:m0_write -> fifo_source_00_in_csr_translator:uav_write
	wire   [2:0] fifo_source_00_in_csr_agent_m0_burstcount;                                      // fifo_source_00_in_csr_agent:m0_burstcount -> fifo_source_00_in_csr_translator:uav_burstcount
	wire         fifo_source_00_in_csr_agent_rf_source_valid;                                    // fifo_source_00_in_csr_agent:rf_source_valid -> fifo_source_00_in_csr_agent_rsp_fifo:in_valid
	wire  [96:0] fifo_source_00_in_csr_agent_rf_source_data;                                     // fifo_source_00_in_csr_agent:rf_source_data -> fifo_source_00_in_csr_agent_rsp_fifo:in_data
	wire         fifo_source_00_in_csr_agent_rf_source_ready;                                    // fifo_source_00_in_csr_agent_rsp_fifo:in_ready -> fifo_source_00_in_csr_agent:rf_source_ready
	wire         fifo_source_00_in_csr_agent_rf_source_startofpacket;                            // fifo_source_00_in_csr_agent:rf_source_startofpacket -> fifo_source_00_in_csr_agent_rsp_fifo:in_startofpacket
	wire         fifo_source_00_in_csr_agent_rf_source_endofpacket;                              // fifo_source_00_in_csr_agent:rf_source_endofpacket -> fifo_source_00_in_csr_agent_rsp_fifo:in_endofpacket
	wire         fifo_source_00_in_csr_agent_rsp_fifo_out_valid;                                 // fifo_source_00_in_csr_agent_rsp_fifo:out_valid -> fifo_source_00_in_csr_agent:rf_sink_valid
	wire  [96:0] fifo_source_00_in_csr_agent_rsp_fifo_out_data;                                  // fifo_source_00_in_csr_agent_rsp_fifo:out_data -> fifo_source_00_in_csr_agent:rf_sink_data
	wire         fifo_source_00_in_csr_agent_rsp_fifo_out_ready;                                 // fifo_source_00_in_csr_agent:rf_sink_ready -> fifo_source_00_in_csr_agent_rsp_fifo:out_ready
	wire         fifo_source_00_in_csr_agent_rsp_fifo_out_startofpacket;                         // fifo_source_00_in_csr_agent_rsp_fifo:out_startofpacket -> fifo_source_00_in_csr_agent:rf_sink_startofpacket
	wire         fifo_source_00_in_csr_agent_rsp_fifo_out_endofpacket;                           // fifo_source_00_in_csr_agent_rsp_fifo:out_endofpacket -> fifo_source_00_in_csr_agent:rf_sink_endofpacket
	wire         cmd_mux_004_src_valid;                                                          // cmd_mux_004:src_valid -> fifo_source_00_in_csr_agent:cp_valid
	wire  [95:0] cmd_mux_004_src_data;                                                           // cmd_mux_004:src_data -> fifo_source_00_in_csr_agent:cp_data
	wire         cmd_mux_004_src_ready;                                                          // fifo_source_00_in_csr_agent:cp_ready -> cmd_mux_004:src_ready
	wire  [24:0] cmd_mux_004_src_channel;                                                        // cmd_mux_004:src_channel -> fifo_source_00_in_csr_agent:cp_channel
	wire         cmd_mux_004_src_startofpacket;                                                  // cmd_mux_004:src_startofpacket -> fifo_source_00_in_csr_agent:cp_startofpacket
	wire         cmd_mux_004_src_endofpacket;                                                    // cmd_mux_004:src_endofpacket -> fifo_source_00_in_csr_agent:cp_endofpacket
	wire  [31:0] fifo_sink_00_out_agent_m0_readdata;                                             // fifo_sink_00_out_translator:uav_readdata -> fifo_sink_00_out_agent:m0_readdata
	wire         fifo_sink_00_out_agent_m0_waitrequest;                                          // fifo_sink_00_out_translator:uav_waitrequest -> fifo_sink_00_out_agent:m0_waitrequest
	wire         fifo_sink_00_out_agent_m0_debugaccess;                                          // fifo_sink_00_out_agent:m0_debugaccess -> fifo_sink_00_out_translator:uav_debugaccess
	wire  [15:0] fifo_sink_00_out_agent_m0_address;                                              // fifo_sink_00_out_agent:m0_address -> fifo_sink_00_out_translator:uav_address
	wire   [3:0] fifo_sink_00_out_agent_m0_byteenable;                                           // fifo_sink_00_out_agent:m0_byteenable -> fifo_sink_00_out_translator:uav_byteenable
	wire         fifo_sink_00_out_agent_m0_read;                                                 // fifo_sink_00_out_agent:m0_read -> fifo_sink_00_out_translator:uav_read
	wire         fifo_sink_00_out_agent_m0_readdatavalid;                                        // fifo_sink_00_out_translator:uav_readdatavalid -> fifo_sink_00_out_agent:m0_readdatavalid
	wire         fifo_sink_00_out_agent_m0_lock;                                                 // fifo_sink_00_out_agent:m0_lock -> fifo_sink_00_out_translator:uav_lock
	wire  [31:0] fifo_sink_00_out_agent_m0_writedata;                                            // fifo_sink_00_out_agent:m0_writedata -> fifo_sink_00_out_translator:uav_writedata
	wire         fifo_sink_00_out_agent_m0_write;                                                // fifo_sink_00_out_agent:m0_write -> fifo_sink_00_out_translator:uav_write
	wire   [2:0] fifo_sink_00_out_agent_m0_burstcount;                                           // fifo_sink_00_out_agent:m0_burstcount -> fifo_sink_00_out_translator:uav_burstcount
	wire         fifo_sink_00_out_agent_rf_source_valid;                                         // fifo_sink_00_out_agent:rf_source_valid -> fifo_sink_00_out_agent_rsp_fifo:in_valid
	wire  [96:0] fifo_sink_00_out_agent_rf_source_data;                                          // fifo_sink_00_out_agent:rf_source_data -> fifo_sink_00_out_agent_rsp_fifo:in_data
	wire         fifo_sink_00_out_agent_rf_source_ready;                                         // fifo_sink_00_out_agent_rsp_fifo:in_ready -> fifo_sink_00_out_agent:rf_source_ready
	wire         fifo_sink_00_out_agent_rf_source_startofpacket;                                 // fifo_sink_00_out_agent:rf_source_startofpacket -> fifo_sink_00_out_agent_rsp_fifo:in_startofpacket
	wire         fifo_sink_00_out_agent_rf_source_endofpacket;                                   // fifo_sink_00_out_agent:rf_source_endofpacket -> fifo_sink_00_out_agent_rsp_fifo:in_endofpacket
	wire         fifo_sink_00_out_agent_rsp_fifo_out_valid;                                      // fifo_sink_00_out_agent_rsp_fifo:out_valid -> fifo_sink_00_out_agent:rf_sink_valid
	wire  [96:0] fifo_sink_00_out_agent_rsp_fifo_out_data;                                       // fifo_sink_00_out_agent_rsp_fifo:out_data -> fifo_sink_00_out_agent:rf_sink_data
	wire         fifo_sink_00_out_agent_rsp_fifo_out_ready;                                      // fifo_sink_00_out_agent:rf_sink_ready -> fifo_sink_00_out_agent_rsp_fifo:out_ready
	wire         fifo_sink_00_out_agent_rsp_fifo_out_startofpacket;                              // fifo_sink_00_out_agent_rsp_fifo:out_startofpacket -> fifo_sink_00_out_agent:rf_sink_startofpacket
	wire         fifo_sink_00_out_agent_rsp_fifo_out_endofpacket;                                // fifo_sink_00_out_agent_rsp_fifo:out_endofpacket -> fifo_sink_00_out_agent:rf_sink_endofpacket
	wire         cmd_mux_005_src_valid;                                                          // cmd_mux_005:src_valid -> fifo_sink_00_out_agent:cp_valid
	wire  [95:0] cmd_mux_005_src_data;                                                           // cmd_mux_005:src_data -> fifo_sink_00_out_agent:cp_data
	wire         cmd_mux_005_src_ready;                                                          // fifo_sink_00_out_agent:cp_ready -> cmd_mux_005:src_ready
	wire  [24:0] cmd_mux_005_src_channel;                                                        // cmd_mux_005:src_channel -> fifo_sink_00_out_agent:cp_channel
	wire         cmd_mux_005_src_startofpacket;                                                  // cmd_mux_005:src_startofpacket -> fifo_sink_00_out_agent:cp_startofpacket
	wire         cmd_mux_005_src_endofpacket;                                                    // cmd_mux_005:src_endofpacket -> fifo_sink_00_out_agent:cp_endofpacket
	wire  [31:0] data_mem_00_s1_agent_m0_readdata;                                               // data_mem_00_s1_translator:uav_readdata -> data_mem_00_s1_agent:m0_readdata
	wire         data_mem_00_s1_agent_m0_waitrequest;                                            // data_mem_00_s1_translator:uav_waitrequest -> data_mem_00_s1_agent:m0_waitrequest
	wire         data_mem_00_s1_agent_m0_debugaccess;                                            // data_mem_00_s1_agent:m0_debugaccess -> data_mem_00_s1_translator:uav_debugaccess
	wire  [15:0] data_mem_00_s1_agent_m0_address;                                                // data_mem_00_s1_agent:m0_address -> data_mem_00_s1_translator:uav_address
	wire   [3:0] data_mem_00_s1_agent_m0_byteenable;                                             // data_mem_00_s1_agent:m0_byteenable -> data_mem_00_s1_translator:uav_byteenable
	wire         data_mem_00_s1_agent_m0_read;                                                   // data_mem_00_s1_agent:m0_read -> data_mem_00_s1_translator:uav_read
	wire         data_mem_00_s1_agent_m0_readdatavalid;                                          // data_mem_00_s1_translator:uav_readdatavalid -> data_mem_00_s1_agent:m0_readdatavalid
	wire         data_mem_00_s1_agent_m0_lock;                                                   // data_mem_00_s1_agent:m0_lock -> data_mem_00_s1_translator:uav_lock
	wire  [31:0] data_mem_00_s1_agent_m0_writedata;                                              // data_mem_00_s1_agent:m0_writedata -> data_mem_00_s1_translator:uav_writedata
	wire         data_mem_00_s1_agent_m0_write;                                                  // data_mem_00_s1_agent:m0_write -> data_mem_00_s1_translator:uav_write
	wire   [2:0] data_mem_00_s1_agent_m0_burstcount;                                             // data_mem_00_s1_agent:m0_burstcount -> data_mem_00_s1_translator:uav_burstcount
	wire         data_mem_00_s1_agent_rf_source_valid;                                           // data_mem_00_s1_agent:rf_source_valid -> data_mem_00_s1_agent_rsp_fifo:in_valid
	wire  [96:0] data_mem_00_s1_agent_rf_source_data;                                            // data_mem_00_s1_agent:rf_source_data -> data_mem_00_s1_agent_rsp_fifo:in_data
	wire         data_mem_00_s1_agent_rf_source_ready;                                           // data_mem_00_s1_agent_rsp_fifo:in_ready -> data_mem_00_s1_agent:rf_source_ready
	wire         data_mem_00_s1_agent_rf_source_startofpacket;                                   // data_mem_00_s1_agent:rf_source_startofpacket -> data_mem_00_s1_agent_rsp_fifo:in_startofpacket
	wire         data_mem_00_s1_agent_rf_source_endofpacket;                                     // data_mem_00_s1_agent:rf_source_endofpacket -> data_mem_00_s1_agent_rsp_fifo:in_endofpacket
	wire         data_mem_00_s1_agent_rsp_fifo_out_valid;                                        // data_mem_00_s1_agent_rsp_fifo:out_valid -> data_mem_00_s1_agent:rf_sink_valid
	wire  [96:0] data_mem_00_s1_agent_rsp_fifo_out_data;                                         // data_mem_00_s1_agent_rsp_fifo:out_data -> data_mem_00_s1_agent:rf_sink_data
	wire         data_mem_00_s1_agent_rsp_fifo_out_ready;                                        // data_mem_00_s1_agent:rf_sink_ready -> data_mem_00_s1_agent_rsp_fifo:out_ready
	wire         data_mem_00_s1_agent_rsp_fifo_out_startofpacket;                                // data_mem_00_s1_agent_rsp_fifo:out_startofpacket -> data_mem_00_s1_agent:rf_sink_startofpacket
	wire         data_mem_00_s1_agent_rsp_fifo_out_endofpacket;                                  // data_mem_00_s1_agent_rsp_fifo:out_endofpacket -> data_mem_00_s1_agent:rf_sink_endofpacket
	wire         cmd_mux_006_src_valid;                                                          // cmd_mux_006:src_valid -> data_mem_00_s1_agent:cp_valid
	wire  [95:0] cmd_mux_006_src_data;                                                           // cmd_mux_006:src_data -> data_mem_00_s1_agent:cp_data
	wire         cmd_mux_006_src_ready;                                                          // data_mem_00_s1_agent:cp_ready -> cmd_mux_006:src_ready
	wire  [24:0] cmd_mux_006_src_channel;                                                        // cmd_mux_006:src_channel -> data_mem_00_s1_agent:cp_channel
	wire         cmd_mux_006_src_startofpacket;                                                  // cmd_mux_006:src_startofpacket -> data_mem_00_s1_agent:cp_startofpacket
	wire         cmd_mux_006_src_endofpacket;                                                    // cmd_mux_006:src_endofpacket -> data_mem_00_s1_agent:cp_endofpacket
	wire  [31:0] nios2_11_debug_mem_slave_agent_m0_readdata;                                     // nios2_11_debug_mem_slave_translator:uav_readdata -> nios2_11_debug_mem_slave_agent:m0_readdata
	wire         nios2_11_debug_mem_slave_agent_m0_waitrequest;                                  // nios2_11_debug_mem_slave_translator:uav_waitrequest -> nios2_11_debug_mem_slave_agent:m0_waitrequest
	wire         nios2_11_debug_mem_slave_agent_m0_debugaccess;                                  // nios2_11_debug_mem_slave_agent:m0_debugaccess -> nios2_11_debug_mem_slave_translator:uav_debugaccess
	wire  [15:0] nios2_11_debug_mem_slave_agent_m0_address;                                      // nios2_11_debug_mem_slave_agent:m0_address -> nios2_11_debug_mem_slave_translator:uav_address
	wire   [3:0] nios2_11_debug_mem_slave_agent_m0_byteenable;                                   // nios2_11_debug_mem_slave_agent:m0_byteenable -> nios2_11_debug_mem_slave_translator:uav_byteenable
	wire         nios2_11_debug_mem_slave_agent_m0_read;                                         // nios2_11_debug_mem_slave_agent:m0_read -> nios2_11_debug_mem_slave_translator:uav_read
	wire         nios2_11_debug_mem_slave_agent_m0_readdatavalid;                                // nios2_11_debug_mem_slave_translator:uav_readdatavalid -> nios2_11_debug_mem_slave_agent:m0_readdatavalid
	wire         nios2_11_debug_mem_slave_agent_m0_lock;                                         // nios2_11_debug_mem_slave_agent:m0_lock -> nios2_11_debug_mem_slave_translator:uav_lock
	wire  [31:0] nios2_11_debug_mem_slave_agent_m0_writedata;                                    // nios2_11_debug_mem_slave_agent:m0_writedata -> nios2_11_debug_mem_slave_translator:uav_writedata
	wire         nios2_11_debug_mem_slave_agent_m0_write;                                        // nios2_11_debug_mem_slave_agent:m0_write -> nios2_11_debug_mem_slave_translator:uav_write
	wire   [2:0] nios2_11_debug_mem_slave_agent_m0_burstcount;                                   // nios2_11_debug_mem_slave_agent:m0_burstcount -> nios2_11_debug_mem_slave_translator:uav_burstcount
	wire         nios2_11_debug_mem_slave_agent_rf_source_valid;                                 // nios2_11_debug_mem_slave_agent:rf_source_valid -> nios2_11_debug_mem_slave_agent_rsp_fifo:in_valid
	wire  [96:0] nios2_11_debug_mem_slave_agent_rf_source_data;                                  // nios2_11_debug_mem_slave_agent:rf_source_data -> nios2_11_debug_mem_slave_agent_rsp_fifo:in_data
	wire         nios2_11_debug_mem_slave_agent_rf_source_ready;                                 // nios2_11_debug_mem_slave_agent_rsp_fifo:in_ready -> nios2_11_debug_mem_slave_agent:rf_source_ready
	wire         nios2_11_debug_mem_slave_agent_rf_source_startofpacket;                         // nios2_11_debug_mem_slave_agent:rf_source_startofpacket -> nios2_11_debug_mem_slave_agent_rsp_fifo:in_startofpacket
	wire         nios2_11_debug_mem_slave_agent_rf_source_endofpacket;                           // nios2_11_debug_mem_slave_agent:rf_source_endofpacket -> nios2_11_debug_mem_slave_agent_rsp_fifo:in_endofpacket
	wire         nios2_11_debug_mem_slave_agent_rsp_fifo_out_valid;                              // nios2_11_debug_mem_slave_agent_rsp_fifo:out_valid -> nios2_11_debug_mem_slave_agent:rf_sink_valid
	wire  [96:0] nios2_11_debug_mem_slave_agent_rsp_fifo_out_data;                               // nios2_11_debug_mem_slave_agent_rsp_fifo:out_data -> nios2_11_debug_mem_slave_agent:rf_sink_data
	wire         nios2_11_debug_mem_slave_agent_rsp_fifo_out_ready;                              // nios2_11_debug_mem_slave_agent:rf_sink_ready -> nios2_11_debug_mem_slave_agent_rsp_fifo:out_ready
	wire         nios2_11_debug_mem_slave_agent_rsp_fifo_out_startofpacket;                      // nios2_11_debug_mem_slave_agent_rsp_fifo:out_startofpacket -> nios2_11_debug_mem_slave_agent:rf_sink_startofpacket
	wire         nios2_11_debug_mem_slave_agent_rsp_fifo_out_endofpacket;                        // nios2_11_debug_mem_slave_agent_rsp_fifo:out_endofpacket -> nios2_11_debug_mem_slave_agent:rf_sink_endofpacket
	wire         cmd_mux_007_src_valid;                                                          // cmd_mux_007:src_valid -> nios2_11_debug_mem_slave_agent:cp_valid
	wire  [95:0] cmd_mux_007_src_data;                                                           // cmd_mux_007:src_data -> nios2_11_debug_mem_slave_agent:cp_data
	wire         cmd_mux_007_src_ready;                                                          // nios2_11_debug_mem_slave_agent:cp_ready -> cmd_mux_007:src_ready
	wire  [24:0] cmd_mux_007_src_channel;                                                        // cmd_mux_007:src_channel -> nios2_11_debug_mem_slave_agent:cp_channel
	wire         cmd_mux_007_src_startofpacket;                                                  // cmd_mux_007:src_startofpacket -> nios2_11_debug_mem_slave_agent:cp_startofpacket
	wire         cmd_mux_007_src_endofpacket;                                                    // cmd_mux_007:src_endofpacket -> nios2_11_debug_mem_slave_agent:cp_endofpacket
	wire  [31:0] fifo_source_11_in_agent_m0_readdata;                                            // fifo_source_11_in_translator:uav_readdata -> fifo_source_11_in_agent:m0_readdata
	wire         fifo_source_11_in_agent_m0_waitrequest;                                         // fifo_source_11_in_translator:uav_waitrequest -> fifo_source_11_in_agent:m0_waitrequest
	wire         fifo_source_11_in_agent_m0_debugaccess;                                         // fifo_source_11_in_agent:m0_debugaccess -> fifo_source_11_in_translator:uav_debugaccess
	wire  [15:0] fifo_source_11_in_agent_m0_address;                                             // fifo_source_11_in_agent:m0_address -> fifo_source_11_in_translator:uav_address
	wire   [3:0] fifo_source_11_in_agent_m0_byteenable;                                          // fifo_source_11_in_agent:m0_byteenable -> fifo_source_11_in_translator:uav_byteenable
	wire         fifo_source_11_in_agent_m0_read;                                                // fifo_source_11_in_agent:m0_read -> fifo_source_11_in_translator:uav_read
	wire         fifo_source_11_in_agent_m0_readdatavalid;                                       // fifo_source_11_in_translator:uav_readdatavalid -> fifo_source_11_in_agent:m0_readdatavalid
	wire         fifo_source_11_in_agent_m0_lock;                                                // fifo_source_11_in_agent:m0_lock -> fifo_source_11_in_translator:uav_lock
	wire  [31:0] fifo_source_11_in_agent_m0_writedata;                                           // fifo_source_11_in_agent:m0_writedata -> fifo_source_11_in_translator:uav_writedata
	wire         fifo_source_11_in_agent_m0_write;                                               // fifo_source_11_in_agent:m0_write -> fifo_source_11_in_translator:uav_write
	wire   [2:0] fifo_source_11_in_agent_m0_burstcount;                                          // fifo_source_11_in_agent:m0_burstcount -> fifo_source_11_in_translator:uav_burstcount
	wire         fifo_source_11_in_agent_rf_source_valid;                                        // fifo_source_11_in_agent:rf_source_valid -> fifo_source_11_in_agent_rsp_fifo:in_valid
	wire  [96:0] fifo_source_11_in_agent_rf_source_data;                                         // fifo_source_11_in_agent:rf_source_data -> fifo_source_11_in_agent_rsp_fifo:in_data
	wire         fifo_source_11_in_agent_rf_source_ready;                                        // fifo_source_11_in_agent_rsp_fifo:in_ready -> fifo_source_11_in_agent:rf_source_ready
	wire         fifo_source_11_in_agent_rf_source_startofpacket;                                // fifo_source_11_in_agent:rf_source_startofpacket -> fifo_source_11_in_agent_rsp_fifo:in_startofpacket
	wire         fifo_source_11_in_agent_rf_source_endofpacket;                                  // fifo_source_11_in_agent:rf_source_endofpacket -> fifo_source_11_in_agent_rsp_fifo:in_endofpacket
	wire         fifo_source_11_in_agent_rsp_fifo_out_valid;                                     // fifo_source_11_in_agent_rsp_fifo:out_valid -> fifo_source_11_in_agent:rf_sink_valid
	wire  [96:0] fifo_source_11_in_agent_rsp_fifo_out_data;                                      // fifo_source_11_in_agent_rsp_fifo:out_data -> fifo_source_11_in_agent:rf_sink_data
	wire         fifo_source_11_in_agent_rsp_fifo_out_ready;                                     // fifo_source_11_in_agent:rf_sink_ready -> fifo_source_11_in_agent_rsp_fifo:out_ready
	wire         fifo_source_11_in_agent_rsp_fifo_out_startofpacket;                             // fifo_source_11_in_agent_rsp_fifo:out_startofpacket -> fifo_source_11_in_agent:rf_sink_startofpacket
	wire         fifo_source_11_in_agent_rsp_fifo_out_endofpacket;                               // fifo_source_11_in_agent_rsp_fifo:out_endofpacket -> fifo_source_11_in_agent:rf_sink_endofpacket
	wire         cmd_mux_008_src_valid;                                                          // cmd_mux_008:src_valid -> fifo_source_11_in_agent:cp_valid
	wire  [95:0] cmd_mux_008_src_data;                                                           // cmd_mux_008:src_data -> fifo_source_11_in_agent:cp_data
	wire         cmd_mux_008_src_ready;                                                          // fifo_source_11_in_agent:cp_ready -> cmd_mux_008:src_ready
	wire  [24:0] cmd_mux_008_src_channel;                                                        // cmd_mux_008:src_channel -> fifo_source_11_in_agent:cp_channel
	wire         cmd_mux_008_src_startofpacket;                                                  // cmd_mux_008:src_startofpacket -> fifo_source_11_in_agent:cp_startofpacket
	wire         cmd_mux_008_src_endofpacket;                                                    // cmd_mux_008:src_endofpacket -> fifo_source_11_in_agent:cp_endofpacket
	wire  [31:0] fifo_sink_11_in_csr_agent_m0_readdata;                                          // fifo_sink_11_in_csr_translator:uav_readdata -> fifo_sink_11_in_csr_agent:m0_readdata
	wire         fifo_sink_11_in_csr_agent_m0_waitrequest;                                       // fifo_sink_11_in_csr_translator:uav_waitrequest -> fifo_sink_11_in_csr_agent:m0_waitrequest
	wire         fifo_sink_11_in_csr_agent_m0_debugaccess;                                       // fifo_sink_11_in_csr_agent:m0_debugaccess -> fifo_sink_11_in_csr_translator:uav_debugaccess
	wire  [15:0] fifo_sink_11_in_csr_agent_m0_address;                                           // fifo_sink_11_in_csr_agent:m0_address -> fifo_sink_11_in_csr_translator:uav_address
	wire   [3:0] fifo_sink_11_in_csr_agent_m0_byteenable;                                        // fifo_sink_11_in_csr_agent:m0_byteenable -> fifo_sink_11_in_csr_translator:uav_byteenable
	wire         fifo_sink_11_in_csr_agent_m0_read;                                              // fifo_sink_11_in_csr_agent:m0_read -> fifo_sink_11_in_csr_translator:uav_read
	wire         fifo_sink_11_in_csr_agent_m0_readdatavalid;                                     // fifo_sink_11_in_csr_translator:uav_readdatavalid -> fifo_sink_11_in_csr_agent:m0_readdatavalid
	wire         fifo_sink_11_in_csr_agent_m0_lock;                                              // fifo_sink_11_in_csr_agent:m0_lock -> fifo_sink_11_in_csr_translator:uav_lock
	wire  [31:0] fifo_sink_11_in_csr_agent_m0_writedata;                                         // fifo_sink_11_in_csr_agent:m0_writedata -> fifo_sink_11_in_csr_translator:uav_writedata
	wire         fifo_sink_11_in_csr_agent_m0_write;                                             // fifo_sink_11_in_csr_agent:m0_write -> fifo_sink_11_in_csr_translator:uav_write
	wire   [2:0] fifo_sink_11_in_csr_agent_m0_burstcount;                                        // fifo_sink_11_in_csr_agent:m0_burstcount -> fifo_sink_11_in_csr_translator:uav_burstcount
	wire         fifo_sink_11_in_csr_agent_rf_source_valid;                                      // fifo_sink_11_in_csr_agent:rf_source_valid -> fifo_sink_11_in_csr_agent_rsp_fifo:in_valid
	wire  [96:0] fifo_sink_11_in_csr_agent_rf_source_data;                                       // fifo_sink_11_in_csr_agent:rf_source_data -> fifo_sink_11_in_csr_agent_rsp_fifo:in_data
	wire         fifo_sink_11_in_csr_agent_rf_source_ready;                                      // fifo_sink_11_in_csr_agent_rsp_fifo:in_ready -> fifo_sink_11_in_csr_agent:rf_source_ready
	wire         fifo_sink_11_in_csr_agent_rf_source_startofpacket;                              // fifo_sink_11_in_csr_agent:rf_source_startofpacket -> fifo_sink_11_in_csr_agent_rsp_fifo:in_startofpacket
	wire         fifo_sink_11_in_csr_agent_rf_source_endofpacket;                                // fifo_sink_11_in_csr_agent:rf_source_endofpacket -> fifo_sink_11_in_csr_agent_rsp_fifo:in_endofpacket
	wire         fifo_sink_11_in_csr_agent_rsp_fifo_out_valid;                                   // fifo_sink_11_in_csr_agent_rsp_fifo:out_valid -> fifo_sink_11_in_csr_agent:rf_sink_valid
	wire  [96:0] fifo_sink_11_in_csr_agent_rsp_fifo_out_data;                                    // fifo_sink_11_in_csr_agent_rsp_fifo:out_data -> fifo_sink_11_in_csr_agent:rf_sink_data
	wire         fifo_sink_11_in_csr_agent_rsp_fifo_out_ready;                                   // fifo_sink_11_in_csr_agent:rf_sink_ready -> fifo_sink_11_in_csr_agent_rsp_fifo:out_ready
	wire         fifo_sink_11_in_csr_agent_rsp_fifo_out_startofpacket;                           // fifo_sink_11_in_csr_agent_rsp_fifo:out_startofpacket -> fifo_sink_11_in_csr_agent:rf_sink_startofpacket
	wire         fifo_sink_11_in_csr_agent_rsp_fifo_out_endofpacket;                             // fifo_sink_11_in_csr_agent_rsp_fifo:out_endofpacket -> fifo_sink_11_in_csr_agent:rf_sink_endofpacket
	wire         cmd_mux_009_src_valid;                                                          // cmd_mux_009:src_valid -> fifo_sink_11_in_csr_agent:cp_valid
	wire  [95:0] cmd_mux_009_src_data;                                                           // cmd_mux_009:src_data -> fifo_sink_11_in_csr_agent:cp_data
	wire         cmd_mux_009_src_ready;                                                          // fifo_sink_11_in_csr_agent:cp_ready -> cmd_mux_009:src_ready
	wire  [24:0] cmd_mux_009_src_channel;                                                        // cmd_mux_009:src_channel -> fifo_sink_11_in_csr_agent:cp_channel
	wire         cmd_mux_009_src_startofpacket;                                                  // cmd_mux_009:src_startofpacket -> fifo_sink_11_in_csr_agent:cp_startofpacket
	wire         cmd_mux_009_src_endofpacket;                                                    // cmd_mux_009:src_endofpacket -> fifo_sink_11_in_csr_agent:cp_endofpacket
	wire  [31:0] fifo_source_11_in_csr_agent_m0_readdata;                                        // fifo_source_11_in_csr_translator:uav_readdata -> fifo_source_11_in_csr_agent:m0_readdata
	wire         fifo_source_11_in_csr_agent_m0_waitrequest;                                     // fifo_source_11_in_csr_translator:uav_waitrequest -> fifo_source_11_in_csr_agent:m0_waitrequest
	wire         fifo_source_11_in_csr_agent_m0_debugaccess;                                     // fifo_source_11_in_csr_agent:m0_debugaccess -> fifo_source_11_in_csr_translator:uav_debugaccess
	wire  [15:0] fifo_source_11_in_csr_agent_m0_address;                                         // fifo_source_11_in_csr_agent:m0_address -> fifo_source_11_in_csr_translator:uav_address
	wire   [3:0] fifo_source_11_in_csr_agent_m0_byteenable;                                      // fifo_source_11_in_csr_agent:m0_byteenable -> fifo_source_11_in_csr_translator:uav_byteenable
	wire         fifo_source_11_in_csr_agent_m0_read;                                            // fifo_source_11_in_csr_agent:m0_read -> fifo_source_11_in_csr_translator:uav_read
	wire         fifo_source_11_in_csr_agent_m0_readdatavalid;                                   // fifo_source_11_in_csr_translator:uav_readdatavalid -> fifo_source_11_in_csr_agent:m0_readdatavalid
	wire         fifo_source_11_in_csr_agent_m0_lock;                                            // fifo_source_11_in_csr_agent:m0_lock -> fifo_source_11_in_csr_translator:uav_lock
	wire  [31:0] fifo_source_11_in_csr_agent_m0_writedata;                                       // fifo_source_11_in_csr_agent:m0_writedata -> fifo_source_11_in_csr_translator:uav_writedata
	wire         fifo_source_11_in_csr_agent_m0_write;                                           // fifo_source_11_in_csr_agent:m0_write -> fifo_source_11_in_csr_translator:uav_write
	wire   [2:0] fifo_source_11_in_csr_agent_m0_burstcount;                                      // fifo_source_11_in_csr_agent:m0_burstcount -> fifo_source_11_in_csr_translator:uav_burstcount
	wire         fifo_source_11_in_csr_agent_rf_source_valid;                                    // fifo_source_11_in_csr_agent:rf_source_valid -> fifo_source_11_in_csr_agent_rsp_fifo:in_valid
	wire  [96:0] fifo_source_11_in_csr_agent_rf_source_data;                                     // fifo_source_11_in_csr_agent:rf_source_data -> fifo_source_11_in_csr_agent_rsp_fifo:in_data
	wire         fifo_source_11_in_csr_agent_rf_source_ready;                                    // fifo_source_11_in_csr_agent_rsp_fifo:in_ready -> fifo_source_11_in_csr_agent:rf_source_ready
	wire         fifo_source_11_in_csr_agent_rf_source_startofpacket;                            // fifo_source_11_in_csr_agent:rf_source_startofpacket -> fifo_source_11_in_csr_agent_rsp_fifo:in_startofpacket
	wire         fifo_source_11_in_csr_agent_rf_source_endofpacket;                              // fifo_source_11_in_csr_agent:rf_source_endofpacket -> fifo_source_11_in_csr_agent_rsp_fifo:in_endofpacket
	wire         fifo_source_11_in_csr_agent_rsp_fifo_out_valid;                                 // fifo_source_11_in_csr_agent_rsp_fifo:out_valid -> fifo_source_11_in_csr_agent:rf_sink_valid
	wire  [96:0] fifo_source_11_in_csr_agent_rsp_fifo_out_data;                                  // fifo_source_11_in_csr_agent_rsp_fifo:out_data -> fifo_source_11_in_csr_agent:rf_sink_data
	wire         fifo_source_11_in_csr_agent_rsp_fifo_out_ready;                                 // fifo_source_11_in_csr_agent:rf_sink_ready -> fifo_source_11_in_csr_agent_rsp_fifo:out_ready
	wire         fifo_source_11_in_csr_agent_rsp_fifo_out_startofpacket;                         // fifo_source_11_in_csr_agent_rsp_fifo:out_startofpacket -> fifo_source_11_in_csr_agent:rf_sink_startofpacket
	wire         fifo_source_11_in_csr_agent_rsp_fifo_out_endofpacket;                           // fifo_source_11_in_csr_agent_rsp_fifo:out_endofpacket -> fifo_source_11_in_csr_agent:rf_sink_endofpacket
	wire         cmd_mux_010_src_valid;                                                          // cmd_mux_010:src_valid -> fifo_source_11_in_csr_agent:cp_valid
	wire  [95:0] cmd_mux_010_src_data;                                                           // cmd_mux_010:src_data -> fifo_source_11_in_csr_agent:cp_data
	wire         cmd_mux_010_src_ready;                                                          // fifo_source_11_in_csr_agent:cp_ready -> cmd_mux_010:src_ready
	wire  [24:0] cmd_mux_010_src_channel;                                                        // cmd_mux_010:src_channel -> fifo_source_11_in_csr_agent:cp_channel
	wire         cmd_mux_010_src_startofpacket;                                                  // cmd_mux_010:src_startofpacket -> fifo_source_11_in_csr_agent:cp_startofpacket
	wire         cmd_mux_010_src_endofpacket;                                                    // cmd_mux_010:src_endofpacket -> fifo_source_11_in_csr_agent:cp_endofpacket
	wire  [31:0] fifo_sink_11_out_agent_m0_readdata;                                             // fifo_sink_11_out_translator:uav_readdata -> fifo_sink_11_out_agent:m0_readdata
	wire         fifo_sink_11_out_agent_m0_waitrequest;                                          // fifo_sink_11_out_translator:uav_waitrequest -> fifo_sink_11_out_agent:m0_waitrequest
	wire         fifo_sink_11_out_agent_m0_debugaccess;                                          // fifo_sink_11_out_agent:m0_debugaccess -> fifo_sink_11_out_translator:uav_debugaccess
	wire  [15:0] fifo_sink_11_out_agent_m0_address;                                              // fifo_sink_11_out_agent:m0_address -> fifo_sink_11_out_translator:uav_address
	wire   [3:0] fifo_sink_11_out_agent_m0_byteenable;                                           // fifo_sink_11_out_agent:m0_byteenable -> fifo_sink_11_out_translator:uav_byteenable
	wire         fifo_sink_11_out_agent_m0_read;                                                 // fifo_sink_11_out_agent:m0_read -> fifo_sink_11_out_translator:uav_read
	wire         fifo_sink_11_out_agent_m0_readdatavalid;                                        // fifo_sink_11_out_translator:uav_readdatavalid -> fifo_sink_11_out_agent:m0_readdatavalid
	wire         fifo_sink_11_out_agent_m0_lock;                                                 // fifo_sink_11_out_agent:m0_lock -> fifo_sink_11_out_translator:uav_lock
	wire  [31:0] fifo_sink_11_out_agent_m0_writedata;                                            // fifo_sink_11_out_agent:m0_writedata -> fifo_sink_11_out_translator:uav_writedata
	wire         fifo_sink_11_out_agent_m0_write;                                                // fifo_sink_11_out_agent:m0_write -> fifo_sink_11_out_translator:uav_write
	wire   [2:0] fifo_sink_11_out_agent_m0_burstcount;                                           // fifo_sink_11_out_agent:m0_burstcount -> fifo_sink_11_out_translator:uav_burstcount
	wire         fifo_sink_11_out_agent_rf_source_valid;                                         // fifo_sink_11_out_agent:rf_source_valid -> fifo_sink_11_out_agent_rsp_fifo:in_valid
	wire  [96:0] fifo_sink_11_out_agent_rf_source_data;                                          // fifo_sink_11_out_agent:rf_source_data -> fifo_sink_11_out_agent_rsp_fifo:in_data
	wire         fifo_sink_11_out_agent_rf_source_ready;                                         // fifo_sink_11_out_agent_rsp_fifo:in_ready -> fifo_sink_11_out_agent:rf_source_ready
	wire         fifo_sink_11_out_agent_rf_source_startofpacket;                                 // fifo_sink_11_out_agent:rf_source_startofpacket -> fifo_sink_11_out_agent_rsp_fifo:in_startofpacket
	wire         fifo_sink_11_out_agent_rf_source_endofpacket;                                   // fifo_sink_11_out_agent:rf_source_endofpacket -> fifo_sink_11_out_agent_rsp_fifo:in_endofpacket
	wire         fifo_sink_11_out_agent_rsp_fifo_out_valid;                                      // fifo_sink_11_out_agent_rsp_fifo:out_valid -> fifo_sink_11_out_agent:rf_sink_valid
	wire  [96:0] fifo_sink_11_out_agent_rsp_fifo_out_data;                                       // fifo_sink_11_out_agent_rsp_fifo:out_data -> fifo_sink_11_out_agent:rf_sink_data
	wire         fifo_sink_11_out_agent_rsp_fifo_out_ready;                                      // fifo_sink_11_out_agent:rf_sink_ready -> fifo_sink_11_out_agent_rsp_fifo:out_ready
	wire         fifo_sink_11_out_agent_rsp_fifo_out_startofpacket;                              // fifo_sink_11_out_agent_rsp_fifo:out_startofpacket -> fifo_sink_11_out_agent:rf_sink_startofpacket
	wire         fifo_sink_11_out_agent_rsp_fifo_out_endofpacket;                                // fifo_sink_11_out_agent_rsp_fifo:out_endofpacket -> fifo_sink_11_out_agent:rf_sink_endofpacket
	wire         cmd_mux_011_src_valid;                                                          // cmd_mux_011:src_valid -> fifo_sink_11_out_agent:cp_valid
	wire  [95:0] cmd_mux_011_src_data;                                                           // cmd_mux_011:src_data -> fifo_sink_11_out_agent:cp_data
	wire         cmd_mux_011_src_ready;                                                          // fifo_sink_11_out_agent:cp_ready -> cmd_mux_011:src_ready
	wire  [24:0] cmd_mux_011_src_channel;                                                        // cmd_mux_011:src_channel -> fifo_sink_11_out_agent:cp_channel
	wire         cmd_mux_011_src_startofpacket;                                                  // cmd_mux_011:src_startofpacket -> fifo_sink_11_out_agent:cp_startofpacket
	wire         cmd_mux_011_src_endofpacket;                                                    // cmd_mux_011:src_endofpacket -> fifo_sink_11_out_agent:cp_endofpacket
	wire  [31:0] data_mem_11_s1_agent_m0_readdata;                                               // data_mem_11_s1_translator:uav_readdata -> data_mem_11_s1_agent:m0_readdata
	wire         data_mem_11_s1_agent_m0_waitrequest;                                            // data_mem_11_s1_translator:uav_waitrequest -> data_mem_11_s1_agent:m0_waitrequest
	wire         data_mem_11_s1_agent_m0_debugaccess;                                            // data_mem_11_s1_agent:m0_debugaccess -> data_mem_11_s1_translator:uav_debugaccess
	wire  [15:0] data_mem_11_s1_agent_m0_address;                                                // data_mem_11_s1_agent:m0_address -> data_mem_11_s1_translator:uav_address
	wire   [3:0] data_mem_11_s1_agent_m0_byteenable;                                             // data_mem_11_s1_agent:m0_byteenable -> data_mem_11_s1_translator:uav_byteenable
	wire         data_mem_11_s1_agent_m0_read;                                                   // data_mem_11_s1_agent:m0_read -> data_mem_11_s1_translator:uav_read
	wire         data_mem_11_s1_agent_m0_readdatavalid;                                          // data_mem_11_s1_translator:uav_readdatavalid -> data_mem_11_s1_agent:m0_readdatavalid
	wire         data_mem_11_s1_agent_m0_lock;                                                   // data_mem_11_s1_agent:m0_lock -> data_mem_11_s1_translator:uav_lock
	wire  [31:0] data_mem_11_s1_agent_m0_writedata;                                              // data_mem_11_s1_agent:m0_writedata -> data_mem_11_s1_translator:uav_writedata
	wire         data_mem_11_s1_agent_m0_write;                                                  // data_mem_11_s1_agent:m0_write -> data_mem_11_s1_translator:uav_write
	wire   [2:0] data_mem_11_s1_agent_m0_burstcount;                                             // data_mem_11_s1_agent:m0_burstcount -> data_mem_11_s1_translator:uav_burstcount
	wire         data_mem_11_s1_agent_rf_source_valid;                                           // data_mem_11_s1_agent:rf_source_valid -> data_mem_11_s1_agent_rsp_fifo:in_valid
	wire  [96:0] data_mem_11_s1_agent_rf_source_data;                                            // data_mem_11_s1_agent:rf_source_data -> data_mem_11_s1_agent_rsp_fifo:in_data
	wire         data_mem_11_s1_agent_rf_source_ready;                                           // data_mem_11_s1_agent_rsp_fifo:in_ready -> data_mem_11_s1_agent:rf_source_ready
	wire         data_mem_11_s1_agent_rf_source_startofpacket;                                   // data_mem_11_s1_agent:rf_source_startofpacket -> data_mem_11_s1_agent_rsp_fifo:in_startofpacket
	wire         data_mem_11_s1_agent_rf_source_endofpacket;                                     // data_mem_11_s1_agent:rf_source_endofpacket -> data_mem_11_s1_agent_rsp_fifo:in_endofpacket
	wire         data_mem_11_s1_agent_rsp_fifo_out_valid;                                        // data_mem_11_s1_agent_rsp_fifo:out_valid -> data_mem_11_s1_agent:rf_sink_valid
	wire  [96:0] data_mem_11_s1_agent_rsp_fifo_out_data;                                         // data_mem_11_s1_agent_rsp_fifo:out_data -> data_mem_11_s1_agent:rf_sink_data
	wire         data_mem_11_s1_agent_rsp_fifo_out_ready;                                        // data_mem_11_s1_agent:rf_sink_ready -> data_mem_11_s1_agent_rsp_fifo:out_ready
	wire         data_mem_11_s1_agent_rsp_fifo_out_startofpacket;                                // data_mem_11_s1_agent_rsp_fifo:out_startofpacket -> data_mem_11_s1_agent:rf_sink_startofpacket
	wire         data_mem_11_s1_agent_rsp_fifo_out_endofpacket;                                  // data_mem_11_s1_agent_rsp_fifo:out_endofpacket -> data_mem_11_s1_agent:rf_sink_endofpacket
	wire         cmd_mux_012_src_valid;                                                          // cmd_mux_012:src_valid -> data_mem_11_s1_agent:cp_valid
	wire  [95:0] cmd_mux_012_src_data;                                                           // cmd_mux_012:src_data -> data_mem_11_s1_agent:cp_data
	wire         cmd_mux_012_src_ready;                                                          // data_mem_11_s1_agent:cp_ready -> cmd_mux_012:src_ready
	wire  [24:0] cmd_mux_012_src_channel;                                                        // cmd_mux_012:src_channel -> data_mem_11_s1_agent:cp_channel
	wire         cmd_mux_012_src_startofpacket;                                                  // cmd_mux_012:src_startofpacket -> data_mem_11_s1_agent:cp_startofpacket
	wire         cmd_mux_012_src_endofpacket;                                                    // cmd_mux_012:src_endofpacket -> data_mem_11_s1_agent:cp_endofpacket
	wire  [31:0] nios2_10_debug_mem_slave_agent_m0_readdata;                                     // nios2_10_debug_mem_slave_translator:uav_readdata -> nios2_10_debug_mem_slave_agent:m0_readdata
	wire         nios2_10_debug_mem_slave_agent_m0_waitrequest;                                  // nios2_10_debug_mem_slave_translator:uav_waitrequest -> nios2_10_debug_mem_slave_agent:m0_waitrequest
	wire         nios2_10_debug_mem_slave_agent_m0_debugaccess;                                  // nios2_10_debug_mem_slave_agent:m0_debugaccess -> nios2_10_debug_mem_slave_translator:uav_debugaccess
	wire  [15:0] nios2_10_debug_mem_slave_agent_m0_address;                                      // nios2_10_debug_mem_slave_agent:m0_address -> nios2_10_debug_mem_slave_translator:uav_address
	wire   [3:0] nios2_10_debug_mem_slave_agent_m0_byteenable;                                   // nios2_10_debug_mem_slave_agent:m0_byteenable -> nios2_10_debug_mem_slave_translator:uav_byteenable
	wire         nios2_10_debug_mem_slave_agent_m0_read;                                         // nios2_10_debug_mem_slave_agent:m0_read -> nios2_10_debug_mem_slave_translator:uav_read
	wire         nios2_10_debug_mem_slave_agent_m0_readdatavalid;                                // nios2_10_debug_mem_slave_translator:uav_readdatavalid -> nios2_10_debug_mem_slave_agent:m0_readdatavalid
	wire         nios2_10_debug_mem_slave_agent_m0_lock;                                         // nios2_10_debug_mem_slave_agent:m0_lock -> nios2_10_debug_mem_slave_translator:uav_lock
	wire  [31:0] nios2_10_debug_mem_slave_agent_m0_writedata;                                    // nios2_10_debug_mem_slave_agent:m0_writedata -> nios2_10_debug_mem_slave_translator:uav_writedata
	wire         nios2_10_debug_mem_slave_agent_m0_write;                                        // nios2_10_debug_mem_slave_agent:m0_write -> nios2_10_debug_mem_slave_translator:uav_write
	wire   [2:0] nios2_10_debug_mem_slave_agent_m0_burstcount;                                   // nios2_10_debug_mem_slave_agent:m0_burstcount -> nios2_10_debug_mem_slave_translator:uav_burstcount
	wire         nios2_10_debug_mem_slave_agent_rf_source_valid;                                 // nios2_10_debug_mem_slave_agent:rf_source_valid -> nios2_10_debug_mem_slave_agent_rsp_fifo:in_valid
	wire  [96:0] nios2_10_debug_mem_slave_agent_rf_source_data;                                  // nios2_10_debug_mem_slave_agent:rf_source_data -> nios2_10_debug_mem_slave_agent_rsp_fifo:in_data
	wire         nios2_10_debug_mem_slave_agent_rf_source_ready;                                 // nios2_10_debug_mem_slave_agent_rsp_fifo:in_ready -> nios2_10_debug_mem_slave_agent:rf_source_ready
	wire         nios2_10_debug_mem_slave_agent_rf_source_startofpacket;                         // nios2_10_debug_mem_slave_agent:rf_source_startofpacket -> nios2_10_debug_mem_slave_agent_rsp_fifo:in_startofpacket
	wire         nios2_10_debug_mem_slave_agent_rf_source_endofpacket;                           // nios2_10_debug_mem_slave_agent:rf_source_endofpacket -> nios2_10_debug_mem_slave_agent_rsp_fifo:in_endofpacket
	wire         nios2_10_debug_mem_slave_agent_rsp_fifo_out_valid;                              // nios2_10_debug_mem_slave_agent_rsp_fifo:out_valid -> nios2_10_debug_mem_slave_agent:rf_sink_valid
	wire  [96:0] nios2_10_debug_mem_slave_agent_rsp_fifo_out_data;                               // nios2_10_debug_mem_slave_agent_rsp_fifo:out_data -> nios2_10_debug_mem_slave_agent:rf_sink_data
	wire         nios2_10_debug_mem_slave_agent_rsp_fifo_out_ready;                              // nios2_10_debug_mem_slave_agent:rf_sink_ready -> nios2_10_debug_mem_slave_agent_rsp_fifo:out_ready
	wire         nios2_10_debug_mem_slave_agent_rsp_fifo_out_startofpacket;                      // nios2_10_debug_mem_slave_agent_rsp_fifo:out_startofpacket -> nios2_10_debug_mem_slave_agent:rf_sink_startofpacket
	wire         nios2_10_debug_mem_slave_agent_rsp_fifo_out_endofpacket;                        // nios2_10_debug_mem_slave_agent_rsp_fifo:out_endofpacket -> nios2_10_debug_mem_slave_agent:rf_sink_endofpacket
	wire         cmd_mux_013_src_valid;                                                          // cmd_mux_013:src_valid -> nios2_10_debug_mem_slave_agent:cp_valid
	wire  [95:0] cmd_mux_013_src_data;                                                           // cmd_mux_013:src_data -> nios2_10_debug_mem_slave_agent:cp_data
	wire         cmd_mux_013_src_ready;                                                          // nios2_10_debug_mem_slave_agent:cp_ready -> cmd_mux_013:src_ready
	wire  [24:0] cmd_mux_013_src_channel;                                                        // cmd_mux_013:src_channel -> nios2_10_debug_mem_slave_agent:cp_channel
	wire         cmd_mux_013_src_startofpacket;                                                  // cmd_mux_013:src_startofpacket -> nios2_10_debug_mem_slave_agent:cp_startofpacket
	wire         cmd_mux_013_src_endofpacket;                                                    // cmd_mux_013:src_endofpacket -> nios2_10_debug_mem_slave_agent:cp_endofpacket
	wire  [31:0] fifo_source_10_in_agent_m0_readdata;                                            // fifo_source_10_in_translator:uav_readdata -> fifo_source_10_in_agent:m0_readdata
	wire         fifo_source_10_in_agent_m0_waitrequest;                                         // fifo_source_10_in_translator:uav_waitrequest -> fifo_source_10_in_agent:m0_waitrequest
	wire         fifo_source_10_in_agent_m0_debugaccess;                                         // fifo_source_10_in_agent:m0_debugaccess -> fifo_source_10_in_translator:uav_debugaccess
	wire  [15:0] fifo_source_10_in_agent_m0_address;                                             // fifo_source_10_in_agent:m0_address -> fifo_source_10_in_translator:uav_address
	wire   [3:0] fifo_source_10_in_agent_m0_byteenable;                                          // fifo_source_10_in_agent:m0_byteenable -> fifo_source_10_in_translator:uav_byteenable
	wire         fifo_source_10_in_agent_m0_read;                                                // fifo_source_10_in_agent:m0_read -> fifo_source_10_in_translator:uav_read
	wire         fifo_source_10_in_agent_m0_readdatavalid;                                       // fifo_source_10_in_translator:uav_readdatavalid -> fifo_source_10_in_agent:m0_readdatavalid
	wire         fifo_source_10_in_agent_m0_lock;                                                // fifo_source_10_in_agent:m0_lock -> fifo_source_10_in_translator:uav_lock
	wire  [31:0] fifo_source_10_in_agent_m0_writedata;                                           // fifo_source_10_in_agent:m0_writedata -> fifo_source_10_in_translator:uav_writedata
	wire         fifo_source_10_in_agent_m0_write;                                               // fifo_source_10_in_agent:m0_write -> fifo_source_10_in_translator:uav_write
	wire   [2:0] fifo_source_10_in_agent_m0_burstcount;                                          // fifo_source_10_in_agent:m0_burstcount -> fifo_source_10_in_translator:uav_burstcount
	wire         fifo_source_10_in_agent_rf_source_valid;                                        // fifo_source_10_in_agent:rf_source_valid -> fifo_source_10_in_agent_rsp_fifo:in_valid
	wire  [96:0] fifo_source_10_in_agent_rf_source_data;                                         // fifo_source_10_in_agent:rf_source_data -> fifo_source_10_in_agent_rsp_fifo:in_data
	wire         fifo_source_10_in_agent_rf_source_ready;                                        // fifo_source_10_in_agent_rsp_fifo:in_ready -> fifo_source_10_in_agent:rf_source_ready
	wire         fifo_source_10_in_agent_rf_source_startofpacket;                                // fifo_source_10_in_agent:rf_source_startofpacket -> fifo_source_10_in_agent_rsp_fifo:in_startofpacket
	wire         fifo_source_10_in_agent_rf_source_endofpacket;                                  // fifo_source_10_in_agent:rf_source_endofpacket -> fifo_source_10_in_agent_rsp_fifo:in_endofpacket
	wire         fifo_source_10_in_agent_rsp_fifo_out_valid;                                     // fifo_source_10_in_agent_rsp_fifo:out_valid -> fifo_source_10_in_agent:rf_sink_valid
	wire  [96:0] fifo_source_10_in_agent_rsp_fifo_out_data;                                      // fifo_source_10_in_agent_rsp_fifo:out_data -> fifo_source_10_in_agent:rf_sink_data
	wire         fifo_source_10_in_agent_rsp_fifo_out_ready;                                     // fifo_source_10_in_agent:rf_sink_ready -> fifo_source_10_in_agent_rsp_fifo:out_ready
	wire         fifo_source_10_in_agent_rsp_fifo_out_startofpacket;                             // fifo_source_10_in_agent_rsp_fifo:out_startofpacket -> fifo_source_10_in_agent:rf_sink_startofpacket
	wire         fifo_source_10_in_agent_rsp_fifo_out_endofpacket;                               // fifo_source_10_in_agent_rsp_fifo:out_endofpacket -> fifo_source_10_in_agent:rf_sink_endofpacket
	wire         cmd_mux_014_src_valid;                                                          // cmd_mux_014:src_valid -> fifo_source_10_in_agent:cp_valid
	wire  [95:0] cmd_mux_014_src_data;                                                           // cmd_mux_014:src_data -> fifo_source_10_in_agent:cp_data
	wire         cmd_mux_014_src_ready;                                                          // fifo_source_10_in_agent:cp_ready -> cmd_mux_014:src_ready
	wire  [24:0] cmd_mux_014_src_channel;                                                        // cmd_mux_014:src_channel -> fifo_source_10_in_agent:cp_channel
	wire         cmd_mux_014_src_startofpacket;                                                  // cmd_mux_014:src_startofpacket -> fifo_source_10_in_agent:cp_startofpacket
	wire         cmd_mux_014_src_endofpacket;                                                    // cmd_mux_014:src_endofpacket -> fifo_source_10_in_agent:cp_endofpacket
	wire  [31:0] fifo_sink_10_in_csr_agent_m0_readdata;                                          // fifo_sink_10_in_csr_translator:uav_readdata -> fifo_sink_10_in_csr_agent:m0_readdata
	wire         fifo_sink_10_in_csr_agent_m0_waitrequest;                                       // fifo_sink_10_in_csr_translator:uav_waitrequest -> fifo_sink_10_in_csr_agent:m0_waitrequest
	wire         fifo_sink_10_in_csr_agent_m0_debugaccess;                                       // fifo_sink_10_in_csr_agent:m0_debugaccess -> fifo_sink_10_in_csr_translator:uav_debugaccess
	wire  [15:0] fifo_sink_10_in_csr_agent_m0_address;                                           // fifo_sink_10_in_csr_agent:m0_address -> fifo_sink_10_in_csr_translator:uav_address
	wire   [3:0] fifo_sink_10_in_csr_agent_m0_byteenable;                                        // fifo_sink_10_in_csr_agent:m0_byteenable -> fifo_sink_10_in_csr_translator:uav_byteenable
	wire         fifo_sink_10_in_csr_agent_m0_read;                                              // fifo_sink_10_in_csr_agent:m0_read -> fifo_sink_10_in_csr_translator:uav_read
	wire         fifo_sink_10_in_csr_agent_m0_readdatavalid;                                     // fifo_sink_10_in_csr_translator:uav_readdatavalid -> fifo_sink_10_in_csr_agent:m0_readdatavalid
	wire         fifo_sink_10_in_csr_agent_m0_lock;                                              // fifo_sink_10_in_csr_agent:m0_lock -> fifo_sink_10_in_csr_translator:uav_lock
	wire  [31:0] fifo_sink_10_in_csr_agent_m0_writedata;                                         // fifo_sink_10_in_csr_agent:m0_writedata -> fifo_sink_10_in_csr_translator:uav_writedata
	wire         fifo_sink_10_in_csr_agent_m0_write;                                             // fifo_sink_10_in_csr_agent:m0_write -> fifo_sink_10_in_csr_translator:uav_write
	wire   [2:0] fifo_sink_10_in_csr_agent_m0_burstcount;                                        // fifo_sink_10_in_csr_agent:m0_burstcount -> fifo_sink_10_in_csr_translator:uav_burstcount
	wire         fifo_sink_10_in_csr_agent_rf_source_valid;                                      // fifo_sink_10_in_csr_agent:rf_source_valid -> fifo_sink_10_in_csr_agent_rsp_fifo:in_valid
	wire  [96:0] fifo_sink_10_in_csr_agent_rf_source_data;                                       // fifo_sink_10_in_csr_agent:rf_source_data -> fifo_sink_10_in_csr_agent_rsp_fifo:in_data
	wire         fifo_sink_10_in_csr_agent_rf_source_ready;                                      // fifo_sink_10_in_csr_agent_rsp_fifo:in_ready -> fifo_sink_10_in_csr_agent:rf_source_ready
	wire         fifo_sink_10_in_csr_agent_rf_source_startofpacket;                              // fifo_sink_10_in_csr_agent:rf_source_startofpacket -> fifo_sink_10_in_csr_agent_rsp_fifo:in_startofpacket
	wire         fifo_sink_10_in_csr_agent_rf_source_endofpacket;                                // fifo_sink_10_in_csr_agent:rf_source_endofpacket -> fifo_sink_10_in_csr_agent_rsp_fifo:in_endofpacket
	wire         fifo_sink_10_in_csr_agent_rsp_fifo_out_valid;                                   // fifo_sink_10_in_csr_agent_rsp_fifo:out_valid -> fifo_sink_10_in_csr_agent:rf_sink_valid
	wire  [96:0] fifo_sink_10_in_csr_agent_rsp_fifo_out_data;                                    // fifo_sink_10_in_csr_agent_rsp_fifo:out_data -> fifo_sink_10_in_csr_agent:rf_sink_data
	wire         fifo_sink_10_in_csr_agent_rsp_fifo_out_ready;                                   // fifo_sink_10_in_csr_agent:rf_sink_ready -> fifo_sink_10_in_csr_agent_rsp_fifo:out_ready
	wire         fifo_sink_10_in_csr_agent_rsp_fifo_out_startofpacket;                           // fifo_sink_10_in_csr_agent_rsp_fifo:out_startofpacket -> fifo_sink_10_in_csr_agent:rf_sink_startofpacket
	wire         fifo_sink_10_in_csr_agent_rsp_fifo_out_endofpacket;                             // fifo_sink_10_in_csr_agent_rsp_fifo:out_endofpacket -> fifo_sink_10_in_csr_agent:rf_sink_endofpacket
	wire         cmd_mux_015_src_valid;                                                          // cmd_mux_015:src_valid -> fifo_sink_10_in_csr_agent:cp_valid
	wire  [95:0] cmd_mux_015_src_data;                                                           // cmd_mux_015:src_data -> fifo_sink_10_in_csr_agent:cp_data
	wire         cmd_mux_015_src_ready;                                                          // fifo_sink_10_in_csr_agent:cp_ready -> cmd_mux_015:src_ready
	wire  [24:0] cmd_mux_015_src_channel;                                                        // cmd_mux_015:src_channel -> fifo_sink_10_in_csr_agent:cp_channel
	wire         cmd_mux_015_src_startofpacket;                                                  // cmd_mux_015:src_startofpacket -> fifo_sink_10_in_csr_agent:cp_startofpacket
	wire         cmd_mux_015_src_endofpacket;                                                    // cmd_mux_015:src_endofpacket -> fifo_sink_10_in_csr_agent:cp_endofpacket
	wire  [31:0] fifo_source_10_in_csr_agent_m0_readdata;                                        // fifo_source_10_in_csr_translator:uav_readdata -> fifo_source_10_in_csr_agent:m0_readdata
	wire         fifo_source_10_in_csr_agent_m0_waitrequest;                                     // fifo_source_10_in_csr_translator:uav_waitrequest -> fifo_source_10_in_csr_agent:m0_waitrequest
	wire         fifo_source_10_in_csr_agent_m0_debugaccess;                                     // fifo_source_10_in_csr_agent:m0_debugaccess -> fifo_source_10_in_csr_translator:uav_debugaccess
	wire  [15:0] fifo_source_10_in_csr_agent_m0_address;                                         // fifo_source_10_in_csr_agent:m0_address -> fifo_source_10_in_csr_translator:uav_address
	wire   [3:0] fifo_source_10_in_csr_agent_m0_byteenable;                                      // fifo_source_10_in_csr_agent:m0_byteenable -> fifo_source_10_in_csr_translator:uav_byteenable
	wire         fifo_source_10_in_csr_agent_m0_read;                                            // fifo_source_10_in_csr_agent:m0_read -> fifo_source_10_in_csr_translator:uav_read
	wire         fifo_source_10_in_csr_agent_m0_readdatavalid;                                   // fifo_source_10_in_csr_translator:uav_readdatavalid -> fifo_source_10_in_csr_agent:m0_readdatavalid
	wire         fifo_source_10_in_csr_agent_m0_lock;                                            // fifo_source_10_in_csr_agent:m0_lock -> fifo_source_10_in_csr_translator:uav_lock
	wire  [31:0] fifo_source_10_in_csr_agent_m0_writedata;                                       // fifo_source_10_in_csr_agent:m0_writedata -> fifo_source_10_in_csr_translator:uav_writedata
	wire         fifo_source_10_in_csr_agent_m0_write;                                           // fifo_source_10_in_csr_agent:m0_write -> fifo_source_10_in_csr_translator:uav_write
	wire   [2:0] fifo_source_10_in_csr_agent_m0_burstcount;                                      // fifo_source_10_in_csr_agent:m0_burstcount -> fifo_source_10_in_csr_translator:uav_burstcount
	wire         fifo_source_10_in_csr_agent_rf_source_valid;                                    // fifo_source_10_in_csr_agent:rf_source_valid -> fifo_source_10_in_csr_agent_rsp_fifo:in_valid
	wire  [96:0] fifo_source_10_in_csr_agent_rf_source_data;                                     // fifo_source_10_in_csr_agent:rf_source_data -> fifo_source_10_in_csr_agent_rsp_fifo:in_data
	wire         fifo_source_10_in_csr_agent_rf_source_ready;                                    // fifo_source_10_in_csr_agent_rsp_fifo:in_ready -> fifo_source_10_in_csr_agent:rf_source_ready
	wire         fifo_source_10_in_csr_agent_rf_source_startofpacket;                            // fifo_source_10_in_csr_agent:rf_source_startofpacket -> fifo_source_10_in_csr_agent_rsp_fifo:in_startofpacket
	wire         fifo_source_10_in_csr_agent_rf_source_endofpacket;                              // fifo_source_10_in_csr_agent:rf_source_endofpacket -> fifo_source_10_in_csr_agent_rsp_fifo:in_endofpacket
	wire         fifo_source_10_in_csr_agent_rsp_fifo_out_valid;                                 // fifo_source_10_in_csr_agent_rsp_fifo:out_valid -> fifo_source_10_in_csr_agent:rf_sink_valid
	wire  [96:0] fifo_source_10_in_csr_agent_rsp_fifo_out_data;                                  // fifo_source_10_in_csr_agent_rsp_fifo:out_data -> fifo_source_10_in_csr_agent:rf_sink_data
	wire         fifo_source_10_in_csr_agent_rsp_fifo_out_ready;                                 // fifo_source_10_in_csr_agent:rf_sink_ready -> fifo_source_10_in_csr_agent_rsp_fifo:out_ready
	wire         fifo_source_10_in_csr_agent_rsp_fifo_out_startofpacket;                         // fifo_source_10_in_csr_agent_rsp_fifo:out_startofpacket -> fifo_source_10_in_csr_agent:rf_sink_startofpacket
	wire         fifo_source_10_in_csr_agent_rsp_fifo_out_endofpacket;                           // fifo_source_10_in_csr_agent_rsp_fifo:out_endofpacket -> fifo_source_10_in_csr_agent:rf_sink_endofpacket
	wire         cmd_mux_016_src_valid;                                                          // cmd_mux_016:src_valid -> fifo_source_10_in_csr_agent:cp_valid
	wire  [95:0] cmd_mux_016_src_data;                                                           // cmd_mux_016:src_data -> fifo_source_10_in_csr_agent:cp_data
	wire         cmd_mux_016_src_ready;                                                          // fifo_source_10_in_csr_agent:cp_ready -> cmd_mux_016:src_ready
	wire  [24:0] cmd_mux_016_src_channel;                                                        // cmd_mux_016:src_channel -> fifo_source_10_in_csr_agent:cp_channel
	wire         cmd_mux_016_src_startofpacket;                                                  // cmd_mux_016:src_startofpacket -> fifo_source_10_in_csr_agent:cp_startofpacket
	wire         cmd_mux_016_src_endofpacket;                                                    // cmd_mux_016:src_endofpacket -> fifo_source_10_in_csr_agent:cp_endofpacket
	wire  [31:0] fifo_sink_10_out_agent_m0_readdata;                                             // fifo_sink_10_out_translator:uav_readdata -> fifo_sink_10_out_agent:m0_readdata
	wire         fifo_sink_10_out_agent_m0_waitrequest;                                          // fifo_sink_10_out_translator:uav_waitrequest -> fifo_sink_10_out_agent:m0_waitrequest
	wire         fifo_sink_10_out_agent_m0_debugaccess;                                          // fifo_sink_10_out_agent:m0_debugaccess -> fifo_sink_10_out_translator:uav_debugaccess
	wire  [15:0] fifo_sink_10_out_agent_m0_address;                                              // fifo_sink_10_out_agent:m0_address -> fifo_sink_10_out_translator:uav_address
	wire   [3:0] fifo_sink_10_out_agent_m0_byteenable;                                           // fifo_sink_10_out_agent:m0_byteenable -> fifo_sink_10_out_translator:uav_byteenable
	wire         fifo_sink_10_out_agent_m0_read;                                                 // fifo_sink_10_out_agent:m0_read -> fifo_sink_10_out_translator:uav_read
	wire         fifo_sink_10_out_agent_m0_readdatavalid;                                        // fifo_sink_10_out_translator:uav_readdatavalid -> fifo_sink_10_out_agent:m0_readdatavalid
	wire         fifo_sink_10_out_agent_m0_lock;                                                 // fifo_sink_10_out_agent:m0_lock -> fifo_sink_10_out_translator:uav_lock
	wire  [31:0] fifo_sink_10_out_agent_m0_writedata;                                            // fifo_sink_10_out_agent:m0_writedata -> fifo_sink_10_out_translator:uav_writedata
	wire         fifo_sink_10_out_agent_m0_write;                                                // fifo_sink_10_out_agent:m0_write -> fifo_sink_10_out_translator:uav_write
	wire   [2:0] fifo_sink_10_out_agent_m0_burstcount;                                           // fifo_sink_10_out_agent:m0_burstcount -> fifo_sink_10_out_translator:uav_burstcount
	wire         fifo_sink_10_out_agent_rf_source_valid;                                         // fifo_sink_10_out_agent:rf_source_valid -> fifo_sink_10_out_agent_rsp_fifo:in_valid
	wire  [96:0] fifo_sink_10_out_agent_rf_source_data;                                          // fifo_sink_10_out_agent:rf_source_data -> fifo_sink_10_out_agent_rsp_fifo:in_data
	wire         fifo_sink_10_out_agent_rf_source_ready;                                         // fifo_sink_10_out_agent_rsp_fifo:in_ready -> fifo_sink_10_out_agent:rf_source_ready
	wire         fifo_sink_10_out_agent_rf_source_startofpacket;                                 // fifo_sink_10_out_agent:rf_source_startofpacket -> fifo_sink_10_out_agent_rsp_fifo:in_startofpacket
	wire         fifo_sink_10_out_agent_rf_source_endofpacket;                                   // fifo_sink_10_out_agent:rf_source_endofpacket -> fifo_sink_10_out_agent_rsp_fifo:in_endofpacket
	wire         fifo_sink_10_out_agent_rsp_fifo_out_valid;                                      // fifo_sink_10_out_agent_rsp_fifo:out_valid -> fifo_sink_10_out_agent:rf_sink_valid
	wire  [96:0] fifo_sink_10_out_agent_rsp_fifo_out_data;                                       // fifo_sink_10_out_agent_rsp_fifo:out_data -> fifo_sink_10_out_agent:rf_sink_data
	wire         fifo_sink_10_out_agent_rsp_fifo_out_ready;                                      // fifo_sink_10_out_agent:rf_sink_ready -> fifo_sink_10_out_agent_rsp_fifo:out_ready
	wire         fifo_sink_10_out_agent_rsp_fifo_out_startofpacket;                              // fifo_sink_10_out_agent_rsp_fifo:out_startofpacket -> fifo_sink_10_out_agent:rf_sink_startofpacket
	wire         fifo_sink_10_out_agent_rsp_fifo_out_endofpacket;                                // fifo_sink_10_out_agent_rsp_fifo:out_endofpacket -> fifo_sink_10_out_agent:rf_sink_endofpacket
	wire         cmd_mux_017_src_valid;                                                          // cmd_mux_017:src_valid -> fifo_sink_10_out_agent:cp_valid
	wire  [95:0] cmd_mux_017_src_data;                                                           // cmd_mux_017:src_data -> fifo_sink_10_out_agent:cp_data
	wire         cmd_mux_017_src_ready;                                                          // fifo_sink_10_out_agent:cp_ready -> cmd_mux_017:src_ready
	wire  [24:0] cmd_mux_017_src_channel;                                                        // cmd_mux_017:src_channel -> fifo_sink_10_out_agent:cp_channel
	wire         cmd_mux_017_src_startofpacket;                                                  // cmd_mux_017:src_startofpacket -> fifo_sink_10_out_agent:cp_startofpacket
	wire         cmd_mux_017_src_endofpacket;                                                    // cmd_mux_017:src_endofpacket -> fifo_sink_10_out_agent:cp_endofpacket
	wire  [31:0] data_mem_10_s1_agent_m0_readdata;                                               // data_mem_10_s1_translator:uav_readdata -> data_mem_10_s1_agent:m0_readdata
	wire         data_mem_10_s1_agent_m0_waitrequest;                                            // data_mem_10_s1_translator:uav_waitrequest -> data_mem_10_s1_agent:m0_waitrequest
	wire         data_mem_10_s1_agent_m0_debugaccess;                                            // data_mem_10_s1_agent:m0_debugaccess -> data_mem_10_s1_translator:uav_debugaccess
	wire  [15:0] data_mem_10_s1_agent_m0_address;                                                // data_mem_10_s1_agent:m0_address -> data_mem_10_s1_translator:uav_address
	wire   [3:0] data_mem_10_s1_agent_m0_byteenable;                                             // data_mem_10_s1_agent:m0_byteenable -> data_mem_10_s1_translator:uav_byteenable
	wire         data_mem_10_s1_agent_m0_read;                                                   // data_mem_10_s1_agent:m0_read -> data_mem_10_s1_translator:uav_read
	wire         data_mem_10_s1_agent_m0_readdatavalid;                                          // data_mem_10_s1_translator:uav_readdatavalid -> data_mem_10_s1_agent:m0_readdatavalid
	wire         data_mem_10_s1_agent_m0_lock;                                                   // data_mem_10_s1_agent:m0_lock -> data_mem_10_s1_translator:uav_lock
	wire  [31:0] data_mem_10_s1_agent_m0_writedata;                                              // data_mem_10_s1_agent:m0_writedata -> data_mem_10_s1_translator:uav_writedata
	wire         data_mem_10_s1_agent_m0_write;                                                  // data_mem_10_s1_agent:m0_write -> data_mem_10_s1_translator:uav_write
	wire   [2:0] data_mem_10_s1_agent_m0_burstcount;                                             // data_mem_10_s1_agent:m0_burstcount -> data_mem_10_s1_translator:uav_burstcount
	wire         data_mem_10_s1_agent_rf_source_valid;                                           // data_mem_10_s1_agent:rf_source_valid -> data_mem_10_s1_agent_rsp_fifo:in_valid
	wire  [96:0] data_mem_10_s1_agent_rf_source_data;                                            // data_mem_10_s1_agent:rf_source_data -> data_mem_10_s1_agent_rsp_fifo:in_data
	wire         data_mem_10_s1_agent_rf_source_ready;                                           // data_mem_10_s1_agent_rsp_fifo:in_ready -> data_mem_10_s1_agent:rf_source_ready
	wire         data_mem_10_s1_agent_rf_source_startofpacket;                                   // data_mem_10_s1_agent:rf_source_startofpacket -> data_mem_10_s1_agent_rsp_fifo:in_startofpacket
	wire         data_mem_10_s1_agent_rf_source_endofpacket;                                     // data_mem_10_s1_agent:rf_source_endofpacket -> data_mem_10_s1_agent_rsp_fifo:in_endofpacket
	wire         data_mem_10_s1_agent_rsp_fifo_out_valid;                                        // data_mem_10_s1_agent_rsp_fifo:out_valid -> data_mem_10_s1_agent:rf_sink_valid
	wire  [96:0] data_mem_10_s1_agent_rsp_fifo_out_data;                                         // data_mem_10_s1_agent_rsp_fifo:out_data -> data_mem_10_s1_agent:rf_sink_data
	wire         data_mem_10_s1_agent_rsp_fifo_out_ready;                                        // data_mem_10_s1_agent:rf_sink_ready -> data_mem_10_s1_agent_rsp_fifo:out_ready
	wire         data_mem_10_s1_agent_rsp_fifo_out_startofpacket;                                // data_mem_10_s1_agent_rsp_fifo:out_startofpacket -> data_mem_10_s1_agent:rf_sink_startofpacket
	wire         data_mem_10_s1_agent_rsp_fifo_out_endofpacket;                                  // data_mem_10_s1_agent_rsp_fifo:out_endofpacket -> data_mem_10_s1_agent:rf_sink_endofpacket
	wire         cmd_mux_018_src_valid;                                                          // cmd_mux_018:src_valid -> data_mem_10_s1_agent:cp_valid
	wire  [95:0] cmd_mux_018_src_data;                                                           // cmd_mux_018:src_data -> data_mem_10_s1_agent:cp_data
	wire         cmd_mux_018_src_ready;                                                          // data_mem_10_s1_agent:cp_ready -> cmd_mux_018:src_ready
	wire  [24:0] cmd_mux_018_src_channel;                                                        // cmd_mux_018:src_channel -> data_mem_10_s1_agent:cp_channel
	wire         cmd_mux_018_src_startofpacket;                                                  // cmd_mux_018:src_startofpacket -> data_mem_10_s1_agent:cp_startofpacket
	wire         cmd_mux_018_src_endofpacket;                                                    // cmd_mux_018:src_endofpacket -> data_mem_10_s1_agent:cp_endofpacket
	wire  [31:0] nios2_01_debug_mem_slave_agent_m0_readdata;                                     // nios2_01_debug_mem_slave_translator:uav_readdata -> nios2_01_debug_mem_slave_agent:m0_readdata
	wire         nios2_01_debug_mem_slave_agent_m0_waitrequest;                                  // nios2_01_debug_mem_slave_translator:uav_waitrequest -> nios2_01_debug_mem_slave_agent:m0_waitrequest
	wire         nios2_01_debug_mem_slave_agent_m0_debugaccess;                                  // nios2_01_debug_mem_slave_agent:m0_debugaccess -> nios2_01_debug_mem_slave_translator:uav_debugaccess
	wire  [15:0] nios2_01_debug_mem_slave_agent_m0_address;                                      // nios2_01_debug_mem_slave_agent:m0_address -> nios2_01_debug_mem_slave_translator:uav_address
	wire   [3:0] nios2_01_debug_mem_slave_agent_m0_byteenable;                                   // nios2_01_debug_mem_slave_agent:m0_byteenable -> nios2_01_debug_mem_slave_translator:uav_byteenable
	wire         nios2_01_debug_mem_slave_agent_m0_read;                                         // nios2_01_debug_mem_slave_agent:m0_read -> nios2_01_debug_mem_slave_translator:uav_read
	wire         nios2_01_debug_mem_slave_agent_m0_readdatavalid;                                // nios2_01_debug_mem_slave_translator:uav_readdatavalid -> nios2_01_debug_mem_slave_agent:m0_readdatavalid
	wire         nios2_01_debug_mem_slave_agent_m0_lock;                                         // nios2_01_debug_mem_slave_agent:m0_lock -> nios2_01_debug_mem_slave_translator:uav_lock
	wire  [31:0] nios2_01_debug_mem_slave_agent_m0_writedata;                                    // nios2_01_debug_mem_slave_agent:m0_writedata -> nios2_01_debug_mem_slave_translator:uav_writedata
	wire         nios2_01_debug_mem_slave_agent_m0_write;                                        // nios2_01_debug_mem_slave_agent:m0_write -> nios2_01_debug_mem_slave_translator:uav_write
	wire   [2:0] nios2_01_debug_mem_slave_agent_m0_burstcount;                                   // nios2_01_debug_mem_slave_agent:m0_burstcount -> nios2_01_debug_mem_slave_translator:uav_burstcount
	wire         nios2_01_debug_mem_slave_agent_rf_source_valid;                                 // nios2_01_debug_mem_slave_agent:rf_source_valid -> nios2_01_debug_mem_slave_agent_rsp_fifo:in_valid
	wire  [96:0] nios2_01_debug_mem_slave_agent_rf_source_data;                                  // nios2_01_debug_mem_slave_agent:rf_source_data -> nios2_01_debug_mem_slave_agent_rsp_fifo:in_data
	wire         nios2_01_debug_mem_slave_agent_rf_source_ready;                                 // nios2_01_debug_mem_slave_agent_rsp_fifo:in_ready -> nios2_01_debug_mem_slave_agent:rf_source_ready
	wire         nios2_01_debug_mem_slave_agent_rf_source_startofpacket;                         // nios2_01_debug_mem_slave_agent:rf_source_startofpacket -> nios2_01_debug_mem_slave_agent_rsp_fifo:in_startofpacket
	wire         nios2_01_debug_mem_slave_agent_rf_source_endofpacket;                           // nios2_01_debug_mem_slave_agent:rf_source_endofpacket -> nios2_01_debug_mem_slave_agent_rsp_fifo:in_endofpacket
	wire         nios2_01_debug_mem_slave_agent_rsp_fifo_out_valid;                              // nios2_01_debug_mem_slave_agent_rsp_fifo:out_valid -> nios2_01_debug_mem_slave_agent:rf_sink_valid
	wire  [96:0] nios2_01_debug_mem_slave_agent_rsp_fifo_out_data;                               // nios2_01_debug_mem_slave_agent_rsp_fifo:out_data -> nios2_01_debug_mem_slave_agent:rf_sink_data
	wire         nios2_01_debug_mem_slave_agent_rsp_fifo_out_ready;                              // nios2_01_debug_mem_slave_agent:rf_sink_ready -> nios2_01_debug_mem_slave_agent_rsp_fifo:out_ready
	wire         nios2_01_debug_mem_slave_agent_rsp_fifo_out_startofpacket;                      // nios2_01_debug_mem_slave_agent_rsp_fifo:out_startofpacket -> nios2_01_debug_mem_slave_agent:rf_sink_startofpacket
	wire         nios2_01_debug_mem_slave_agent_rsp_fifo_out_endofpacket;                        // nios2_01_debug_mem_slave_agent_rsp_fifo:out_endofpacket -> nios2_01_debug_mem_slave_agent:rf_sink_endofpacket
	wire         cmd_mux_019_src_valid;                                                          // cmd_mux_019:src_valid -> nios2_01_debug_mem_slave_agent:cp_valid
	wire  [95:0] cmd_mux_019_src_data;                                                           // cmd_mux_019:src_data -> nios2_01_debug_mem_slave_agent:cp_data
	wire         cmd_mux_019_src_ready;                                                          // nios2_01_debug_mem_slave_agent:cp_ready -> cmd_mux_019:src_ready
	wire  [24:0] cmd_mux_019_src_channel;                                                        // cmd_mux_019:src_channel -> nios2_01_debug_mem_slave_agent:cp_channel
	wire         cmd_mux_019_src_startofpacket;                                                  // cmd_mux_019:src_startofpacket -> nios2_01_debug_mem_slave_agent:cp_startofpacket
	wire         cmd_mux_019_src_endofpacket;                                                    // cmd_mux_019:src_endofpacket -> nios2_01_debug_mem_slave_agent:cp_endofpacket
	wire  [31:0] fifo_source_01_in_agent_m0_readdata;                                            // fifo_source_01_in_translator:uav_readdata -> fifo_source_01_in_agent:m0_readdata
	wire         fifo_source_01_in_agent_m0_waitrequest;                                         // fifo_source_01_in_translator:uav_waitrequest -> fifo_source_01_in_agent:m0_waitrequest
	wire         fifo_source_01_in_agent_m0_debugaccess;                                         // fifo_source_01_in_agent:m0_debugaccess -> fifo_source_01_in_translator:uav_debugaccess
	wire  [15:0] fifo_source_01_in_agent_m0_address;                                             // fifo_source_01_in_agent:m0_address -> fifo_source_01_in_translator:uav_address
	wire   [3:0] fifo_source_01_in_agent_m0_byteenable;                                          // fifo_source_01_in_agent:m0_byteenable -> fifo_source_01_in_translator:uav_byteenable
	wire         fifo_source_01_in_agent_m0_read;                                                // fifo_source_01_in_agent:m0_read -> fifo_source_01_in_translator:uav_read
	wire         fifo_source_01_in_agent_m0_readdatavalid;                                       // fifo_source_01_in_translator:uav_readdatavalid -> fifo_source_01_in_agent:m0_readdatavalid
	wire         fifo_source_01_in_agent_m0_lock;                                                // fifo_source_01_in_agent:m0_lock -> fifo_source_01_in_translator:uav_lock
	wire  [31:0] fifo_source_01_in_agent_m0_writedata;                                           // fifo_source_01_in_agent:m0_writedata -> fifo_source_01_in_translator:uav_writedata
	wire         fifo_source_01_in_agent_m0_write;                                               // fifo_source_01_in_agent:m0_write -> fifo_source_01_in_translator:uav_write
	wire   [2:0] fifo_source_01_in_agent_m0_burstcount;                                          // fifo_source_01_in_agent:m0_burstcount -> fifo_source_01_in_translator:uav_burstcount
	wire         fifo_source_01_in_agent_rf_source_valid;                                        // fifo_source_01_in_agent:rf_source_valid -> fifo_source_01_in_agent_rsp_fifo:in_valid
	wire  [96:0] fifo_source_01_in_agent_rf_source_data;                                         // fifo_source_01_in_agent:rf_source_data -> fifo_source_01_in_agent_rsp_fifo:in_data
	wire         fifo_source_01_in_agent_rf_source_ready;                                        // fifo_source_01_in_agent_rsp_fifo:in_ready -> fifo_source_01_in_agent:rf_source_ready
	wire         fifo_source_01_in_agent_rf_source_startofpacket;                                // fifo_source_01_in_agent:rf_source_startofpacket -> fifo_source_01_in_agent_rsp_fifo:in_startofpacket
	wire         fifo_source_01_in_agent_rf_source_endofpacket;                                  // fifo_source_01_in_agent:rf_source_endofpacket -> fifo_source_01_in_agent_rsp_fifo:in_endofpacket
	wire         fifo_source_01_in_agent_rsp_fifo_out_valid;                                     // fifo_source_01_in_agent_rsp_fifo:out_valid -> fifo_source_01_in_agent:rf_sink_valid
	wire  [96:0] fifo_source_01_in_agent_rsp_fifo_out_data;                                      // fifo_source_01_in_agent_rsp_fifo:out_data -> fifo_source_01_in_agent:rf_sink_data
	wire         fifo_source_01_in_agent_rsp_fifo_out_ready;                                     // fifo_source_01_in_agent:rf_sink_ready -> fifo_source_01_in_agent_rsp_fifo:out_ready
	wire         fifo_source_01_in_agent_rsp_fifo_out_startofpacket;                             // fifo_source_01_in_agent_rsp_fifo:out_startofpacket -> fifo_source_01_in_agent:rf_sink_startofpacket
	wire         fifo_source_01_in_agent_rsp_fifo_out_endofpacket;                               // fifo_source_01_in_agent_rsp_fifo:out_endofpacket -> fifo_source_01_in_agent:rf_sink_endofpacket
	wire         cmd_mux_020_src_valid;                                                          // cmd_mux_020:src_valid -> fifo_source_01_in_agent:cp_valid
	wire  [95:0] cmd_mux_020_src_data;                                                           // cmd_mux_020:src_data -> fifo_source_01_in_agent:cp_data
	wire         cmd_mux_020_src_ready;                                                          // fifo_source_01_in_agent:cp_ready -> cmd_mux_020:src_ready
	wire  [24:0] cmd_mux_020_src_channel;                                                        // cmd_mux_020:src_channel -> fifo_source_01_in_agent:cp_channel
	wire         cmd_mux_020_src_startofpacket;                                                  // cmd_mux_020:src_startofpacket -> fifo_source_01_in_agent:cp_startofpacket
	wire         cmd_mux_020_src_endofpacket;                                                    // cmd_mux_020:src_endofpacket -> fifo_source_01_in_agent:cp_endofpacket
	wire  [31:0] fifo_sink_01_in_csr_agent_m0_readdata;                                          // fifo_sink_01_in_csr_translator:uav_readdata -> fifo_sink_01_in_csr_agent:m0_readdata
	wire         fifo_sink_01_in_csr_agent_m0_waitrequest;                                       // fifo_sink_01_in_csr_translator:uav_waitrequest -> fifo_sink_01_in_csr_agent:m0_waitrequest
	wire         fifo_sink_01_in_csr_agent_m0_debugaccess;                                       // fifo_sink_01_in_csr_agent:m0_debugaccess -> fifo_sink_01_in_csr_translator:uav_debugaccess
	wire  [15:0] fifo_sink_01_in_csr_agent_m0_address;                                           // fifo_sink_01_in_csr_agent:m0_address -> fifo_sink_01_in_csr_translator:uav_address
	wire   [3:0] fifo_sink_01_in_csr_agent_m0_byteenable;                                        // fifo_sink_01_in_csr_agent:m0_byteenable -> fifo_sink_01_in_csr_translator:uav_byteenable
	wire         fifo_sink_01_in_csr_agent_m0_read;                                              // fifo_sink_01_in_csr_agent:m0_read -> fifo_sink_01_in_csr_translator:uav_read
	wire         fifo_sink_01_in_csr_agent_m0_readdatavalid;                                     // fifo_sink_01_in_csr_translator:uav_readdatavalid -> fifo_sink_01_in_csr_agent:m0_readdatavalid
	wire         fifo_sink_01_in_csr_agent_m0_lock;                                              // fifo_sink_01_in_csr_agent:m0_lock -> fifo_sink_01_in_csr_translator:uav_lock
	wire  [31:0] fifo_sink_01_in_csr_agent_m0_writedata;                                         // fifo_sink_01_in_csr_agent:m0_writedata -> fifo_sink_01_in_csr_translator:uav_writedata
	wire         fifo_sink_01_in_csr_agent_m0_write;                                             // fifo_sink_01_in_csr_agent:m0_write -> fifo_sink_01_in_csr_translator:uav_write
	wire   [2:0] fifo_sink_01_in_csr_agent_m0_burstcount;                                        // fifo_sink_01_in_csr_agent:m0_burstcount -> fifo_sink_01_in_csr_translator:uav_burstcount
	wire         fifo_sink_01_in_csr_agent_rf_source_valid;                                      // fifo_sink_01_in_csr_agent:rf_source_valid -> fifo_sink_01_in_csr_agent_rsp_fifo:in_valid
	wire  [96:0] fifo_sink_01_in_csr_agent_rf_source_data;                                       // fifo_sink_01_in_csr_agent:rf_source_data -> fifo_sink_01_in_csr_agent_rsp_fifo:in_data
	wire         fifo_sink_01_in_csr_agent_rf_source_ready;                                      // fifo_sink_01_in_csr_agent_rsp_fifo:in_ready -> fifo_sink_01_in_csr_agent:rf_source_ready
	wire         fifo_sink_01_in_csr_agent_rf_source_startofpacket;                              // fifo_sink_01_in_csr_agent:rf_source_startofpacket -> fifo_sink_01_in_csr_agent_rsp_fifo:in_startofpacket
	wire         fifo_sink_01_in_csr_agent_rf_source_endofpacket;                                // fifo_sink_01_in_csr_agent:rf_source_endofpacket -> fifo_sink_01_in_csr_agent_rsp_fifo:in_endofpacket
	wire         fifo_sink_01_in_csr_agent_rsp_fifo_out_valid;                                   // fifo_sink_01_in_csr_agent_rsp_fifo:out_valid -> fifo_sink_01_in_csr_agent:rf_sink_valid
	wire  [96:0] fifo_sink_01_in_csr_agent_rsp_fifo_out_data;                                    // fifo_sink_01_in_csr_agent_rsp_fifo:out_data -> fifo_sink_01_in_csr_agent:rf_sink_data
	wire         fifo_sink_01_in_csr_agent_rsp_fifo_out_ready;                                   // fifo_sink_01_in_csr_agent:rf_sink_ready -> fifo_sink_01_in_csr_agent_rsp_fifo:out_ready
	wire         fifo_sink_01_in_csr_agent_rsp_fifo_out_startofpacket;                           // fifo_sink_01_in_csr_agent_rsp_fifo:out_startofpacket -> fifo_sink_01_in_csr_agent:rf_sink_startofpacket
	wire         fifo_sink_01_in_csr_agent_rsp_fifo_out_endofpacket;                             // fifo_sink_01_in_csr_agent_rsp_fifo:out_endofpacket -> fifo_sink_01_in_csr_agent:rf_sink_endofpacket
	wire         cmd_mux_021_src_valid;                                                          // cmd_mux_021:src_valid -> fifo_sink_01_in_csr_agent:cp_valid
	wire  [95:0] cmd_mux_021_src_data;                                                           // cmd_mux_021:src_data -> fifo_sink_01_in_csr_agent:cp_data
	wire         cmd_mux_021_src_ready;                                                          // fifo_sink_01_in_csr_agent:cp_ready -> cmd_mux_021:src_ready
	wire  [24:0] cmd_mux_021_src_channel;                                                        // cmd_mux_021:src_channel -> fifo_sink_01_in_csr_agent:cp_channel
	wire         cmd_mux_021_src_startofpacket;                                                  // cmd_mux_021:src_startofpacket -> fifo_sink_01_in_csr_agent:cp_startofpacket
	wire         cmd_mux_021_src_endofpacket;                                                    // cmd_mux_021:src_endofpacket -> fifo_sink_01_in_csr_agent:cp_endofpacket
	wire  [31:0] fifo_source_01_in_csr_agent_m0_readdata;                                        // fifo_source_01_in_csr_translator:uav_readdata -> fifo_source_01_in_csr_agent:m0_readdata
	wire         fifo_source_01_in_csr_agent_m0_waitrequest;                                     // fifo_source_01_in_csr_translator:uav_waitrequest -> fifo_source_01_in_csr_agent:m0_waitrequest
	wire         fifo_source_01_in_csr_agent_m0_debugaccess;                                     // fifo_source_01_in_csr_agent:m0_debugaccess -> fifo_source_01_in_csr_translator:uav_debugaccess
	wire  [15:0] fifo_source_01_in_csr_agent_m0_address;                                         // fifo_source_01_in_csr_agent:m0_address -> fifo_source_01_in_csr_translator:uav_address
	wire   [3:0] fifo_source_01_in_csr_agent_m0_byteenable;                                      // fifo_source_01_in_csr_agent:m0_byteenable -> fifo_source_01_in_csr_translator:uav_byteenable
	wire         fifo_source_01_in_csr_agent_m0_read;                                            // fifo_source_01_in_csr_agent:m0_read -> fifo_source_01_in_csr_translator:uav_read
	wire         fifo_source_01_in_csr_agent_m0_readdatavalid;                                   // fifo_source_01_in_csr_translator:uav_readdatavalid -> fifo_source_01_in_csr_agent:m0_readdatavalid
	wire         fifo_source_01_in_csr_agent_m0_lock;                                            // fifo_source_01_in_csr_agent:m0_lock -> fifo_source_01_in_csr_translator:uav_lock
	wire  [31:0] fifo_source_01_in_csr_agent_m0_writedata;                                       // fifo_source_01_in_csr_agent:m0_writedata -> fifo_source_01_in_csr_translator:uav_writedata
	wire         fifo_source_01_in_csr_agent_m0_write;                                           // fifo_source_01_in_csr_agent:m0_write -> fifo_source_01_in_csr_translator:uav_write
	wire   [2:0] fifo_source_01_in_csr_agent_m0_burstcount;                                      // fifo_source_01_in_csr_agent:m0_burstcount -> fifo_source_01_in_csr_translator:uav_burstcount
	wire         fifo_source_01_in_csr_agent_rf_source_valid;                                    // fifo_source_01_in_csr_agent:rf_source_valid -> fifo_source_01_in_csr_agent_rsp_fifo:in_valid
	wire  [96:0] fifo_source_01_in_csr_agent_rf_source_data;                                     // fifo_source_01_in_csr_agent:rf_source_data -> fifo_source_01_in_csr_agent_rsp_fifo:in_data
	wire         fifo_source_01_in_csr_agent_rf_source_ready;                                    // fifo_source_01_in_csr_agent_rsp_fifo:in_ready -> fifo_source_01_in_csr_agent:rf_source_ready
	wire         fifo_source_01_in_csr_agent_rf_source_startofpacket;                            // fifo_source_01_in_csr_agent:rf_source_startofpacket -> fifo_source_01_in_csr_agent_rsp_fifo:in_startofpacket
	wire         fifo_source_01_in_csr_agent_rf_source_endofpacket;                              // fifo_source_01_in_csr_agent:rf_source_endofpacket -> fifo_source_01_in_csr_agent_rsp_fifo:in_endofpacket
	wire         fifo_source_01_in_csr_agent_rsp_fifo_out_valid;                                 // fifo_source_01_in_csr_agent_rsp_fifo:out_valid -> fifo_source_01_in_csr_agent:rf_sink_valid
	wire  [96:0] fifo_source_01_in_csr_agent_rsp_fifo_out_data;                                  // fifo_source_01_in_csr_agent_rsp_fifo:out_data -> fifo_source_01_in_csr_agent:rf_sink_data
	wire         fifo_source_01_in_csr_agent_rsp_fifo_out_ready;                                 // fifo_source_01_in_csr_agent:rf_sink_ready -> fifo_source_01_in_csr_agent_rsp_fifo:out_ready
	wire         fifo_source_01_in_csr_agent_rsp_fifo_out_startofpacket;                         // fifo_source_01_in_csr_agent_rsp_fifo:out_startofpacket -> fifo_source_01_in_csr_agent:rf_sink_startofpacket
	wire         fifo_source_01_in_csr_agent_rsp_fifo_out_endofpacket;                           // fifo_source_01_in_csr_agent_rsp_fifo:out_endofpacket -> fifo_source_01_in_csr_agent:rf_sink_endofpacket
	wire         cmd_mux_022_src_valid;                                                          // cmd_mux_022:src_valid -> fifo_source_01_in_csr_agent:cp_valid
	wire  [95:0] cmd_mux_022_src_data;                                                           // cmd_mux_022:src_data -> fifo_source_01_in_csr_agent:cp_data
	wire         cmd_mux_022_src_ready;                                                          // fifo_source_01_in_csr_agent:cp_ready -> cmd_mux_022:src_ready
	wire  [24:0] cmd_mux_022_src_channel;                                                        // cmd_mux_022:src_channel -> fifo_source_01_in_csr_agent:cp_channel
	wire         cmd_mux_022_src_startofpacket;                                                  // cmd_mux_022:src_startofpacket -> fifo_source_01_in_csr_agent:cp_startofpacket
	wire         cmd_mux_022_src_endofpacket;                                                    // cmd_mux_022:src_endofpacket -> fifo_source_01_in_csr_agent:cp_endofpacket
	wire  [31:0] fifo_sink_01_out_agent_m0_readdata;                                             // fifo_sink_01_out_translator:uav_readdata -> fifo_sink_01_out_agent:m0_readdata
	wire         fifo_sink_01_out_agent_m0_waitrequest;                                          // fifo_sink_01_out_translator:uav_waitrequest -> fifo_sink_01_out_agent:m0_waitrequest
	wire         fifo_sink_01_out_agent_m0_debugaccess;                                          // fifo_sink_01_out_agent:m0_debugaccess -> fifo_sink_01_out_translator:uav_debugaccess
	wire  [15:0] fifo_sink_01_out_agent_m0_address;                                              // fifo_sink_01_out_agent:m0_address -> fifo_sink_01_out_translator:uav_address
	wire   [3:0] fifo_sink_01_out_agent_m0_byteenable;                                           // fifo_sink_01_out_agent:m0_byteenable -> fifo_sink_01_out_translator:uav_byteenable
	wire         fifo_sink_01_out_agent_m0_read;                                                 // fifo_sink_01_out_agent:m0_read -> fifo_sink_01_out_translator:uav_read
	wire         fifo_sink_01_out_agent_m0_readdatavalid;                                        // fifo_sink_01_out_translator:uav_readdatavalid -> fifo_sink_01_out_agent:m0_readdatavalid
	wire         fifo_sink_01_out_agent_m0_lock;                                                 // fifo_sink_01_out_agent:m0_lock -> fifo_sink_01_out_translator:uav_lock
	wire  [31:0] fifo_sink_01_out_agent_m0_writedata;                                            // fifo_sink_01_out_agent:m0_writedata -> fifo_sink_01_out_translator:uav_writedata
	wire         fifo_sink_01_out_agent_m0_write;                                                // fifo_sink_01_out_agent:m0_write -> fifo_sink_01_out_translator:uav_write
	wire   [2:0] fifo_sink_01_out_agent_m0_burstcount;                                           // fifo_sink_01_out_agent:m0_burstcount -> fifo_sink_01_out_translator:uav_burstcount
	wire         fifo_sink_01_out_agent_rf_source_valid;                                         // fifo_sink_01_out_agent:rf_source_valid -> fifo_sink_01_out_agent_rsp_fifo:in_valid
	wire  [96:0] fifo_sink_01_out_agent_rf_source_data;                                          // fifo_sink_01_out_agent:rf_source_data -> fifo_sink_01_out_agent_rsp_fifo:in_data
	wire         fifo_sink_01_out_agent_rf_source_ready;                                         // fifo_sink_01_out_agent_rsp_fifo:in_ready -> fifo_sink_01_out_agent:rf_source_ready
	wire         fifo_sink_01_out_agent_rf_source_startofpacket;                                 // fifo_sink_01_out_agent:rf_source_startofpacket -> fifo_sink_01_out_agent_rsp_fifo:in_startofpacket
	wire         fifo_sink_01_out_agent_rf_source_endofpacket;                                   // fifo_sink_01_out_agent:rf_source_endofpacket -> fifo_sink_01_out_agent_rsp_fifo:in_endofpacket
	wire         fifo_sink_01_out_agent_rsp_fifo_out_valid;                                      // fifo_sink_01_out_agent_rsp_fifo:out_valid -> fifo_sink_01_out_agent:rf_sink_valid
	wire  [96:0] fifo_sink_01_out_agent_rsp_fifo_out_data;                                       // fifo_sink_01_out_agent_rsp_fifo:out_data -> fifo_sink_01_out_agent:rf_sink_data
	wire         fifo_sink_01_out_agent_rsp_fifo_out_ready;                                      // fifo_sink_01_out_agent:rf_sink_ready -> fifo_sink_01_out_agent_rsp_fifo:out_ready
	wire         fifo_sink_01_out_agent_rsp_fifo_out_startofpacket;                              // fifo_sink_01_out_agent_rsp_fifo:out_startofpacket -> fifo_sink_01_out_agent:rf_sink_startofpacket
	wire         fifo_sink_01_out_agent_rsp_fifo_out_endofpacket;                                // fifo_sink_01_out_agent_rsp_fifo:out_endofpacket -> fifo_sink_01_out_agent:rf_sink_endofpacket
	wire         cmd_mux_023_src_valid;                                                          // cmd_mux_023:src_valid -> fifo_sink_01_out_agent:cp_valid
	wire  [95:0] cmd_mux_023_src_data;                                                           // cmd_mux_023:src_data -> fifo_sink_01_out_agent:cp_data
	wire         cmd_mux_023_src_ready;                                                          // fifo_sink_01_out_agent:cp_ready -> cmd_mux_023:src_ready
	wire  [24:0] cmd_mux_023_src_channel;                                                        // cmd_mux_023:src_channel -> fifo_sink_01_out_agent:cp_channel
	wire         cmd_mux_023_src_startofpacket;                                                  // cmd_mux_023:src_startofpacket -> fifo_sink_01_out_agent:cp_startofpacket
	wire         cmd_mux_023_src_endofpacket;                                                    // cmd_mux_023:src_endofpacket -> fifo_sink_01_out_agent:cp_endofpacket
	wire  [31:0] data_mem_01_s1_agent_m0_readdata;                                               // data_mem_01_s1_translator:uav_readdata -> data_mem_01_s1_agent:m0_readdata
	wire         data_mem_01_s1_agent_m0_waitrequest;                                            // data_mem_01_s1_translator:uav_waitrequest -> data_mem_01_s1_agent:m0_waitrequest
	wire         data_mem_01_s1_agent_m0_debugaccess;                                            // data_mem_01_s1_agent:m0_debugaccess -> data_mem_01_s1_translator:uav_debugaccess
	wire  [15:0] data_mem_01_s1_agent_m0_address;                                                // data_mem_01_s1_agent:m0_address -> data_mem_01_s1_translator:uav_address
	wire   [3:0] data_mem_01_s1_agent_m0_byteenable;                                             // data_mem_01_s1_agent:m0_byteenable -> data_mem_01_s1_translator:uav_byteenable
	wire         data_mem_01_s1_agent_m0_read;                                                   // data_mem_01_s1_agent:m0_read -> data_mem_01_s1_translator:uav_read
	wire         data_mem_01_s1_agent_m0_readdatavalid;                                          // data_mem_01_s1_translator:uav_readdatavalid -> data_mem_01_s1_agent:m0_readdatavalid
	wire         data_mem_01_s1_agent_m0_lock;                                                   // data_mem_01_s1_agent:m0_lock -> data_mem_01_s1_translator:uav_lock
	wire  [31:0] data_mem_01_s1_agent_m0_writedata;                                              // data_mem_01_s1_agent:m0_writedata -> data_mem_01_s1_translator:uav_writedata
	wire         data_mem_01_s1_agent_m0_write;                                                  // data_mem_01_s1_agent:m0_write -> data_mem_01_s1_translator:uav_write
	wire   [2:0] data_mem_01_s1_agent_m0_burstcount;                                             // data_mem_01_s1_agent:m0_burstcount -> data_mem_01_s1_translator:uav_burstcount
	wire         data_mem_01_s1_agent_rf_source_valid;                                           // data_mem_01_s1_agent:rf_source_valid -> data_mem_01_s1_agent_rsp_fifo:in_valid
	wire  [96:0] data_mem_01_s1_agent_rf_source_data;                                            // data_mem_01_s1_agent:rf_source_data -> data_mem_01_s1_agent_rsp_fifo:in_data
	wire         data_mem_01_s1_agent_rf_source_ready;                                           // data_mem_01_s1_agent_rsp_fifo:in_ready -> data_mem_01_s1_agent:rf_source_ready
	wire         data_mem_01_s1_agent_rf_source_startofpacket;                                   // data_mem_01_s1_agent:rf_source_startofpacket -> data_mem_01_s1_agent_rsp_fifo:in_startofpacket
	wire         data_mem_01_s1_agent_rf_source_endofpacket;                                     // data_mem_01_s1_agent:rf_source_endofpacket -> data_mem_01_s1_agent_rsp_fifo:in_endofpacket
	wire         data_mem_01_s1_agent_rsp_fifo_out_valid;                                        // data_mem_01_s1_agent_rsp_fifo:out_valid -> data_mem_01_s1_agent:rf_sink_valid
	wire  [96:0] data_mem_01_s1_agent_rsp_fifo_out_data;                                         // data_mem_01_s1_agent_rsp_fifo:out_data -> data_mem_01_s1_agent:rf_sink_data
	wire         data_mem_01_s1_agent_rsp_fifo_out_ready;                                        // data_mem_01_s1_agent:rf_sink_ready -> data_mem_01_s1_agent_rsp_fifo:out_ready
	wire         data_mem_01_s1_agent_rsp_fifo_out_startofpacket;                                // data_mem_01_s1_agent_rsp_fifo:out_startofpacket -> data_mem_01_s1_agent:rf_sink_startofpacket
	wire         data_mem_01_s1_agent_rsp_fifo_out_endofpacket;                                  // data_mem_01_s1_agent_rsp_fifo:out_endofpacket -> data_mem_01_s1_agent:rf_sink_endofpacket
	wire         cmd_mux_024_src_valid;                                                          // cmd_mux_024:src_valid -> data_mem_01_s1_agent:cp_valid
	wire  [95:0] cmd_mux_024_src_data;                                                           // cmd_mux_024:src_data -> data_mem_01_s1_agent:cp_data
	wire         cmd_mux_024_src_ready;                                                          // data_mem_01_s1_agent:cp_ready -> cmd_mux_024:src_ready
	wire  [24:0] cmd_mux_024_src_channel;                                                        // cmd_mux_024:src_channel -> data_mem_01_s1_agent:cp_channel
	wire         cmd_mux_024_src_startofpacket;                                                  // cmd_mux_024:src_startofpacket -> data_mem_01_s1_agent:cp_startofpacket
	wire         cmd_mux_024_src_endofpacket;                                                    // cmd_mux_024:src_endofpacket -> data_mem_01_s1_agent:cp_endofpacket
	wire         nios2_00_data_master_agent_cp_valid;                                            // nios2_00_data_master_agent:cp_valid -> router:sink_valid
	wire  [95:0] nios2_00_data_master_agent_cp_data;                                             // nios2_00_data_master_agent:cp_data -> router:sink_data
	wire         nios2_00_data_master_agent_cp_ready;                                            // router:sink_ready -> nios2_00_data_master_agent:cp_ready
	wire         nios2_00_data_master_agent_cp_startofpacket;                                    // nios2_00_data_master_agent:cp_startofpacket -> router:sink_startofpacket
	wire         nios2_00_data_master_agent_cp_endofpacket;                                      // nios2_00_data_master_agent:cp_endofpacket -> router:sink_endofpacket
	wire         router_src_valid;                                                               // router:src_valid -> cmd_demux:sink_valid
	wire  [95:0] router_src_data;                                                                // router:src_data -> cmd_demux:sink_data
	wire         router_src_ready;                                                               // cmd_demux:sink_ready -> router:src_ready
	wire  [24:0] router_src_channel;                                                             // router:src_channel -> cmd_demux:sink_channel
	wire         router_src_startofpacket;                                                       // router:src_startofpacket -> cmd_demux:sink_startofpacket
	wire         router_src_endofpacket;                                                         // router:src_endofpacket -> cmd_demux:sink_endofpacket
	wire         nios2_01_data_master_agent_cp_valid;                                            // nios2_01_data_master_agent:cp_valid -> router_001:sink_valid
	wire  [95:0] nios2_01_data_master_agent_cp_data;                                             // nios2_01_data_master_agent:cp_data -> router_001:sink_data
	wire         nios2_01_data_master_agent_cp_ready;                                            // router_001:sink_ready -> nios2_01_data_master_agent:cp_ready
	wire         nios2_01_data_master_agent_cp_startofpacket;                                    // nios2_01_data_master_agent:cp_startofpacket -> router_001:sink_startofpacket
	wire         nios2_01_data_master_agent_cp_endofpacket;                                      // nios2_01_data_master_agent:cp_endofpacket -> router_001:sink_endofpacket
	wire         router_001_src_valid;                                                           // router_001:src_valid -> cmd_demux_001:sink_valid
	wire  [95:0] router_001_src_data;                                                            // router_001:src_data -> cmd_demux_001:sink_data
	wire         router_001_src_ready;                                                           // cmd_demux_001:sink_ready -> router_001:src_ready
	wire  [24:0] router_001_src_channel;                                                         // router_001:src_channel -> cmd_demux_001:sink_channel
	wire         router_001_src_startofpacket;                                                   // router_001:src_startofpacket -> cmd_demux_001:sink_startofpacket
	wire         router_001_src_endofpacket;                                                     // router_001:src_endofpacket -> cmd_demux_001:sink_endofpacket
	wire         nios2_10_data_master_agent_cp_valid;                                            // nios2_10_data_master_agent:cp_valid -> router_002:sink_valid
	wire  [95:0] nios2_10_data_master_agent_cp_data;                                             // nios2_10_data_master_agent:cp_data -> router_002:sink_data
	wire         nios2_10_data_master_agent_cp_ready;                                            // router_002:sink_ready -> nios2_10_data_master_agent:cp_ready
	wire         nios2_10_data_master_agent_cp_startofpacket;                                    // nios2_10_data_master_agent:cp_startofpacket -> router_002:sink_startofpacket
	wire         nios2_10_data_master_agent_cp_endofpacket;                                      // nios2_10_data_master_agent:cp_endofpacket -> router_002:sink_endofpacket
	wire         router_002_src_valid;                                                           // router_002:src_valid -> cmd_demux_002:sink_valid
	wire  [95:0] router_002_src_data;                                                            // router_002:src_data -> cmd_demux_002:sink_data
	wire         router_002_src_ready;                                                           // cmd_demux_002:sink_ready -> router_002:src_ready
	wire  [24:0] router_002_src_channel;                                                         // router_002:src_channel -> cmd_demux_002:sink_channel
	wire         router_002_src_startofpacket;                                                   // router_002:src_startofpacket -> cmd_demux_002:sink_startofpacket
	wire         router_002_src_endofpacket;                                                     // router_002:src_endofpacket -> cmd_demux_002:sink_endofpacket
	wire         nios2_11_data_master_agent_cp_valid;                                            // nios2_11_data_master_agent:cp_valid -> router_003:sink_valid
	wire  [95:0] nios2_11_data_master_agent_cp_data;                                             // nios2_11_data_master_agent:cp_data -> router_003:sink_data
	wire         nios2_11_data_master_agent_cp_ready;                                            // router_003:sink_ready -> nios2_11_data_master_agent:cp_ready
	wire         nios2_11_data_master_agent_cp_startofpacket;                                    // nios2_11_data_master_agent:cp_startofpacket -> router_003:sink_startofpacket
	wire         nios2_11_data_master_agent_cp_endofpacket;                                      // nios2_11_data_master_agent:cp_endofpacket -> router_003:sink_endofpacket
	wire         router_003_src_valid;                                                           // router_003:src_valid -> cmd_demux_003:sink_valid
	wire  [95:0] router_003_src_data;                                                            // router_003:src_data -> cmd_demux_003:sink_data
	wire         router_003_src_ready;                                                           // cmd_demux_003:sink_ready -> router_003:src_ready
	wire  [24:0] router_003_src_channel;                                                         // router_003:src_channel -> cmd_demux_003:sink_channel
	wire         router_003_src_startofpacket;                                                   // router_003:src_startofpacket -> cmd_demux_003:sink_startofpacket
	wire         router_003_src_endofpacket;                                                     // router_003:src_endofpacket -> cmd_demux_003:sink_endofpacket
	wire         nios2_11_instruction_master_agent_cp_valid;                                     // nios2_11_instruction_master_agent:cp_valid -> router_004:sink_valid
	wire  [95:0] nios2_11_instruction_master_agent_cp_data;                                      // nios2_11_instruction_master_agent:cp_data -> router_004:sink_data
	wire         nios2_11_instruction_master_agent_cp_ready;                                     // router_004:sink_ready -> nios2_11_instruction_master_agent:cp_ready
	wire         nios2_11_instruction_master_agent_cp_startofpacket;                             // nios2_11_instruction_master_agent:cp_startofpacket -> router_004:sink_startofpacket
	wire         nios2_11_instruction_master_agent_cp_endofpacket;                               // nios2_11_instruction_master_agent:cp_endofpacket -> router_004:sink_endofpacket
	wire         router_004_src_valid;                                                           // router_004:src_valid -> cmd_demux_004:sink_valid
	wire  [95:0] router_004_src_data;                                                            // router_004:src_data -> cmd_demux_004:sink_data
	wire         router_004_src_ready;                                                           // cmd_demux_004:sink_ready -> router_004:src_ready
	wire  [24:0] router_004_src_channel;                                                         // router_004:src_channel -> cmd_demux_004:sink_channel
	wire         router_004_src_startofpacket;                                                   // router_004:src_startofpacket -> cmd_demux_004:sink_startofpacket
	wire         router_004_src_endofpacket;                                                     // router_004:src_endofpacket -> cmd_demux_004:sink_endofpacket
	wire         nios2_10_instruction_master_agent_cp_valid;                                     // nios2_10_instruction_master_agent:cp_valid -> router_005:sink_valid
	wire  [95:0] nios2_10_instruction_master_agent_cp_data;                                      // nios2_10_instruction_master_agent:cp_data -> router_005:sink_data
	wire         nios2_10_instruction_master_agent_cp_ready;                                     // router_005:sink_ready -> nios2_10_instruction_master_agent:cp_ready
	wire         nios2_10_instruction_master_agent_cp_startofpacket;                             // nios2_10_instruction_master_agent:cp_startofpacket -> router_005:sink_startofpacket
	wire         nios2_10_instruction_master_agent_cp_endofpacket;                               // nios2_10_instruction_master_agent:cp_endofpacket -> router_005:sink_endofpacket
	wire         router_005_src_valid;                                                           // router_005:src_valid -> cmd_demux_005:sink_valid
	wire  [95:0] router_005_src_data;                                                            // router_005:src_data -> cmd_demux_005:sink_data
	wire         router_005_src_ready;                                                           // cmd_demux_005:sink_ready -> router_005:src_ready
	wire  [24:0] router_005_src_channel;                                                         // router_005:src_channel -> cmd_demux_005:sink_channel
	wire         router_005_src_startofpacket;                                                   // router_005:src_startofpacket -> cmd_demux_005:sink_startofpacket
	wire         router_005_src_endofpacket;                                                     // router_005:src_endofpacket -> cmd_demux_005:sink_endofpacket
	wire         nios2_01_instruction_master_agent_cp_valid;                                     // nios2_01_instruction_master_agent:cp_valid -> router_006:sink_valid
	wire  [95:0] nios2_01_instruction_master_agent_cp_data;                                      // nios2_01_instruction_master_agent:cp_data -> router_006:sink_data
	wire         nios2_01_instruction_master_agent_cp_ready;                                     // router_006:sink_ready -> nios2_01_instruction_master_agent:cp_ready
	wire         nios2_01_instruction_master_agent_cp_startofpacket;                             // nios2_01_instruction_master_agent:cp_startofpacket -> router_006:sink_startofpacket
	wire         nios2_01_instruction_master_agent_cp_endofpacket;                               // nios2_01_instruction_master_agent:cp_endofpacket -> router_006:sink_endofpacket
	wire         router_006_src_valid;                                                           // router_006:src_valid -> cmd_demux_006:sink_valid
	wire  [95:0] router_006_src_data;                                                            // router_006:src_data -> cmd_demux_006:sink_data
	wire         router_006_src_ready;                                                           // cmd_demux_006:sink_ready -> router_006:src_ready
	wire  [24:0] router_006_src_channel;                                                         // router_006:src_channel -> cmd_demux_006:sink_channel
	wire         router_006_src_startofpacket;                                                   // router_006:src_startofpacket -> cmd_demux_006:sink_startofpacket
	wire         router_006_src_endofpacket;                                                     // router_006:src_endofpacket -> cmd_demux_006:sink_endofpacket
	wire         nios2_00_instruction_master_agent_cp_valid;                                     // nios2_00_instruction_master_agent:cp_valid -> router_007:sink_valid
	wire  [95:0] nios2_00_instruction_master_agent_cp_data;                                      // nios2_00_instruction_master_agent:cp_data -> router_007:sink_data
	wire         nios2_00_instruction_master_agent_cp_ready;                                     // router_007:sink_ready -> nios2_00_instruction_master_agent:cp_ready
	wire         nios2_00_instruction_master_agent_cp_startofpacket;                             // nios2_00_instruction_master_agent:cp_startofpacket -> router_007:sink_startofpacket
	wire         nios2_00_instruction_master_agent_cp_endofpacket;                               // nios2_00_instruction_master_agent:cp_endofpacket -> router_007:sink_endofpacket
	wire         router_007_src_valid;                                                           // router_007:src_valid -> cmd_demux_007:sink_valid
	wire  [95:0] router_007_src_data;                                                            // router_007:src_data -> cmd_demux_007:sink_data
	wire         router_007_src_ready;                                                           // cmd_demux_007:sink_ready -> router_007:src_ready
	wire  [24:0] router_007_src_channel;                                                         // router_007:src_channel -> cmd_demux_007:sink_channel
	wire         router_007_src_startofpacket;                                                   // router_007:src_startofpacket -> cmd_demux_007:sink_startofpacket
	wire         router_007_src_endofpacket;                                                     // router_007:src_endofpacket -> cmd_demux_007:sink_endofpacket
	wire         jtag_uart_0_avalon_jtag_slave_agent_rp_valid;                                   // jtag_uart_0_avalon_jtag_slave_agent:rp_valid -> router_008:sink_valid
	wire  [95:0] jtag_uart_0_avalon_jtag_slave_agent_rp_data;                                    // jtag_uart_0_avalon_jtag_slave_agent:rp_data -> router_008:sink_data
	wire         jtag_uart_0_avalon_jtag_slave_agent_rp_ready;                                   // router_008:sink_ready -> jtag_uart_0_avalon_jtag_slave_agent:rp_ready
	wire         jtag_uart_0_avalon_jtag_slave_agent_rp_startofpacket;                           // jtag_uart_0_avalon_jtag_slave_agent:rp_startofpacket -> router_008:sink_startofpacket
	wire         jtag_uart_0_avalon_jtag_slave_agent_rp_endofpacket;                             // jtag_uart_0_avalon_jtag_slave_agent:rp_endofpacket -> router_008:sink_endofpacket
	wire         router_008_src_valid;                                                           // router_008:src_valid -> rsp_demux:sink_valid
	wire  [95:0] router_008_src_data;                                                            // router_008:src_data -> rsp_demux:sink_data
	wire         router_008_src_ready;                                                           // rsp_demux:sink_ready -> router_008:src_ready
	wire  [24:0] router_008_src_channel;                                                         // router_008:src_channel -> rsp_demux:sink_channel
	wire         router_008_src_startofpacket;                                                   // router_008:src_startofpacket -> rsp_demux:sink_startofpacket
	wire         router_008_src_endofpacket;                                                     // router_008:src_endofpacket -> rsp_demux:sink_endofpacket
	wire         nios2_00_debug_mem_slave_agent_rp_valid;                                        // nios2_00_debug_mem_slave_agent:rp_valid -> router_009:sink_valid
	wire  [95:0] nios2_00_debug_mem_slave_agent_rp_data;                                         // nios2_00_debug_mem_slave_agent:rp_data -> router_009:sink_data
	wire         nios2_00_debug_mem_slave_agent_rp_ready;                                        // router_009:sink_ready -> nios2_00_debug_mem_slave_agent:rp_ready
	wire         nios2_00_debug_mem_slave_agent_rp_startofpacket;                                // nios2_00_debug_mem_slave_agent:rp_startofpacket -> router_009:sink_startofpacket
	wire         nios2_00_debug_mem_slave_agent_rp_endofpacket;                                  // nios2_00_debug_mem_slave_agent:rp_endofpacket -> router_009:sink_endofpacket
	wire         router_009_src_valid;                                                           // router_009:src_valid -> rsp_demux_001:sink_valid
	wire  [95:0] router_009_src_data;                                                            // router_009:src_data -> rsp_demux_001:sink_data
	wire         router_009_src_ready;                                                           // rsp_demux_001:sink_ready -> router_009:src_ready
	wire  [24:0] router_009_src_channel;                                                         // router_009:src_channel -> rsp_demux_001:sink_channel
	wire         router_009_src_startofpacket;                                                   // router_009:src_startofpacket -> rsp_demux_001:sink_startofpacket
	wire         router_009_src_endofpacket;                                                     // router_009:src_endofpacket -> rsp_demux_001:sink_endofpacket
	wire         fifo_source_00_in_agent_rp_valid;                                               // fifo_source_00_in_agent:rp_valid -> router_010:sink_valid
	wire  [95:0] fifo_source_00_in_agent_rp_data;                                                // fifo_source_00_in_agent:rp_data -> router_010:sink_data
	wire         fifo_source_00_in_agent_rp_ready;                                               // router_010:sink_ready -> fifo_source_00_in_agent:rp_ready
	wire         fifo_source_00_in_agent_rp_startofpacket;                                       // fifo_source_00_in_agent:rp_startofpacket -> router_010:sink_startofpacket
	wire         fifo_source_00_in_agent_rp_endofpacket;                                         // fifo_source_00_in_agent:rp_endofpacket -> router_010:sink_endofpacket
	wire         router_010_src_valid;                                                           // router_010:src_valid -> rsp_demux_002:sink_valid
	wire  [95:0] router_010_src_data;                                                            // router_010:src_data -> rsp_demux_002:sink_data
	wire         router_010_src_ready;                                                           // rsp_demux_002:sink_ready -> router_010:src_ready
	wire  [24:0] router_010_src_channel;                                                         // router_010:src_channel -> rsp_demux_002:sink_channel
	wire         router_010_src_startofpacket;                                                   // router_010:src_startofpacket -> rsp_demux_002:sink_startofpacket
	wire         router_010_src_endofpacket;                                                     // router_010:src_endofpacket -> rsp_demux_002:sink_endofpacket
	wire         fifo_sink_00_in_csr_agent_rp_valid;                                             // fifo_sink_00_in_csr_agent:rp_valid -> router_011:sink_valid
	wire  [95:0] fifo_sink_00_in_csr_agent_rp_data;                                              // fifo_sink_00_in_csr_agent:rp_data -> router_011:sink_data
	wire         fifo_sink_00_in_csr_agent_rp_ready;                                             // router_011:sink_ready -> fifo_sink_00_in_csr_agent:rp_ready
	wire         fifo_sink_00_in_csr_agent_rp_startofpacket;                                     // fifo_sink_00_in_csr_agent:rp_startofpacket -> router_011:sink_startofpacket
	wire         fifo_sink_00_in_csr_agent_rp_endofpacket;                                       // fifo_sink_00_in_csr_agent:rp_endofpacket -> router_011:sink_endofpacket
	wire         router_011_src_valid;                                                           // router_011:src_valid -> rsp_demux_003:sink_valid
	wire  [95:0] router_011_src_data;                                                            // router_011:src_data -> rsp_demux_003:sink_data
	wire         router_011_src_ready;                                                           // rsp_demux_003:sink_ready -> router_011:src_ready
	wire  [24:0] router_011_src_channel;                                                         // router_011:src_channel -> rsp_demux_003:sink_channel
	wire         router_011_src_startofpacket;                                                   // router_011:src_startofpacket -> rsp_demux_003:sink_startofpacket
	wire         router_011_src_endofpacket;                                                     // router_011:src_endofpacket -> rsp_demux_003:sink_endofpacket
	wire         fifo_source_00_in_csr_agent_rp_valid;                                           // fifo_source_00_in_csr_agent:rp_valid -> router_012:sink_valid
	wire  [95:0] fifo_source_00_in_csr_agent_rp_data;                                            // fifo_source_00_in_csr_agent:rp_data -> router_012:sink_data
	wire         fifo_source_00_in_csr_agent_rp_ready;                                           // router_012:sink_ready -> fifo_source_00_in_csr_agent:rp_ready
	wire         fifo_source_00_in_csr_agent_rp_startofpacket;                                   // fifo_source_00_in_csr_agent:rp_startofpacket -> router_012:sink_startofpacket
	wire         fifo_source_00_in_csr_agent_rp_endofpacket;                                     // fifo_source_00_in_csr_agent:rp_endofpacket -> router_012:sink_endofpacket
	wire         router_012_src_valid;                                                           // router_012:src_valid -> rsp_demux_004:sink_valid
	wire  [95:0] router_012_src_data;                                                            // router_012:src_data -> rsp_demux_004:sink_data
	wire         router_012_src_ready;                                                           // rsp_demux_004:sink_ready -> router_012:src_ready
	wire  [24:0] router_012_src_channel;                                                         // router_012:src_channel -> rsp_demux_004:sink_channel
	wire         router_012_src_startofpacket;                                                   // router_012:src_startofpacket -> rsp_demux_004:sink_startofpacket
	wire         router_012_src_endofpacket;                                                     // router_012:src_endofpacket -> rsp_demux_004:sink_endofpacket
	wire         fifo_sink_00_out_agent_rp_valid;                                                // fifo_sink_00_out_agent:rp_valid -> router_013:sink_valid
	wire  [95:0] fifo_sink_00_out_agent_rp_data;                                                 // fifo_sink_00_out_agent:rp_data -> router_013:sink_data
	wire         fifo_sink_00_out_agent_rp_ready;                                                // router_013:sink_ready -> fifo_sink_00_out_agent:rp_ready
	wire         fifo_sink_00_out_agent_rp_startofpacket;                                        // fifo_sink_00_out_agent:rp_startofpacket -> router_013:sink_startofpacket
	wire         fifo_sink_00_out_agent_rp_endofpacket;                                          // fifo_sink_00_out_agent:rp_endofpacket -> router_013:sink_endofpacket
	wire         router_013_src_valid;                                                           // router_013:src_valid -> rsp_demux_005:sink_valid
	wire  [95:0] router_013_src_data;                                                            // router_013:src_data -> rsp_demux_005:sink_data
	wire         router_013_src_ready;                                                           // rsp_demux_005:sink_ready -> router_013:src_ready
	wire  [24:0] router_013_src_channel;                                                         // router_013:src_channel -> rsp_demux_005:sink_channel
	wire         router_013_src_startofpacket;                                                   // router_013:src_startofpacket -> rsp_demux_005:sink_startofpacket
	wire         router_013_src_endofpacket;                                                     // router_013:src_endofpacket -> rsp_demux_005:sink_endofpacket
	wire         data_mem_00_s1_agent_rp_valid;                                                  // data_mem_00_s1_agent:rp_valid -> router_014:sink_valid
	wire  [95:0] data_mem_00_s1_agent_rp_data;                                                   // data_mem_00_s1_agent:rp_data -> router_014:sink_data
	wire         data_mem_00_s1_agent_rp_ready;                                                  // router_014:sink_ready -> data_mem_00_s1_agent:rp_ready
	wire         data_mem_00_s1_agent_rp_startofpacket;                                          // data_mem_00_s1_agent:rp_startofpacket -> router_014:sink_startofpacket
	wire         data_mem_00_s1_agent_rp_endofpacket;                                            // data_mem_00_s1_agent:rp_endofpacket -> router_014:sink_endofpacket
	wire         router_014_src_valid;                                                           // router_014:src_valid -> rsp_demux_006:sink_valid
	wire  [95:0] router_014_src_data;                                                            // router_014:src_data -> rsp_demux_006:sink_data
	wire         router_014_src_ready;                                                           // rsp_demux_006:sink_ready -> router_014:src_ready
	wire  [24:0] router_014_src_channel;                                                         // router_014:src_channel -> rsp_demux_006:sink_channel
	wire         router_014_src_startofpacket;                                                   // router_014:src_startofpacket -> rsp_demux_006:sink_startofpacket
	wire         router_014_src_endofpacket;                                                     // router_014:src_endofpacket -> rsp_demux_006:sink_endofpacket
	wire         nios2_11_debug_mem_slave_agent_rp_valid;                                        // nios2_11_debug_mem_slave_agent:rp_valid -> router_015:sink_valid
	wire  [95:0] nios2_11_debug_mem_slave_agent_rp_data;                                         // nios2_11_debug_mem_slave_agent:rp_data -> router_015:sink_data
	wire         nios2_11_debug_mem_slave_agent_rp_ready;                                        // router_015:sink_ready -> nios2_11_debug_mem_slave_agent:rp_ready
	wire         nios2_11_debug_mem_slave_agent_rp_startofpacket;                                // nios2_11_debug_mem_slave_agent:rp_startofpacket -> router_015:sink_startofpacket
	wire         nios2_11_debug_mem_slave_agent_rp_endofpacket;                                  // nios2_11_debug_mem_slave_agent:rp_endofpacket -> router_015:sink_endofpacket
	wire         router_015_src_valid;                                                           // router_015:src_valid -> rsp_demux_007:sink_valid
	wire  [95:0] router_015_src_data;                                                            // router_015:src_data -> rsp_demux_007:sink_data
	wire         router_015_src_ready;                                                           // rsp_demux_007:sink_ready -> router_015:src_ready
	wire  [24:0] router_015_src_channel;                                                         // router_015:src_channel -> rsp_demux_007:sink_channel
	wire         router_015_src_startofpacket;                                                   // router_015:src_startofpacket -> rsp_demux_007:sink_startofpacket
	wire         router_015_src_endofpacket;                                                     // router_015:src_endofpacket -> rsp_demux_007:sink_endofpacket
	wire         fifo_source_11_in_agent_rp_valid;                                               // fifo_source_11_in_agent:rp_valid -> router_016:sink_valid
	wire  [95:0] fifo_source_11_in_agent_rp_data;                                                // fifo_source_11_in_agent:rp_data -> router_016:sink_data
	wire         fifo_source_11_in_agent_rp_ready;                                               // router_016:sink_ready -> fifo_source_11_in_agent:rp_ready
	wire         fifo_source_11_in_agent_rp_startofpacket;                                       // fifo_source_11_in_agent:rp_startofpacket -> router_016:sink_startofpacket
	wire         fifo_source_11_in_agent_rp_endofpacket;                                         // fifo_source_11_in_agent:rp_endofpacket -> router_016:sink_endofpacket
	wire         router_016_src_valid;                                                           // router_016:src_valid -> rsp_demux_008:sink_valid
	wire  [95:0] router_016_src_data;                                                            // router_016:src_data -> rsp_demux_008:sink_data
	wire         router_016_src_ready;                                                           // rsp_demux_008:sink_ready -> router_016:src_ready
	wire  [24:0] router_016_src_channel;                                                         // router_016:src_channel -> rsp_demux_008:sink_channel
	wire         router_016_src_startofpacket;                                                   // router_016:src_startofpacket -> rsp_demux_008:sink_startofpacket
	wire         router_016_src_endofpacket;                                                     // router_016:src_endofpacket -> rsp_demux_008:sink_endofpacket
	wire         fifo_sink_11_in_csr_agent_rp_valid;                                             // fifo_sink_11_in_csr_agent:rp_valid -> router_017:sink_valid
	wire  [95:0] fifo_sink_11_in_csr_agent_rp_data;                                              // fifo_sink_11_in_csr_agent:rp_data -> router_017:sink_data
	wire         fifo_sink_11_in_csr_agent_rp_ready;                                             // router_017:sink_ready -> fifo_sink_11_in_csr_agent:rp_ready
	wire         fifo_sink_11_in_csr_agent_rp_startofpacket;                                     // fifo_sink_11_in_csr_agent:rp_startofpacket -> router_017:sink_startofpacket
	wire         fifo_sink_11_in_csr_agent_rp_endofpacket;                                       // fifo_sink_11_in_csr_agent:rp_endofpacket -> router_017:sink_endofpacket
	wire         router_017_src_valid;                                                           // router_017:src_valid -> rsp_demux_009:sink_valid
	wire  [95:0] router_017_src_data;                                                            // router_017:src_data -> rsp_demux_009:sink_data
	wire         router_017_src_ready;                                                           // rsp_demux_009:sink_ready -> router_017:src_ready
	wire  [24:0] router_017_src_channel;                                                         // router_017:src_channel -> rsp_demux_009:sink_channel
	wire         router_017_src_startofpacket;                                                   // router_017:src_startofpacket -> rsp_demux_009:sink_startofpacket
	wire         router_017_src_endofpacket;                                                     // router_017:src_endofpacket -> rsp_demux_009:sink_endofpacket
	wire         fifo_source_11_in_csr_agent_rp_valid;                                           // fifo_source_11_in_csr_agent:rp_valid -> router_018:sink_valid
	wire  [95:0] fifo_source_11_in_csr_agent_rp_data;                                            // fifo_source_11_in_csr_agent:rp_data -> router_018:sink_data
	wire         fifo_source_11_in_csr_agent_rp_ready;                                           // router_018:sink_ready -> fifo_source_11_in_csr_agent:rp_ready
	wire         fifo_source_11_in_csr_agent_rp_startofpacket;                                   // fifo_source_11_in_csr_agent:rp_startofpacket -> router_018:sink_startofpacket
	wire         fifo_source_11_in_csr_agent_rp_endofpacket;                                     // fifo_source_11_in_csr_agent:rp_endofpacket -> router_018:sink_endofpacket
	wire         router_018_src_valid;                                                           // router_018:src_valid -> rsp_demux_010:sink_valid
	wire  [95:0] router_018_src_data;                                                            // router_018:src_data -> rsp_demux_010:sink_data
	wire         router_018_src_ready;                                                           // rsp_demux_010:sink_ready -> router_018:src_ready
	wire  [24:0] router_018_src_channel;                                                         // router_018:src_channel -> rsp_demux_010:sink_channel
	wire         router_018_src_startofpacket;                                                   // router_018:src_startofpacket -> rsp_demux_010:sink_startofpacket
	wire         router_018_src_endofpacket;                                                     // router_018:src_endofpacket -> rsp_demux_010:sink_endofpacket
	wire         fifo_sink_11_out_agent_rp_valid;                                                // fifo_sink_11_out_agent:rp_valid -> router_019:sink_valid
	wire  [95:0] fifo_sink_11_out_agent_rp_data;                                                 // fifo_sink_11_out_agent:rp_data -> router_019:sink_data
	wire         fifo_sink_11_out_agent_rp_ready;                                                // router_019:sink_ready -> fifo_sink_11_out_agent:rp_ready
	wire         fifo_sink_11_out_agent_rp_startofpacket;                                        // fifo_sink_11_out_agent:rp_startofpacket -> router_019:sink_startofpacket
	wire         fifo_sink_11_out_agent_rp_endofpacket;                                          // fifo_sink_11_out_agent:rp_endofpacket -> router_019:sink_endofpacket
	wire         router_019_src_valid;                                                           // router_019:src_valid -> rsp_demux_011:sink_valid
	wire  [95:0] router_019_src_data;                                                            // router_019:src_data -> rsp_demux_011:sink_data
	wire         router_019_src_ready;                                                           // rsp_demux_011:sink_ready -> router_019:src_ready
	wire  [24:0] router_019_src_channel;                                                         // router_019:src_channel -> rsp_demux_011:sink_channel
	wire         router_019_src_startofpacket;                                                   // router_019:src_startofpacket -> rsp_demux_011:sink_startofpacket
	wire         router_019_src_endofpacket;                                                     // router_019:src_endofpacket -> rsp_demux_011:sink_endofpacket
	wire         data_mem_11_s1_agent_rp_valid;                                                  // data_mem_11_s1_agent:rp_valid -> router_020:sink_valid
	wire  [95:0] data_mem_11_s1_agent_rp_data;                                                   // data_mem_11_s1_agent:rp_data -> router_020:sink_data
	wire         data_mem_11_s1_agent_rp_ready;                                                  // router_020:sink_ready -> data_mem_11_s1_agent:rp_ready
	wire         data_mem_11_s1_agent_rp_startofpacket;                                          // data_mem_11_s1_agent:rp_startofpacket -> router_020:sink_startofpacket
	wire         data_mem_11_s1_agent_rp_endofpacket;                                            // data_mem_11_s1_agent:rp_endofpacket -> router_020:sink_endofpacket
	wire         router_020_src_valid;                                                           // router_020:src_valid -> rsp_demux_012:sink_valid
	wire  [95:0] router_020_src_data;                                                            // router_020:src_data -> rsp_demux_012:sink_data
	wire         router_020_src_ready;                                                           // rsp_demux_012:sink_ready -> router_020:src_ready
	wire  [24:0] router_020_src_channel;                                                         // router_020:src_channel -> rsp_demux_012:sink_channel
	wire         router_020_src_startofpacket;                                                   // router_020:src_startofpacket -> rsp_demux_012:sink_startofpacket
	wire         router_020_src_endofpacket;                                                     // router_020:src_endofpacket -> rsp_demux_012:sink_endofpacket
	wire         nios2_10_debug_mem_slave_agent_rp_valid;                                        // nios2_10_debug_mem_slave_agent:rp_valid -> router_021:sink_valid
	wire  [95:0] nios2_10_debug_mem_slave_agent_rp_data;                                         // nios2_10_debug_mem_slave_agent:rp_data -> router_021:sink_data
	wire         nios2_10_debug_mem_slave_agent_rp_ready;                                        // router_021:sink_ready -> nios2_10_debug_mem_slave_agent:rp_ready
	wire         nios2_10_debug_mem_slave_agent_rp_startofpacket;                                // nios2_10_debug_mem_slave_agent:rp_startofpacket -> router_021:sink_startofpacket
	wire         nios2_10_debug_mem_slave_agent_rp_endofpacket;                                  // nios2_10_debug_mem_slave_agent:rp_endofpacket -> router_021:sink_endofpacket
	wire         router_021_src_valid;                                                           // router_021:src_valid -> rsp_demux_013:sink_valid
	wire  [95:0] router_021_src_data;                                                            // router_021:src_data -> rsp_demux_013:sink_data
	wire         router_021_src_ready;                                                           // rsp_demux_013:sink_ready -> router_021:src_ready
	wire  [24:0] router_021_src_channel;                                                         // router_021:src_channel -> rsp_demux_013:sink_channel
	wire         router_021_src_startofpacket;                                                   // router_021:src_startofpacket -> rsp_demux_013:sink_startofpacket
	wire         router_021_src_endofpacket;                                                     // router_021:src_endofpacket -> rsp_demux_013:sink_endofpacket
	wire         fifo_source_10_in_agent_rp_valid;                                               // fifo_source_10_in_agent:rp_valid -> router_022:sink_valid
	wire  [95:0] fifo_source_10_in_agent_rp_data;                                                // fifo_source_10_in_agent:rp_data -> router_022:sink_data
	wire         fifo_source_10_in_agent_rp_ready;                                               // router_022:sink_ready -> fifo_source_10_in_agent:rp_ready
	wire         fifo_source_10_in_agent_rp_startofpacket;                                       // fifo_source_10_in_agent:rp_startofpacket -> router_022:sink_startofpacket
	wire         fifo_source_10_in_agent_rp_endofpacket;                                         // fifo_source_10_in_agent:rp_endofpacket -> router_022:sink_endofpacket
	wire         router_022_src_valid;                                                           // router_022:src_valid -> rsp_demux_014:sink_valid
	wire  [95:0] router_022_src_data;                                                            // router_022:src_data -> rsp_demux_014:sink_data
	wire         router_022_src_ready;                                                           // rsp_demux_014:sink_ready -> router_022:src_ready
	wire  [24:0] router_022_src_channel;                                                         // router_022:src_channel -> rsp_demux_014:sink_channel
	wire         router_022_src_startofpacket;                                                   // router_022:src_startofpacket -> rsp_demux_014:sink_startofpacket
	wire         router_022_src_endofpacket;                                                     // router_022:src_endofpacket -> rsp_demux_014:sink_endofpacket
	wire         fifo_sink_10_in_csr_agent_rp_valid;                                             // fifo_sink_10_in_csr_agent:rp_valid -> router_023:sink_valid
	wire  [95:0] fifo_sink_10_in_csr_agent_rp_data;                                              // fifo_sink_10_in_csr_agent:rp_data -> router_023:sink_data
	wire         fifo_sink_10_in_csr_agent_rp_ready;                                             // router_023:sink_ready -> fifo_sink_10_in_csr_agent:rp_ready
	wire         fifo_sink_10_in_csr_agent_rp_startofpacket;                                     // fifo_sink_10_in_csr_agent:rp_startofpacket -> router_023:sink_startofpacket
	wire         fifo_sink_10_in_csr_agent_rp_endofpacket;                                       // fifo_sink_10_in_csr_agent:rp_endofpacket -> router_023:sink_endofpacket
	wire         router_023_src_valid;                                                           // router_023:src_valid -> rsp_demux_015:sink_valid
	wire  [95:0] router_023_src_data;                                                            // router_023:src_data -> rsp_demux_015:sink_data
	wire         router_023_src_ready;                                                           // rsp_demux_015:sink_ready -> router_023:src_ready
	wire  [24:0] router_023_src_channel;                                                         // router_023:src_channel -> rsp_demux_015:sink_channel
	wire         router_023_src_startofpacket;                                                   // router_023:src_startofpacket -> rsp_demux_015:sink_startofpacket
	wire         router_023_src_endofpacket;                                                     // router_023:src_endofpacket -> rsp_demux_015:sink_endofpacket
	wire         fifo_source_10_in_csr_agent_rp_valid;                                           // fifo_source_10_in_csr_agent:rp_valid -> router_024:sink_valid
	wire  [95:0] fifo_source_10_in_csr_agent_rp_data;                                            // fifo_source_10_in_csr_agent:rp_data -> router_024:sink_data
	wire         fifo_source_10_in_csr_agent_rp_ready;                                           // router_024:sink_ready -> fifo_source_10_in_csr_agent:rp_ready
	wire         fifo_source_10_in_csr_agent_rp_startofpacket;                                   // fifo_source_10_in_csr_agent:rp_startofpacket -> router_024:sink_startofpacket
	wire         fifo_source_10_in_csr_agent_rp_endofpacket;                                     // fifo_source_10_in_csr_agent:rp_endofpacket -> router_024:sink_endofpacket
	wire         router_024_src_valid;                                                           // router_024:src_valid -> rsp_demux_016:sink_valid
	wire  [95:0] router_024_src_data;                                                            // router_024:src_data -> rsp_demux_016:sink_data
	wire         router_024_src_ready;                                                           // rsp_demux_016:sink_ready -> router_024:src_ready
	wire  [24:0] router_024_src_channel;                                                         // router_024:src_channel -> rsp_demux_016:sink_channel
	wire         router_024_src_startofpacket;                                                   // router_024:src_startofpacket -> rsp_demux_016:sink_startofpacket
	wire         router_024_src_endofpacket;                                                     // router_024:src_endofpacket -> rsp_demux_016:sink_endofpacket
	wire         fifo_sink_10_out_agent_rp_valid;                                                // fifo_sink_10_out_agent:rp_valid -> router_025:sink_valid
	wire  [95:0] fifo_sink_10_out_agent_rp_data;                                                 // fifo_sink_10_out_agent:rp_data -> router_025:sink_data
	wire         fifo_sink_10_out_agent_rp_ready;                                                // router_025:sink_ready -> fifo_sink_10_out_agent:rp_ready
	wire         fifo_sink_10_out_agent_rp_startofpacket;                                        // fifo_sink_10_out_agent:rp_startofpacket -> router_025:sink_startofpacket
	wire         fifo_sink_10_out_agent_rp_endofpacket;                                          // fifo_sink_10_out_agent:rp_endofpacket -> router_025:sink_endofpacket
	wire         router_025_src_valid;                                                           // router_025:src_valid -> rsp_demux_017:sink_valid
	wire  [95:0] router_025_src_data;                                                            // router_025:src_data -> rsp_demux_017:sink_data
	wire         router_025_src_ready;                                                           // rsp_demux_017:sink_ready -> router_025:src_ready
	wire  [24:0] router_025_src_channel;                                                         // router_025:src_channel -> rsp_demux_017:sink_channel
	wire         router_025_src_startofpacket;                                                   // router_025:src_startofpacket -> rsp_demux_017:sink_startofpacket
	wire         router_025_src_endofpacket;                                                     // router_025:src_endofpacket -> rsp_demux_017:sink_endofpacket
	wire         data_mem_10_s1_agent_rp_valid;                                                  // data_mem_10_s1_agent:rp_valid -> router_026:sink_valid
	wire  [95:0] data_mem_10_s1_agent_rp_data;                                                   // data_mem_10_s1_agent:rp_data -> router_026:sink_data
	wire         data_mem_10_s1_agent_rp_ready;                                                  // router_026:sink_ready -> data_mem_10_s1_agent:rp_ready
	wire         data_mem_10_s1_agent_rp_startofpacket;                                          // data_mem_10_s1_agent:rp_startofpacket -> router_026:sink_startofpacket
	wire         data_mem_10_s1_agent_rp_endofpacket;                                            // data_mem_10_s1_agent:rp_endofpacket -> router_026:sink_endofpacket
	wire         router_026_src_valid;                                                           // router_026:src_valid -> rsp_demux_018:sink_valid
	wire  [95:0] router_026_src_data;                                                            // router_026:src_data -> rsp_demux_018:sink_data
	wire         router_026_src_ready;                                                           // rsp_demux_018:sink_ready -> router_026:src_ready
	wire  [24:0] router_026_src_channel;                                                         // router_026:src_channel -> rsp_demux_018:sink_channel
	wire         router_026_src_startofpacket;                                                   // router_026:src_startofpacket -> rsp_demux_018:sink_startofpacket
	wire         router_026_src_endofpacket;                                                     // router_026:src_endofpacket -> rsp_demux_018:sink_endofpacket
	wire         nios2_01_debug_mem_slave_agent_rp_valid;                                        // nios2_01_debug_mem_slave_agent:rp_valid -> router_027:sink_valid
	wire  [95:0] nios2_01_debug_mem_slave_agent_rp_data;                                         // nios2_01_debug_mem_slave_agent:rp_data -> router_027:sink_data
	wire         nios2_01_debug_mem_slave_agent_rp_ready;                                        // router_027:sink_ready -> nios2_01_debug_mem_slave_agent:rp_ready
	wire         nios2_01_debug_mem_slave_agent_rp_startofpacket;                                // nios2_01_debug_mem_slave_agent:rp_startofpacket -> router_027:sink_startofpacket
	wire         nios2_01_debug_mem_slave_agent_rp_endofpacket;                                  // nios2_01_debug_mem_slave_agent:rp_endofpacket -> router_027:sink_endofpacket
	wire         router_027_src_valid;                                                           // router_027:src_valid -> rsp_demux_019:sink_valid
	wire  [95:0] router_027_src_data;                                                            // router_027:src_data -> rsp_demux_019:sink_data
	wire         router_027_src_ready;                                                           // rsp_demux_019:sink_ready -> router_027:src_ready
	wire  [24:0] router_027_src_channel;                                                         // router_027:src_channel -> rsp_demux_019:sink_channel
	wire         router_027_src_startofpacket;                                                   // router_027:src_startofpacket -> rsp_demux_019:sink_startofpacket
	wire         router_027_src_endofpacket;                                                     // router_027:src_endofpacket -> rsp_demux_019:sink_endofpacket
	wire         fifo_source_01_in_agent_rp_valid;                                               // fifo_source_01_in_agent:rp_valid -> router_028:sink_valid
	wire  [95:0] fifo_source_01_in_agent_rp_data;                                                // fifo_source_01_in_agent:rp_data -> router_028:sink_data
	wire         fifo_source_01_in_agent_rp_ready;                                               // router_028:sink_ready -> fifo_source_01_in_agent:rp_ready
	wire         fifo_source_01_in_agent_rp_startofpacket;                                       // fifo_source_01_in_agent:rp_startofpacket -> router_028:sink_startofpacket
	wire         fifo_source_01_in_agent_rp_endofpacket;                                         // fifo_source_01_in_agent:rp_endofpacket -> router_028:sink_endofpacket
	wire         router_028_src_valid;                                                           // router_028:src_valid -> rsp_demux_020:sink_valid
	wire  [95:0] router_028_src_data;                                                            // router_028:src_data -> rsp_demux_020:sink_data
	wire         router_028_src_ready;                                                           // rsp_demux_020:sink_ready -> router_028:src_ready
	wire  [24:0] router_028_src_channel;                                                         // router_028:src_channel -> rsp_demux_020:sink_channel
	wire         router_028_src_startofpacket;                                                   // router_028:src_startofpacket -> rsp_demux_020:sink_startofpacket
	wire         router_028_src_endofpacket;                                                     // router_028:src_endofpacket -> rsp_demux_020:sink_endofpacket
	wire         fifo_sink_01_in_csr_agent_rp_valid;                                             // fifo_sink_01_in_csr_agent:rp_valid -> router_029:sink_valid
	wire  [95:0] fifo_sink_01_in_csr_agent_rp_data;                                              // fifo_sink_01_in_csr_agent:rp_data -> router_029:sink_data
	wire         fifo_sink_01_in_csr_agent_rp_ready;                                             // router_029:sink_ready -> fifo_sink_01_in_csr_agent:rp_ready
	wire         fifo_sink_01_in_csr_agent_rp_startofpacket;                                     // fifo_sink_01_in_csr_agent:rp_startofpacket -> router_029:sink_startofpacket
	wire         fifo_sink_01_in_csr_agent_rp_endofpacket;                                       // fifo_sink_01_in_csr_agent:rp_endofpacket -> router_029:sink_endofpacket
	wire         router_029_src_valid;                                                           // router_029:src_valid -> rsp_demux_021:sink_valid
	wire  [95:0] router_029_src_data;                                                            // router_029:src_data -> rsp_demux_021:sink_data
	wire         router_029_src_ready;                                                           // rsp_demux_021:sink_ready -> router_029:src_ready
	wire  [24:0] router_029_src_channel;                                                         // router_029:src_channel -> rsp_demux_021:sink_channel
	wire         router_029_src_startofpacket;                                                   // router_029:src_startofpacket -> rsp_demux_021:sink_startofpacket
	wire         router_029_src_endofpacket;                                                     // router_029:src_endofpacket -> rsp_demux_021:sink_endofpacket
	wire         fifo_source_01_in_csr_agent_rp_valid;                                           // fifo_source_01_in_csr_agent:rp_valid -> router_030:sink_valid
	wire  [95:0] fifo_source_01_in_csr_agent_rp_data;                                            // fifo_source_01_in_csr_agent:rp_data -> router_030:sink_data
	wire         fifo_source_01_in_csr_agent_rp_ready;                                           // router_030:sink_ready -> fifo_source_01_in_csr_agent:rp_ready
	wire         fifo_source_01_in_csr_agent_rp_startofpacket;                                   // fifo_source_01_in_csr_agent:rp_startofpacket -> router_030:sink_startofpacket
	wire         fifo_source_01_in_csr_agent_rp_endofpacket;                                     // fifo_source_01_in_csr_agent:rp_endofpacket -> router_030:sink_endofpacket
	wire         router_030_src_valid;                                                           // router_030:src_valid -> rsp_demux_022:sink_valid
	wire  [95:0] router_030_src_data;                                                            // router_030:src_data -> rsp_demux_022:sink_data
	wire         router_030_src_ready;                                                           // rsp_demux_022:sink_ready -> router_030:src_ready
	wire  [24:0] router_030_src_channel;                                                         // router_030:src_channel -> rsp_demux_022:sink_channel
	wire         router_030_src_startofpacket;                                                   // router_030:src_startofpacket -> rsp_demux_022:sink_startofpacket
	wire         router_030_src_endofpacket;                                                     // router_030:src_endofpacket -> rsp_demux_022:sink_endofpacket
	wire         fifo_sink_01_out_agent_rp_valid;                                                // fifo_sink_01_out_agent:rp_valid -> router_031:sink_valid
	wire  [95:0] fifo_sink_01_out_agent_rp_data;                                                 // fifo_sink_01_out_agent:rp_data -> router_031:sink_data
	wire         fifo_sink_01_out_agent_rp_ready;                                                // router_031:sink_ready -> fifo_sink_01_out_agent:rp_ready
	wire         fifo_sink_01_out_agent_rp_startofpacket;                                        // fifo_sink_01_out_agent:rp_startofpacket -> router_031:sink_startofpacket
	wire         fifo_sink_01_out_agent_rp_endofpacket;                                          // fifo_sink_01_out_agent:rp_endofpacket -> router_031:sink_endofpacket
	wire         router_031_src_valid;                                                           // router_031:src_valid -> rsp_demux_023:sink_valid
	wire  [95:0] router_031_src_data;                                                            // router_031:src_data -> rsp_demux_023:sink_data
	wire         router_031_src_ready;                                                           // rsp_demux_023:sink_ready -> router_031:src_ready
	wire  [24:0] router_031_src_channel;                                                         // router_031:src_channel -> rsp_demux_023:sink_channel
	wire         router_031_src_startofpacket;                                                   // router_031:src_startofpacket -> rsp_demux_023:sink_startofpacket
	wire         router_031_src_endofpacket;                                                     // router_031:src_endofpacket -> rsp_demux_023:sink_endofpacket
	wire         data_mem_01_s1_agent_rp_valid;                                                  // data_mem_01_s1_agent:rp_valid -> router_032:sink_valid
	wire  [95:0] data_mem_01_s1_agent_rp_data;                                                   // data_mem_01_s1_agent:rp_data -> router_032:sink_data
	wire         data_mem_01_s1_agent_rp_ready;                                                  // router_032:sink_ready -> data_mem_01_s1_agent:rp_ready
	wire         data_mem_01_s1_agent_rp_startofpacket;                                          // data_mem_01_s1_agent:rp_startofpacket -> router_032:sink_startofpacket
	wire         data_mem_01_s1_agent_rp_endofpacket;                                            // data_mem_01_s1_agent:rp_endofpacket -> router_032:sink_endofpacket
	wire         router_032_src_valid;                                                           // router_032:src_valid -> rsp_demux_024:sink_valid
	wire  [95:0] router_032_src_data;                                                            // router_032:src_data -> rsp_demux_024:sink_data
	wire         router_032_src_ready;                                                           // rsp_demux_024:sink_ready -> router_032:src_ready
	wire  [24:0] router_032_src_channel;                                                         // router_032:src_channel -> rsp_demux_024:sink_channel
	wire         router_032_src_startofpacket;                                                   // router_032:src_startofpacket -> rsp_demux_024:sink_startofpacket
	wire         router_032_src_endofpacket;                                                     // router_032:src_endofpacket -> rsp_demux_024:sink_endofpacket
	wire         cmd_demux_src0_valid;                                                           // cmd_demux:src0_valid -> cmd_mux:sink0_valid
	wire  [95:0] cmd_demux_src0_data;                                                            // cmd_demux:src0_data -> cmd_mux:sink0_data
	wire         cmd_demux_src0_ready;                                                           // cmd_mux:sink0_ready -> cmd_demux:src0_ready
	wire  [24:0] cmd_demux_src0_channel;                                                         // cmd_demux:src0_channel -> cmd_mux:sink0_channel
	wire         cmd_demux_src0_startofpacket;                                                   // cmd_demux:src0_startofpacket -> cmd_mux:sink0_startofpacket
	wire         cmd_demux_src0_endofpacket;                                                     // cmd_demux:src0_endofpacket -> cmd_mux:sink0_endofpacket
	wire         cmd_demux_src1_valid;                                                           // cmd_demux:src1_valid -> cmd_mux_001:sink0_valid
	wire  [95:0] cmd_demux_src1_data;                                                            // cmd_demux:src1_data -> cmd_mux_001:sink0_data
	wire         cmd_demux_src1_ready;                                                           // cmd_mux_001:sink0_ready -> cmd_demux:src1_ready
	wire  [24:0] cmd_demux_src1_channel;                                                         // cmd_demux:src1_channel -> cmd_mux_001:sink0_channel
	wire         cmd_demux_src1_startofpacket;                                                   // cmd_demux:src1_startofpacket -> cmd_mux_001:sink0_startofpacket
	wire         cmd_demux_src1_endofpacket;                                                     // cmd_demux:src1_endofpacket -> cmd_mux_001:sink0_endofpacket
	wire         cmd_demux_src2_valid;                                                           // cmd_demux:src2_valid -> cmd_mux_002:sink0_valid
	wire  [95:0] cmd_demux_src2_data;                                                            // cmd_demux:src2_data -> cmd_mux_002:sink0_data
	wire         cmd_demux_src2_ready;                                                           // cmd_mux_002:sink0_ready -> cmd_demux:src2_ready
	wire  [24:0] cmd_demux_src2_channel;                                                         // cmd_demux:src2_channel -> cmd_mux_002:sink0_channel
	wire         cmd_demux_src2_startofpacket;                                                   // cmd_demux:src2_startofpacket -> cmd_mux_002:sink0_startofpacket
	wire         cmd_demux_src2_endofpacket;                                                     // cmd_demux:src2_endofpacket -> cmd_mux_002:sink0_endofpacket
	wire         cmd_demux_src3_valid;                                                           // cmd_demux:src3_valid -> cmd_mux_003:sink0_valid
	wire  [95:0] cmd_demux_src3_data;                                                            // cmd_demux:src3_data -> cmd_mux_003:sink0_data
	wire         cmd_demux_src3_ready;                                                           // cmd_mux_003:sink0_ready -> cmd_demux:src3_ready
	wire  [24:0] cmd_demux_src3_channel;                                                         // cmd_demux:src3_channel -> cmd_mux_003:sink0_channel
	wire         cmd_demux_src3_startofpacket;                                                   // cmd_demux:src3_startofpacket -> cmd_mux_003:sink0_startofpacket
	wire         cmd_demux_src3_endofpacket;                                                     // cmd_demux:src3_endofpacket -> cmd_mux_003:sink0_endofpacket
	wire         cmd_demux_src4_valid;                                                           // cmd_demux:src4_valid -> cmd_mux_004:sink0_valid
	wire  [95:0] cmd_demux_src4_data;                                                            // cmd_demux:src4_data -> cmd_mux_004:sink0_data
	wire         cmd_demux_src4_ready;                                                           // cmd_mux_004:sink0_ready -> cmd_demux:src4_ready
	wire  [24:0] cmd_demux_src4_channel;                                                         // cmd_demux:src4_channel -> cmd_mux_004:sink0_channel
	wire         cmd_demux_src4_startofpacket;                                                   // cmd_demux:src4_startofpacket -> cmd_mux_004:sink0_startofpacket
	wire         cmd_demux_src4_endofpacket;                                                     // cmd_demux:src4_endofpacket -> cmd_mux_004:sink0_endofpacket
	wire         cmd_demux_src5_valid;                                                           // cmd_demux:src5_valid -> cmd_mux_005:sink0_valid
	wire  [95:0] cmd_demux_src5_data;                                                            // cmd_demux:src5_data -> cmd_mux_005:sink0_data
	wire         cmd_demux_src5_ready;                                                           // cmd_mux_005:sink0_ready -> cmd_demux:src5_ready
	wire  [24:0] cmd_demux_src5_channel;                                                         // cmd_demux:src5_channel -> cmd_mux_005:sink0_channel
	wire         cmd_demux_src5_startofpacket;                                                   // cmd_demux:src5_startofpacket -> cmd_mux_005:sink0_startofpacket
	wire         cmd_demux_src5_endofpacket;                                                     // cmd_demux:src5_endofpacket -> cmd_mux_005:sink0_endofpacket
	wire         cmd_demux_src6_valid;                                                           // cmd_demux:src6_valid -> cmd_mux_006:sink0_valid
	wire  [95:0] cmd_demux_src6_data;                                                            // cmd_demux:src6_data -> cmd_mux_006:sink0_data
	wire         cmd_demux_src6_ready;                                                           // cmd_mux_006:sink0_ready -> cmd_demux:src6_ready
	wire  [24:0] cmd_demux_src6_channel;                                                         // cmd_demux:src6_channel -> cmd_mux_006:sink0_channel
	wire         cmd_demux_src6_startofpacket;                                                   // cmd_demux:src6_startofpacket -> cmd_mux_006:sink0_startofpacket
	wire         cmd_demux_src6_endofpacket;                                                     // cmd_demux:src6_endofpacket -> cmd_mux_006:sink0_endofpacket
	wire         cmd_demux_001_src0_valid;                                                       // cmd_demux_001:src0_valid -> cmd_mux:sink1_valid
	wire  [95:0] cmd_demux_001_src0_data;                                                        // cmd_demux_001:src0_data -> cmd_mux:sink1_data
	wire         cmd_demux_001_src0_ready;                                                       // cmd_mux:sink1_ready -> cmd_demux_001:src0_ready
	wire  [24:0] cmd_demux_001_src0_channel;                                                     // cmd_demux_001:src0_channel -> cmd_mux:sink1_channel
	wire         cmd_demux_001_src0_startofpacket;                                               // cmd_demux_001:src0_startofpacket -> cmd_mux:sink1_startofpacket
	wire         cmd_demux_001_src0_endofpacket;                                                 // cmd_demux_001:src0_endofpacket -> cmd_mux:sink1_endofpacket
	wire         cmd_demux_001_src1_valid;                                                       // cmd_demux_001:src1_valid -> cmd_mux_019:sink0_valid
	wire  [95:0] cmd_demux_001_src1_data;                                                        // cmd_demux_001:src1_data -> cmd_mux_019:sink0_data
	wire         cmd_demux_001_src1_ready;                                                       // cmd_mux_019:sink0_ready -> cmd_demux_001:src1_ready
	wire  [24:0] cmd_demux_001_src1_channel;                                                     // cmd_demux_001:src1_channel -> cmd_mux_019:sink0_channel
	wire         cmd_demux_001_src1_startofpacket;                                               // cmd_demux_001:src1_startofpacket -> cmd_mux_019:sink0_startofpacket
	wire         cmd_demux_001_src1_endofpacket;                                                 // cmd_demux_001:src1_endofpacket -> cmd_mux_019:sink0_endofpacket
	wire         cmd_demux_001_src2_valid;                                                       // cmd_demux_001:src2_valid -> cmd_mux_020:sink0_valid
	wire  [95:0] cmd_demux_001_src2_data;                                                        // cmd_demux_001:src2_data -> cmd_mux_020:sink0_data
	wire         cmd_demux_001_src2_ready;                                                       // cmd_mux_020:sink0_ready -> cmd_demux_001:src2_ready
	wire  [24:0] cmd_demux_001_src2_channel;                                                     // cmd_demux_001:src2_channel -> cmd_mux_020:sink0_channel
	wire         cmd_demux_001_src2_startofpacket;                                               // cmd_demux_001:src2_startofpacket -> cmd_mux_020:sink0_startofpacket
	wire         cmd_demux_001_src2_endofpacket;                                                 // cmd_demux_001:src2_endofpacket -> cmd_mux_020:sink0_endofpacket
	wire         cmd_demux_001_src3_valid;                                                       // cmd_demux_001:src3_valid -> cmd_mux_021:sink0_valid
	wire  [95:0] cmd_demux_001_src3_data;                                                        // cmd_demux_001:src3_data -> cmd_mux_021:sink0_data
	wire         cmd_demux_001_src3_ready;                                                       // cmd_mux_021:sink0_ready -> cmd_demux_001:src3_ready
	wire  [24:0] cmd_demux_001_src3_channel;                                                     // cmd_demux_001:src3_channel -> cmd_mux_021:sink0_channel
	wire         cmd_demux_001_src3_startofpacket;                                               // cmd_demux_001:src3_startofpacket -> cmd_mux_021:sink0_startofpacket
	wire         cmd_demux_001_src3_endofpacket;                                                 // cmd_demux_001:src3_endofpacket -> cmd_mux_021:sink0_endofpacket
	wire         cmd_demux_001_src4_valid;                                                       // cmd_demux_001:src4_valid -> cmd_mux_022:sink0_valid
	wire  [95:0] cmd_demux_001_src4_data;                                                        // cmd_demux_001:src4_data -> cmd_mux_022:sink0_data
	wire         cmd_demux_001_src4_ready;                                                       // cmd_mux_022:sink0_ready -> cmd_demux_001:src4_ready
	wire  [24:0] cmd_demux_001_src4_channel;                                                     // cmd_demux_001:src4_channel -> cmd_mux_022:sink0_channel
	wire         cmd_demux_001_src4_startofpacket;                                               // cmd_demux_001:src4_startofpacket -> cmd_mux_022:sink0_startofpacket
	wire         cmd_demux_001_src4_endofpacket;                                                 // cmd_demux_001:src4_endofpacket -> cmd_mux_022:sink0_endofpacket
	wire         cmd_demux_001_src5_valid;                                                       // cmd_demux_001:src5_valid -> cmd_mux_023:sink0_valid
	wire  [95:0] cmd_demux_001_src5_data;                                                        // cmd_demux_001:src5_data -> cmd_mux_023:sink0_data
	wire         cmd_demux_001_src5_ready;                                                       // cmd_mux_023:sink0_ready -> cmd_demux_001:src5_ready
	wire  [24:0] cmd_demux_001_src5_channel;                                                     // cmd_demux_001:src5_channel -> cmd_mux_023:sink0_channel
	wire         cmd_demux_001_src5_startofpacket;                                               // cmd_demux_001:src5_startofpacket -> cmd_mux_023:sink0_startofpacket
	wire         cmd_demux_001_src5_endofpacket;                                                 // cmd_demux_001:src5_endofpacket -> cmd_mux_023:sink0_endofpacket
	wire         cmd_demux_001_src6_valid;                                                       // cmd_demux_001:src6_valid -> cmd_mux_024:sink0_valid
	wire  [95:0] cmd_demux_001_src6_data;                                                        // cmd_demux_001:src6_data -> cmd_mux_024:sink0_data
	wire         cmd_demux_001_src6_ready;                                                       // cmd_mux_024:sink0_ready -> cmd_demux_001:src6_ready
	wire  [24:0] cmd_demux_001_src6_channel;                                                     // cmd_demux_001:src6_channel -> cmd_mux_024:sink0_channel
	wire         cmd_demux_001_src6_startofpacket;                                               // cmd_demux_001:src6_startofpacket -> cmd_mux_024:sink0_startofpacket
	wire         cmd_demux_001_src6_endofpacket;                                                 // cmd_demux_001:src6_endofpacket -> cmd_mux_024:sink0_endofpacket
	wire         cmd_demux_002_src0_valid;                                                       // cmd_demux_002:src0_valid -> cmd_mux:sink2_valid
	wire  [95:0] cmd_demux_002_src0_data;                                                        // cmd_demux_002:src0_data -> cmd_mux:sink2_data
	wire         cmd_demux_002_src0_ready;                                                       // cmd_mux:sink2_ready -> cmd_demux_002:src0_ready
	wire  [24:0] cmd_demux_002_src0_channel;                                                     // cmd_demux_002:src0_channel -> cmd_mux:sink2_channel
	wire         cmd_demux_002_src0_startofpacket;                                               // cmd_demux_002:src0_startofpacket -> cmd_mux:sink2_startofpacket
	wire         cmd_demux_002_src0_endofpacket;                                                 // cmd_demux_002:src0_endofpacket -> cmd_mux:sink2_endofpacket
	wire         cmd_demux_002_src1_valid;                                                       // cmd_demux_002:src1_valid -> cmd_mux_013:sink0_valid
	wire  [95:0] cmd_demux_002_src1_data;                                                        // cmd_demux_002:src1_data -> cmd_mux_013:sink0_data
	wire         cmd_demux_002_src1_ready;                                                       // cmd_mux_013:sink0_ready -> cmd_demux_002:src1_ready
	wire  [24:0] cmd_demux_002_src1_channel;                                                     // cmd_demux_002:src1_channel -> cmd_mux_013:sink0_channel
	wire         cmd_demux_002_src1_startofpacket;                                               // cmd_demux_002:src1_startofpacket -> cmd_mux_013:sink0_startofpacket
	wire         cmd_demux_002_src1_endofpacket;                                                 // cmd_demux_002:src1_endofpacket -> cmd_mux_013:sink0_endofpacket
	wire         cmd_demux_002_src2_valid;                                                       // cmd_demux_002:src2_valid -> cmd_mux_014:sink0_valid
	wire  [95:0] cmd_demux_002_src2_data;                                                        // cmd_demux_002:src2_data -> cmd_mux_014:sink0_data
	wire         cmd_demux_002_src2_ready;                                                       // cmd_mux_014:sink0_ready -> cmd_demux_002:src2_ready
	wire  [24:0] cmd_demux_002_src2_channel;                                                     // cmd_demux_002:src2_channel -> cmd_mux_014:sink0_channel
	wire         cmd_demux_002_src2_startofpacket;                                               // cmd_demux_002:src2_startofpacket -> cmd_mux_014:sink0_startofpacket
	wire         cmd_demux_002_src2_endofpacket;                                                 // cmd_demux_002:src2_endofpacket -> cmd_mux_014:sink0_endofpacket
	wire         cmd_demux_002_src3_valid;                                                       // cmd_demux_002:src3_valid -> cmd_mux_015:sink0_valid
	wire  [95:0] cmd_demux_002_src3_data;                                                        // cmd_demux_002:src3_data -> cmd_mux_015:sink0_data
	wire         cmd_demux_002_src3_ready;                                                       // cmd_mux_015:sink0_ready -> cmd_demux_002:src3_ready
	wire  [24:0] cmd_demux_002_src3_channel;                                                     // cmd_demux_002:src3_channel -> cmd_mux_015:sink0_channel
	wire         cmd_demux_002_src3_startofpacket;                                               // cmd_demux_002:src3_startofpacket -> cmd_mux_015:sink0_startofpacket
	wire         cmd_demux_002_src3_endofpacket;                                                 // cmd_demux_002:src3_endofpacket -> cmd_mux_015:sink0_endofpacket
	wire         cmd_demux_002_src4_valid;                                                       // cmd_demux_002:src4_valid -> cmd_mux_016:sink0_valid
	wire  [95:0] cmd_demux_002_src4_data;                                                        // cmd_demux_002:src4_data -> cmd_mux_016:sink0_data
	wire         cmd_demux_002_src4_ready;                                                       // cmd_mux_016:sink0_ready -> cmd_demux_002:src4_ready
	wire  [24:0] cmd_demux_002_src4_channel;                                                     // cmd_demux_002:src4_channel -> cmd_mux_016:sink0_channel
	wire         cmd_demux_002_src4_startofpacket;                                               // cmd_demux_002:src4_startofpacket -> cmd_mux_016:sink0_startofpacket
	wire         cmd_demux_002_src4_endofpacket;                                                 // cmd_demux_002:src4_endofpacket -> cmd_mux_016:sink0_endofpacket
	wire         cmd_demux_002_src5_valid;                                                       // cmd_demux_002:src5_valid -> cmd_mux_017:sink0_valid
	wire  [95:0] cmd_demux_002_src5_data;                                                        // cmd_demux_002:src5_data -> cmd_mux_017:sink0_data
	wire         cmd_demux_002_src5_ready;                                                       // cmd_mux_017:sink0_ready -> cmd_demux_002:src5_ready
	wire  [24:0] cmd_demux_002_src5_channel;                                                     // cmd_demux_002:src5_channel -> cmd_mux_017:sink0_channel
	wire         cmd_demux_002_src5_startofpacket;                                               // cmd_demux_002:src5_startofpacket -> cmd_mux_017:sink0_startofpacket
	wire         cmd_demux_002_src5_endofpacket;                                                 // cmd_demux_002:src5_endofpacket -> cmd_mux_017:sink0_endofpacket
	wire         cmd_demux_002_src6_valid;                                                       // cmd_demux_002:src6_valid -> cmd_mux_018:sink0_valid
	wire  [95:0] cmd_demux_002_src6_data;                                                        // cmd_demux_002:src6_data -> cmd_mux_018:sink0_data
	wire         cmd_demux_002_src6_ready;                                                       // cmd_mux_018:sink0_ready -> cmd_demux_002:src6_ready
	wire  [24:0] cmd_demux_002_src6_channel;                                                     // cmd_demux_002:src6_channel -> cmd_mux_018:sink0_channel
	wire         cmd_demux_002_src6_startofpacket;                                               // cmd_demux_002:src6_startofpacket -> cmd_mux_018:sink0_startofpacket
	wire         cmd_demux_002_src6_endofpacket;                                                 // cmd_demux_002:src6_endofpacket -> cmd_mux_018:sink0_endofpacket
	wire         cmd_demux_003_src0_valid;                                                       // cmd_demux_003:src0_valid -> cmd_mux:sink3_valid
	wire  [95:0] cmd_demux_003_src0_data;                                                        // cmd_demux_003:src0_data -> cmd_mux:sink3_data
	wire         cmd_demux_003_src0_ready;                                                       // cmd_mux:sink3_ready -> cmd_demux_003:src0_ready
	wire  [24:0] cmd_demux_003_src0_channel;                                                     // cmd_demux_003:src0_channel -> cmd_mux:sink3_channel
	wire         cmd_demux_003_src0_startofpacket;                                               // cmd_demux_003:src0_startofpacket -> cmd_mux:sink3_startofpacket
	wire         cmd_demux_003_src0_endofpacket;                                                 // cmd_demux_003:src0_endofpacket -> cmd_mux:sink3_endofpacket
	wire         cmd_demux_003_src1_valid;                                                       // cmd_demux_003:src1_valid -> cmd_mux_007:sink0_valid
	wire  [95:0] cmd_demux_003_src1_data;                                                        // cmd_demux_003:src1_data -> cmd_mux_007:sink0_data
	wire         cmd_demux_003_src1_ready;                                                       // cmd_mux_007:sink0_ready -> cmd_demux_003:src1_ready
	wire  [24:0] cmd_demux_003_src1_channel;                                                     // cmd_demux_003:src1_channel -> cmd_mux_007:sink0_channel
	wire         cmd_demux_003_src1_startofpacket;                                               // cmd_demux_003:src1_startofpacket -> cmd_mux_007:sink0_startofpacket
	wire         cmd_demux_003_src1_endofpacket;                                                 // cmd_demux_003:src1_endofpacket -> cmd_mux_007:sink0_endofpacket
	wire         cmd_demux_003_src2_valid;                                                       // cmd_demux_003:src2_valid -> cmd_mux_008:sink0_valid
	wire  [95:0] cmd_demux_003_src2_data;                                                        // cmd_demux_003:src2_data -> cmd_mux_008:sink0_data
	wire         cmd_demux_003_src2_ready;                                                       // cmd_mux_008:sink0_ready -> cmd_demux_003:src2_ready
	wire  [24:0] cmd_demux_003_src2_channel;                                                     // cmd_demux_003:src2_channel -> cmd_mux_008:sink0_channel
	wire         cmd_demux_003_src2_startofpacket;                                               // cmd_demux_003:src2_startofpacket -> cmd_mux_008:sink0_startofpacket
	wire         cmd_demux_003_src2_endofpacket;                                                 // cmd_demux_003:src2_endofpacket -> cmd_mux_008:sink0_endofpacket
	wire         cmd_demux_003_src3_valid;                                                       // cmd_demux_003:src3_valid -> cmd_mux_009:sink0_valid
	wire  [95:0] cmd_demux_003_src3_data;                                                        // cmd_demux_003:src3_data -> cmd_mux_009:sink0_data
	wire         cmd_demux_003_src3_ready;                                                       // cmd_mux_009:sink0_ready -> cmd_demux_003:src3_ready
	wire  [24:0] cmd_demux_003_src3_channel;                                                     // cmd_demux_003:src3_channel -> cmd_mux_009:sink0_channel
	wire         cmd_demux_003_src3_startofpacket;                                               // cmd_demux_003:src3_startofpacket -> cmd_mux_009:sink0_startofpacket
	wire         cmd_demux_003_src3_endofpacket;                                                 // cmd_demux_003:src3_endofpacket -> cmd_mux_009:sink0_endofpacket
	wire         cmd_demux_003_src4_valid;                                                       // cmd_demux_003:src4_valid -> cmd_mux_010:sink0_valid
	wire  [95:0] cmd_demux_003_src4_data;                                                        // cmd_demux_003:src4_data -> cmd_mux_010:sink0_data
	wire         cmd_demux_003_src4_ready;                                                       // cmd_mux_010:sink0_ready -> cmd_demux_003:src4_ready
	wire  [24:0] cmd_demux_003_src4_channel;                                                     // cmd_demux_003:src4_channel -> cmd_mux_010:sink0_channel
	wire         cmd_demux_003_src4_startofpacket;                                               // cmd_demux_003:src4_startofpacket -> cmd_mux_010:sink0_startofpacket
	wire         cmd_demux_003_src4_endofpacket;                                                 // cmd_demux_003:src4_endofpacket -> cmd_mux_010:sink0_endofpacket
	wire         cmd_demux_003_src5_valid;                                                       // cmd_demux_003:src5_valid -> cmd_mux_011:sink0_valid
	wire  [95:0] cmd_demux_003_src5_data;                                                        // cmd_demux_003:src5_data -> cmd_mux_011:sink0_data
	wire         cmd_demux_003_src5_ready;                                                       // cmd_mux_011:sink0_ready -> cmd_demux_003:src5_ready
	wire  [24:0] cmd_demux_003_src5_channel;                                                     // cmd_demux_003:src5_channel -> cmd_mux_011:sink0_channel
	wire         cmd_demux_003_src5_startofpacket;                                               // cmd_demux_003:src5_startofpacket -> cmd_mux_011:sink0_startofpacket
	wire         cmd_demux_003_src5_endofpacket;                                                 // cmd_demux_003:src5_endofpacket -> cmd_mux_011:sink0_endofpacket
	wire         cmd_demux_003_src6_valid;                                                       // cmd_demux_003:src6_valid -> cmd_mux_012:sink0_valid
	wire  [95:0] cmd_demux_003_src6_data;                                                        // cmd_demux_003:src6_data -> cmd_mux_012:sink0_data
	wire         cmd_demux_003_src6_ready;                                                       // cmd_mux_012:sink0_ready -> cmd_demux_003:src6_ready
	wire  [24:0] cmd_demux_003_src6_channel;                                                     // cmd_demux_003:src6_channel -> cmd_mux_012:sink0_channel
	wire         cmd_demux_003_src6_startofpacket;                                               // cmd_demux_003:src6_startofpacket -> cmd_mux_012:sink0_startofpacket
	wire         cmd_demux_003_src6_endofpacket;                                                 // cmd_demux_003:src6_endofpacket -> cmd_mux_012:sink0_endofpacket
	wire         cmd_demux_004_src0_valid;                                                       // cmd_demux_004:src0_valid -> cmd_mux_007:sink1_valid
	wire  [95:0] cmd_demux_004_src0_data;                                                        // cmd_demux_004:src0_data -> cmd_mux_007:sink1_data
	wire         cmd_demux_004_src0_ready;                                                       // cmd_mux_007:sink1_ready -> cmd_demux_004:src0_ready
	wire  [24:0] cmd_demux_004_src0_channel;                                                     // cmd_demux_004:src0_channel -> cmd_mux_007:sink1_channel
	wire         cmd_demux_004_src0_startofpacket;                                               // cmd_demux_004:src0_startofpacket -> cmd_mux_007:sink1_startofpacket
	wire         cmd_demux_004_src0_endofpacket;                                                 // cmd_demux_004:src0_endofpacket -> cmd_mux_007:sink1_endofpacket
	wire         cmd_demux_004_src1_valid;                                                       // cmd_demux_004:src1_valid -> cmd_mux_012:sink1_valid
	wire  [95:0] cmd_demux_004_src1_data;                                                        // cmd_demux_004:src1_data -> cmd_mux_012:sink1_data
	wire         cmd_demux_004_src1_ready;                                                       // cmd_mux_012:sink1_ready -> cmd_demux_004:src1_ready
	wire  [24:0] cmd_demux_004_src1_channel;                                                     // cmd_demux_004:src1_channel -> cmd_mux_012:sink1_channel
	wire         cmd_demux_004_src1_startofpacket;                                               // cmd_demux_004:src1_startofpacket -> cmd_mux_012:sink1_startofpacket
	wire         cmd_demux_004_src1_endofpacket;                                                 // cmd_demux_004:src1_endofpacket -> cmd_mux_012:sink1_endofpacket
	wire         cmd_demux_005_src0_valid;                                                       // cmd_demux_005:src0_valid -> cmd_mux_013:sink1_valid
	wire  [95:0] cmd_demux_005_src0_data;                                                        // cmd_demux_005:src0_data -> cmd_mux_013:sink1_data
	wire         cmd_demux_005_src0_ready;                                                       // cmd_mux_013:sink1_ready -> cmd_demux_005:src0_ready
	wire  [24:0] cmd_demux_005_src0_channel;                                                     // cmd_demux_005:src0_channel -> cmd_mux_013:sink1_channel
	wire         cmd_demux_005_src0_startofpacket;                                               // cmd_demux_005:src0_startofpacket -> cmd_mux_013:sink1_startofpacket
	wire         cmd_demux_005_src0_endofpacket;                                                 // cmd_demux_005:src0_endofpacket -> cmd_mux_013:sink1_endofpacket
	wire         cmd_demux_005_src1_valid;                                                       // cmd_demux_005:src1_valid -> cmd_mux_018:sink1_valid
	wire  [95:0] cmd_demux_005_src1_data;                                                        // cmd_demux_005:src1_data -> cmd_mux_018:sink1_data
	wire         cmd_demux_005_src1_ready;                                                       // cmd_mux_018:sink1_ready -> cmd_demux_005:src1_ready
	wire  [24:0] cmd_demux_005_src1_channel;                                                     // cmd_demux_005:src1_channel -> cmd_mux_018:sink1_channel
	wire         cmd_demux_005_src1_startofpacket;                                               // cmd_demux_005:src1_startofpacket -> cmd_mux_018:sink1_startofpacket
	wire         cmd_demux_005_src1_endofpacket;                                                 // cmd_demux_005:src1_endofpacket -> cmd_mux_018:sink1_endofpacket
	wire         cmd_demux_006_src0_valid;                                                       // cmd_demux_006:src0_valid -> cmd_mux_019:sink1_valid
	wire  [95:0] cmd_demux_006_src0_data;                                                        // cmd_demux_006:src0_data -> cmd_mux_019:sink1_data
	wire         cmd_demux_006_src0_ready;                                                       // cmd_mux_019:sink1_ready -> cmd_demux_006:src0_ready
	wire  [24:0] cmd_demux_006_src0_channel;                                                     // cmd_demux_006:src0_channel -> cmd_mux_019:sink1_channel
	wire         cmd_demux_006_src0_startofpacket;                                               // cmd_demux_006:src0_startofpacket -> cmd_mux_019:sink1_startofpacket
	wire         cmd_demux_006_src0_endofpacket;                                                 // cmd_demux_006:src0_endofpacket -> cmd_mux_019:sink1_endofpacket
	wire         cmd_demux_006_src1_valid;                                                       // cmd_demux_006:src1_valid -> cmd_mux_024:sink1_valid
	wire  [95:0] cmd_demux_006_src1_data;                                                        // cmd_demux_006:src1_data -> cmd_mux_024:sink1_data
	wire         cmd_demux_006_src1_ready;                                                       // cmd_mux_024:sink1_ready -> cmd_demux_006:src1_ready
	wire  [24:0] cmd_demux_006_src1_channel;                                                     // cmd_demux_006:src1_channel -> cmd_mux_024:sink1_channel
	wire         cmd_demux_006_src1_startofpacket;                                               // cmd_demux_006:src1_startofpacket -> cmd_mux_024:sink1_startofpacket
	wire         cmd_demux_006_src1_endofpacket;                                                 // cmd_demux_006:src1_endofpacket -> cmd_mux_024:sink1_endofpacket
	wire         cmd_demux_007_src0_valid;                                                       // cmd_demux_007:src0_valid -> cmd_mux_001:sink1_valid
	wire  [95:0] cmd_demux_007_src0_data;                                                        // cmd_demux_007:src0_data -> cmd_mux_001:sink1_data
	wire         cmd_demux_007_src0_ready;                                                       // cmd_mux_001:sink1_ready -> cmd_demux_007:src0_ready
	wire  [24:0] cmd_demux_007_src0_channel;                                                     // cmd_demux_007:src0_channel -> cmd_mux_001:sink1_channel
	wire         cmd_demux_007_src0_startofpacket;                                               // cmd_demux_007:src0_startofpacket -> cmd_mux_001:sink1_startofpacket
	wire         cmd_demux_007_src0_endofpacket;                                                 // cmd_demux_007:src0_endofpacket -> cmd_mux_001:sink1_endofpacket
	wire         cmd_demux_007_src1_valid;                                                       // cmd_demux_007:src1_valid -> cmd_mux_006:sink1_valid
	wire  [95:0] cmd_demux_007_src1_data;                                                        // cmd_demux_007:src1_data -> cmd_mux_006:sink1_data
	wire         cmd_demux_007_src1_ready;                                                       // cmd_mux_006:sink1_ready -> cmd_demux_007:src1_ready
	wire  [24:0] cmd_demux_007_src1_channel;                                                     // cmd_demux_007:src1_channel -> cmd_mux_006:sink1_channel
	wire         cmd_demux_007_src1_startofpacket;                                               // cmd_demux_007:src1_startofpacket -> cmd_mux_006:sink1_startofpacket
	wire         cmd_demux_007_src1_endofpacket;                                                 // cmd_demux_007:src1_endofpacket -> cmd_mux_006:sink1_endofpacket
	wire         rsp_demux_src0_valid;                                                           // rsp_demux:src0_valid -> rsp_mux:sink0_valid
	wire  [95:0] rsp_demux_src0_data;                                                            // rsp_demux:src0_data -> rsp_mux:sink0_data
	wire         rsp_demux_src0_ready;                                                           // rsp_mux:sink0_ready -> rsp_demux:src0_ready
	wire  [24:0] rsp_demux_src0_channel;                                                         // rsp_demux:src0_channel -> rsp_mux:sink0_channel
	wire         rsp_demux_src0_startofpacket;                                                   // rsp_demux:src0_startofpacket -> rsp_mux:sink0_startofpacket
	wire         rsp_demux_src0_endofpacket;                                                     // rsp_demux:src0_endofpacket -> rsp_mux:sink0_endofpacket
	wire         rsp_demux_src1_valid;                                                           // rsp_demux:src1_valid -> rsp_mux_001:sink0_valid
	wire  [95:0] rsp_demux_src1_data;                                                            // rsp_demux:src1_data -> rsp_mux_001:sink0_data
	wire         rsp_demux_src1_ready;                                                           // rsp_mux_001:sink0_ready -> rsp_demux:src1_ready
	wire  [24:0] rsp_demux_src1_channel;                                                         // rsp_demux:src1_channel -> rsp_mux_001:sink0_channel
	wire         rsp_demux_src1_startofpacket;                                                   // rsp_demux:src1_startofpacket -> rsp_mux_001:sink0_startofpacket
	wire         rsp_demux_src1_endofpacket;                                                     // rsp_demux:src1_endofpacket -> rsp_mux_001:sink0_endofpacket
	wire         rsp_demux_src2_valid;                                                           // rsp_demux:src2_valid -> rsp_mux_002:sink0_valid
	wire  [95:0] rsp_demux_src2_data;                                                            // rsp_demux:src2_data -> rsp_mux_002:sink0_data
	wire         rsp_demux_src2_ready;                                                           // rsp_mux_002:sink0_ready -> rsp_demux:src2_ready
	wire  [24:0] rsp_demux_src2_channel;                                                         // rsp_demux:src2_channel -> rsp_mux_002:sink0_channel
	wire         rsp_demux_src2_startofpacket;                                                   // rsp_demux:src2_startofpacket -> rsp_mux_002:sink0_startofpacket
	wire         rsp_demux_src2_endofpacket;                                                     // rsp_demux:src2_endofpacket -> rsp_mux_002:sink0_endofpacket
	wire         rsp_demux_src3_valid;                                                           // rsp_demux:src3_valid -> rsp_mux_003:sink0_valid
	wire  [95:0] rsp_demux_src3_data;                                                            // rsp_demux:src3_data -> rsp_mux_003:sink0_data
	wire         rsp_demux_src3_ready;                                                           // rsp_mux_003:sink0_ready -> rsp_demux:src3_ready
	wire  [24:0] rsp_demux_src3_channel;                                                         // rsp_demux:src3_channel -> rsp_mux_003:sink0_channel
	wire         rsp_demux_src3_startofpacket;                                                   // rsp_demux:src3_startofpacket -> rsp_mux_003:sink0_startofpacket
	wire         rsp_demux_src3_endofpacket;                                                     // rsp_demux:src3_endofpacket -> rsp_mux_003:sink0_endofpacket
	wire         rsp_demux_001_src0_valid;                                                       // rsp_demux_001:src0_valid -> rsp_mux:sink1_valid
	wire  [95:0] rsp_demux_001_src0_data;                                                        // rsp_demux_001:src0_data -> rsp_mux:sink1_data
	wire         rsp_demux_001_src0_ready;                                                       // rsp_mux:sink1_ready -> rsp_demux_001:src0_ready
	wire  [24:0] rsp_demux_001_src0_channel;                                                     // rsp_demux_001:src0_channel -> rsp_mux:sink1_channel
	wire         rsp_demux_001_src0_startofpacket;                                               // rsp_demux_001:src0_startofpacket -> rsp_mux:sink1_startofpacket
	wire         rsp_demux_001_src0_endofpacket;                                                 // rsp_demux_001:src0_endofpacket -> rsp_mux:sink1_endofpacket
	wire         rsp_demux_001_src1_valid;                                                       // rsp_demux_001:src1_valid -> rsp_mux_007:sink0_valid
	wire  [95:0] rsp_demux_001_src1_data;                                                        // rsp_demux_001:src1_data -> rsp_mux_007:sink0_data
	wire         rsp_demux_001_src1_ready;                                                       // rsp_mux_007:sink0_ready -> rsp_demux_001:src1_ready
	wire  [24:0] rsp_demux_001_src1_channel;                                                     // rsp_demux_001:src1_channel -> rsp_mux_007:sink0_channel
	wire         rsp_demux_001_src1_startofpacket;                                               // rsp_demux_001:src1_startofpacket -> rsp_mux_007:sink0_startofpacket
	wire         rsp_demux_001_src1_endofpacket;                                                 // rsp_demux_001:src1_endofpacket -> rsp_mux_007:sink0_endofpacket
	wire         rsp_demux_002_src0_valid;                                                       // rsp_demux_002:src0_valid -> rsp_mux:sink2_valid
	wire  [95:0] rsp_demux_002_src0_data;                                                        // rsp_demux_002:src0_data -> rsp_mux:sink2_data
	wire         rsp_demux_002_src0_ready;                                                       // rsp_mux:sink2_ready -> rsp_demux_002:src0_ready
	wire  [24:0] rsp_demux_002_src0_channel;                                                     // rsp_demux_002:src0_channel -> rsp_mux:sink2_channel
	wire         rsp_demux_002_src0_startofpacket;                                               // rsp_demux_002:src0_startofpacket -> rsp_mux:sink2_startofpacket
	wire         rsp_demux_002_src0_endofpacket;                                                 // rsp_demux_002:src0_endofpacket -> rsp_mux:sink2_endofpacket
	wire         rsp_demux_003_src0_valid;                                                       // rsp_demux_003:src0_valid -> rsp_mux:sink3_valid
	wire  [95:0] rsp_demux_003_src0_data;                                                        // rsp_demux_003:src0_data -> rsp_mux:sink3_data
	wire         rsp_demux_003_src0_ready;                                                       // rsp_mux:sink3_ready -> rsp_demux_003:src0_ready
	wire  [24:0] rsp_demux_003_src0_channel;                                                     // rsp_demux_003:src0_channel -> rsp_mux:sink3_channel
	wire         rsp_demux_003_src0_startofpacket;                                               // rsp_demux_003:src0_startofpacket -> rsp_mux:sink3_startofpacket
	wire         rsp_demux_003_src0_endofpacket;                                                 // rsp_demux_003:src0_endofpacket -> rsp_mux:sink3_endofpacket
	wire         rsp_demux_004_src0_valid;                                                       // rsp_demux_004:src0_valid -> rsp_mux:sink4_valid
	wire  [95:0] rsp_demux_004_src0_data;                                                        // rsp_demux_004:src0_data -> rsp_mux:sink4_data
	wire         rsp_demux_004_src0_ready;                                                       // rsp_mux:sink4_ready -> rsp_demux_004:src0_ready
	wire  [24:0] rsp_demux_004_src0_channel;                                                     // rsp_demux_004:src0_channel -> rsp_mux:sink4_channel
	wire         rsp_demux_004_src0_startofpacket;                                               // rsp_demux_004:src0_startofpacket -> rsp_mux:sink4_startofpacket
	wire         rsp_demux_004_src0_endofpacket;                                                 // rsp_demux_004:src0_endofpacket -> rsp_mux:sink4_endofpacket
	wire         rsp_demux_005_src0_valid;                                                       // rsp_demux_005:src0_valid -> rsp_mux:sink5_valid
	wire  [95:0] rsp_demux_005_src0_data;                                                        // rsp_demux_005:src0_data -> rsp_mux:sink5_data
	wire         rsp_demux_005_src0_ready;                                                       // rsp_mux:sink5_ready -> rsp_demux_005:src0_ready
	wire  [24:0] rsp_demux_005_src0_channel;                                                     // rsp_demux_005:src0_channel -> rsp_mux:sink5_channel
	wire         rsp_demux_005_src0_startofpacket;                                               // rsp_demux_005:src0_startofpacket -> rsp_mux:sink5_startofpacket
	wire         rsp_demux_005_src0_endofpacket;                                                 // rsp_demux_005:src0_endofpacket -> rsp_mux:sink5_endofpacket
	wire         rsp_demux_006_src0_valid;                                                       // rsp_demux_006:src0_valid -> rsp_mux:sink6_valid
	wire  [95:0] rsp_demux_006_src0_data;                                                        // rsp_demux_006:src0_data -> rsp_mux:sink6_data
	wire         rsp_demux_006_src0_ready;                                                       // rsp_mux:sink6_ready -> rsp_demux_006:src0_ready
	wire  [24:0] rsp_demux_006_src0_channel;                                                     // rsp_demux_006:src0_channel -> rsp_mux:sink6_channel
	wire         rsp_demux_006_src0_startofpacket;                                               // rsp_demux_006:src0_startofpacket -> rsp_mux:sink6_startofpacket
	wire         rsp_demux_006_src0_endofpacket;                                                 // rsp_demux_006:src0_endofpacket -> rsp_mux:sink6_endofpacket
	wire         rsp_demux_006_src1_valid;                                                       // rsp_demux_006:src1_valid -> rsp_mux_007:sink1_valid
	wire  [95:0] rsp_demux_006_src1_data;                                                        // rsp_demux_006:src1_data -> rsp_mux_007:sink1_data
	wire         rsp_demux_006_src1_ready;                                                       // rsp_mux_007:sink1_ready -> rsp_demux_006:src1_ready
	wire  [24:0] rsp_demux_006_src1_channel;                                                     // rsp_demux_006:src1_channel -> rsp_mux_007:sink1_channel
	wire         rsp_demux_006_src1_startofpacket;                                               // rsp_demux_006:src1_startofpacket -> rsp_mux_007:sink1_startofpacket
	wire         rsp_demux_006_src1_endofpacket;                                                 // rsp_demux_006:src1_endofpacket -> rsp_mux_007:sink1_endofpacket
	wire         rsp_demux_007_src0_valid;                                                       // rsp_demux_007:src0_valid -> rsp_mux_003:sink1_valid
	wire  [95:0] rsp_demux_007_src0_data;                                                        // rsp_demux_007:src0_data -> rsp_mux_003:sink1_data
	wire         rsp_demux_007_src0_ready;                                                       // rsp_mux_003:sink1_ready -> rsp_demux_007:src0_ready
	wire  [24:0] rsp_demux_007_src0_channel;                                                     // rsp_demux_007:src0_channel -> rsp_mux_003:sink1_channel
	wire         rsp_demux_007_src0_startofpacket;                                               // rsp_demux_007:src0_startofpacket -> rsp_mux_003:sink1_startofpacket
	wire         rsp_demux_007_src0_endofpacket;                                                 // rsp_demux_007:src0_endofpacket -> rsp_mux_003:sink1_endofpacket
	wire         rsp_demux_007_src1_valid;                                                       // rsp_demux_007:src1_valid -> rsp_mux_004:sink0_valid
	wire  [95:0] rsp_demux_007_src1_data;                                                        // rsp_demux_007:src1_data -> rsp_mux_004:sink0_data
	wire         rsp_demux_007_src1_ready;                                                       // rsp_mux_004:sink0_ready -> rsp_demux_007:src1_ready
	wire  [24:0] rsp_demux_007_src1_channel;                                                     // rsp_demux_007:src1_channel -> rsp_mux_004:sink0_channel
	wire         rsp_demux_007_src1_startofpacket;                                               // rsp_demux_007:src1_startofpacket -> rsp_mux_004:sink0_startofpacket
	wire         rsp_demux_007_src1_endofpacket;                                                 // rsp_demux_007:src1_endofpacket -> rsp_mux_004:sink0_endofpacket
	wire         rsp_demux_008_src0_valid;                                                       // rsp_demux_008:src0_valid -> rsp_mux_003:sink2_valid
	wire  [95:0] rsp_demux_008_src0_data;                                                        // rsp_demux_008:src0_data -> rsp_mux_003:sink2_data
	wire         rsp_demux_008_src0_ready;                                                       // rsp_mux_003:sink2_ready -> rsp_demux_008:src0_ready
	wire  [24:0] rsp_demux_008_src0_channel;                                                     // rsp_demux_008:src0_channel -> rsp_mux_003:sink2_channel
	wire         rsp_demux_008_src0_startofpacket;                                               // rsp_demux_008:src0_startofpacket -> rsp_mux_003:sink2_startofpacket
	wire         rsp_demux_008_src0_endofpacket;                                                 // rsp_demux_008:src0_endofpacket -> rsp_mux_003:sink2_endofpacket
	wire         rsp_demux_009_src0_valid;                                                       // rsp_demux_009:src0_valid -> rsp_mux_003:sink3_valid
	wire  [95:0] rsp_demux_009_src0_data;                                                        // rsp_demux_009:src0_data -> rsp_mux_003:sink3_data
	wire         rsp_demux_009_src0_ready;                                                       // rsp_mux_003:sink3_ready -> rsp_demux_009:src0_ready
	wire  [24:0] rsp_demux_009_src0_channel;                                                     // rsp_demux_009:src0_channel -> rsp_mux_003:sink3_channel
	wire         rsp_demux_009_src0_startofpacket;                                               // rsp_demux_009:src0_startofpacket -> rsp_mux_003:sink3_startofpacket
	wire         rsp_demux_009_src0_endofpacket;                                                 // rsp_demux_009:src0_endofpacket -> rsp_mux_003:sink3_endofpacket
	wire         rsp_demux_010_src0_valid;                                                       // rsp_demux_010:src0_valid -> rsp_mux_003:sink4_valid
	wire  [95:0] rsp_demux_010_src0_data;                                                        // rsp_demux_010:src0_data -> rsp_mux_003:sink4_data
	wire         rsp_demux_010_src0_ready;                                                       // rsp_mux_003:sink4_ready -> rsp_demux_010:src0_ready
	wire  [24:0] rsp_demux_010_src0_channel;                                                     // rsp_demux_010:src0_channel -> rsp_mux_003:sink4_channel
	wire         rsp_demux_010_src0_startofpacket;                                               // rsp_demux_010:src0_startofpacket -> rsp_mux_003:sink4_startofpacket
	wire         rsp_demux_010_src0_endofpacket;                                                 // rsp_demux_010:src0_endofpacket -> rsp_mux_003:sink4_endofpacket
	wire         rsp_demux_011_src0_valid;                                                       // rsp_demux_011:src0_valid -> rsp_mux_003:sink5_valid
	wire  [95:0] rsp_demux_011_src0_data;                                                        // rsp_demux_011:src0_data -> rsp_mux_003:sink5_data
	wire         rsp_demux_011_src0_ready;                                                       // rsp_mux_003:sink5_ready -> rsp_demux_011:src0_ready
	wire  [24:0] rsp_demux_011_src0_channel;                                                     // rsp_demux_011:src0_channel -> rsp_mux_003:sink5_channel
	wire         rsp_demux_011_src0_startofpacket;                                               // rsp_demux_011:src0_startofpacket -> rsp_mux_003:sink5_startofpacket
	wire         rsp_demux_011_src0_endofpacket;                                                 // rsp_demux_011:src0_endofpacket -> rsp_mux_003:sink5_endofpacket
	wire         rsp_demux_012_src0_valid;                                                       // rsp_demux_012:src0_valid -> rsp_mux_003:sink6_valid
	wire  [95:0] rsp_demux_012_src0_data;                                                        // rsp_demux_012:src0_data -> rsp_mux_003:sink6_data
	wire         rsp_demux_012_src0_ready;                                                       // rsp_mux_003:sink6_ready -> rsp_demux_012:src0_ready
	wire  [24:0] rsp_demux_012_src0_channel;                                                     // rsp_demux_012:src0_channel -> rsp_mux_003:sink6_channel
	wire         rsp_demux_012_src0_startofpacket;                                               // rsp_demux_012:src0_startofpacket -> rsp_mux_003:sink6_startofpacket
	wire         rsp_demux_012_src0_endofpacket;                                                 // rsp_demux_012:src0_endofpacket -> rsp_mux_003:sink6_endofpacket
	wire         rsp_demux_012_src1_valid;                                                       // rsp_demux_012:src1_valid -> rsp_mux_004:sink1_valid
	wire  [95:0] rsp_demux_012_src1_data;                                                        // rsp_demux_012:src1_data -> rsp_mux_004:sink1_data
	wire         rsp_demux_012_src1_ready;                                                       // rsp_mux_004:sink1_ready -> rsp_demux_012:src1_ready
	wire  [24:0] rsp_demux_012_src1_channel;                                                     // rsp_demux_012:src1_channel -> rsp_mux_004:sink1_channel
	wire         rsp_demux_012_src1_startofpacket;                                               // rsp_demux_012:src1_startofpacket -> rsp_mux_004:sink1_startofpacket
	wire         rsp_demux_012_src1_endofpacket;                                                 // rsp_demux_012:src1_endofpacket -> rsp_mux_004:sink1_endofpacket
	wire         rsp_demux_013_src0_valid;                                                       // rsp_demux_013:src0_valid -> rsp_mux_002:sink1_valid
	wire  [95:0] rsp_demux_013_src0_data;                                                        // rsp_demux_013:src0_data -> rsp_mux_002:sink1_data
	wire         rsp_demux_013_src0_ready;                                                       // rsp_mux_002:sink1_ready -> rsp_demux_013:src0_ready
	wire  [24:0] rsp_demux_013_src0_channel;                                                     // rsp_demux_013:src0_channel -> rsp_mux_002:sink1_channel
	wire         rsp_demux_013_src0_startofpacket;                                               // rsp_demux_013:src0_startofpacket -> rsp_mux_002:sink1_startofpacket
	wire         rsp_demux_013_src0_endofpacket;                                                 // rsp_demux_013:src0_endofpacket -> rsp_mux_002:sink1_endofpacket
	wire         rsp_demux_013_src1_valid;                                                       // rsp_demux_013:src1_valid -> rsp_mux_005:sink0_valid
	wire  [95:0] rsp_demux_013_src1_data;                                                        // rsp_demux_013:src1_data -> rsp_mux_005:sink0_data
	wire         rsp_demux_013_src1_ready;                                                       // rsp_mux_005:sink0_ready -> rsp_demux_013:src1_ready
	wire  [24:0] rsp_demux_013_src1_channel;                                                     // rsp_demux_013:src1_channel -> rsp_mux_005:sink0_channel
	wire         rsp_demux_013_src1_startofpacket;                                               // rsp_demux_013:src1_startofpacket -> rsp_mux_005:sink0_startofpacket
	wire         rsp_demux_013_src1_endofpacket;                                                 // rsp_demux_013:src1_endofpacket -> rsp_mux_005:sink0_endofpacket
	wire         rsp_demux_014_src0_valid;                                                       // rsp_demux_014:src0_valid -> rsp_mux_002:sink2_valid
	wire  [95:0] rsp_demux_014_src0_data;                                                        // rsp_demux_014:src0_data -> rsp_mux_002:sink2_data
	wire         rsp_demux_014_src0_ready;                                                       // rsp_mux_002:sink2_ready -> rsp_demux_014:src0_ready
	wire  [24:0] rsp_demux_014_src0_channel;                                                     // rsp_demux_014:src0_channel -> rsp_mux_002:sink2_channel
	wire         rsp_demux_014_src0_startofpacket;                                               // rsp_demux_014:src0_startofpacket -> rsp_mux_002:sink2_startofpacket
	wire         rsp_demux_014_src0_endofpacket;                                                 // rsp_demux_014:src0_endofpacket -> rsp_mux_002:sink2_endofpacket
	wire         rsp_demux_015_src0_valid;                                                       // rsp_demux_015:src0_valid -> rsp_mux_002:sink3_valid
	wire  [95:0] rsp_demux_015_src0_data;                                                        // rsp_demux_015:src0_data -> rsp_mux_002:sink3_data
	wire         rsp_demux_015_src0_ready;                                                       // rsp_mux_002:sink3_ready -> rsp_demux_015:src0_ready
	wire  [24:0] rsp_demux_015_src0_channel;                                                     // rsp_demux_015:src0_channel -> rsp_mux_002:sink3_channel
	wire         rsp_demux_015_src0_startofpacket;                                               // rsp_demux_015:src0_startofpacket -> rsp_mux_002:sink3_startofpacket
	wire         rsp_demux_015_src0_endofpacket;                                                 // rsp_demux_015:src0_endofpacket -> rsp_mux_002:sink3_endofpacket
	wire         rsp_demux_016_src0_valid;                                                       // rsp_demux_016:src0_valid -> rsp_mux_002:sink4_valid
	wire  [95:0] rsp_demux_016_src0_data;                                                        // rsp_demux_016:src0_data -> rsp_mux_002:sink4_data
	wire         rsp_demux_016_src0_ready;                                                       // rsp_mux_002:sink4_ready -> rsp_demux_016:src0_ready
	wire  [24:0] rsp_demux_016_src0_channel;                                                     // rsp_demux_016:src0_channel -> rsp_mux_002:sink4_channel
	wire         rsp_demux_016_src0_startofpacket;                                               // rsp_demux_016:src0_startofpacket -> rsp_mux_002:sink4_startofpacket
	wire         rsp_demux_016_src0_endofpacket;                                                 // rsp_demux_016:src0_endofpacket -> rsp_mux_002:sink4_endofpacket
	wire         rsp_demux_017_src0_valid;                                                       // rsp_demux_017:src0_valid -> rsp_mux_002:sink5_valid
	wire  [95:0] rsp_demux_017_src0_data;                                                        // rsp_demux_017:src0_data -> rsp_mux_002:sink5_data
	wire         rsp_demux_017_src0_ready;                                                       // rsp_mux_002:sink5_ready -> rsp_demux_017:src0_ready
	wire  [24:0] rsp_demux_017_src0_channel;                                                     // rsp_demux_017:src0_channel -> rsp_mux_002:sink5_channel
	wire         rsp_demux_017_src0_startofpacket;                                               // rsp_demux_017:src0_startofpacket -> rsp_mux_002:sink5_startofpacket
	wire         rsp_demux_017_src0_endofpacket;                                                 // rsp_demux_017:src0_endofpacket -> rsp_mux_002:sink5_endofpacket
	wire         rsp_demux_018_src0_valid;                                                       // rsp_demux_018:src0_valid -> rsp_mux_002:sink6_valid
	wire  [95:0] rsp_demux_018_src0_data;                                                        // rsp_demux_018:src0_data -> rsp_mux_002:sink6_data
	wire         rsp_demux_018_src0_ready;                                                       // rsp_mux_002:sink6_ready -> rsp_demux_018:src0_ready
	wire  [24:0] rsp_demux_018_src0_channel;                                                     // rsp_demux_018:src0_channel -> rsp_mux_002:sink6_channel
	wire         rsp_demux_018_src0_startofpacket;                                               // rsp_demux_018:src0_startofpacket -> rsp_mux_002:sink6_startofpacket
	wire         rsp_demux_018_src0_endofpacket;                                                 // rsp_demux_018:src0_endofpacket -> rsp_mux_002:sink6_endofpacket
	wire         rsp_demux_018_src1_valid;                                                       // rsp_demux_018:src1_valid -> rsp_mux_005:sink1_valid
	wire  [95:0] rsp_demux_018_src1_data;                                                        // rsp_demux_018:src1_data -> rsp_mux_005:sink1_data
	wire         rsp_demux_018_src1_ready;                                                       // rsp_mux_005:sink1_ready -> rsp_demux_018:src1_ready
	wire  [24:0] rsp_demux_018_src1_channel;                                                     // rsp_demux_018:src1_channel -> rsp_mux_005:sink1_channel
	wire         rsp_demux_018_src1_startofpacket;                                               // rsp_demux_018:src1_startofpacket -> rsp_mux_005:sink1_startofpacket
	wire         rsp_demux_018_src1_endofpacket;                                                 // rsp_demux_018:src1_endofpacket -> rsp_mux_005:sink1_endofpacket
	wire         rsp_demux_019_src0_valid;                                                       // rsp_demux_019:src0_valid -> rsp_mux_001:sink1_valid
	wire  [95:0] rsp_demux_019_src0_data;                                                        // rsp_demux_019:src0_data -> rsp_mux_001:sink1_data
	wire         rsp_demux_019_src0_ready;                                                       // rsp_mux_001:sink1_ready -> rsp_demux_019:src0_ready
	wire  [24:0] rsp_demux_019_src0_channel;                                                     // rsp_demux_019:src0_channel -> rsp_mux_001:sink1_channel
	wire         rsp_demux_019_src0_startofpacket;                                               // rsp_demux_019:src0_startofpacket -> rsp_mux_001:sink1_startofpacket
	wire         rsp_demux_019_src0_endofpacket;                                                 // rsp_demux_019:src0_endofpacket -> rsp_mux_001:sink1_endofpacket
	wire         rsp_demux_019_src1_valid;                                                       // rsp_demux_019:src1_valid -> rsp_mux_006:sink0_valid
	wire  [95:0] rsp_demux_019_src1_data;                                                        // rsp_demux_019:src1_data -> rsp_mux_006:sink0_data
	wire         rsp_demux_019_src1_ready;                                                       // rsp_mux_006:sink0_ready -> rsp_demux_019:src1_ready
	wire  [24:0] rsp_demux_019_src1_channel;                                                     // rsp_demux_019:src1_channel -> rsp_mux_006:sink0_channel
	wire         rsp_demux_019_src1_startofpacket;                                               // rsp_demux_019:src1_startofpacket -> rsp_mux_006:sink0_startofpacket
	wire         rsp_demux_019_src1_endofpacket;                                                 // rsp_demux_019:src1_endofpacket -> rsp_mux_006:sink0_endofpacket
	wire         rsp_demux_020_src0_valid;                                                       // rsp_demux_020:src0_valid -> rsp_mux_001:sink2_valid
	wire  [95:0] rsp_demux_020_src0_data;                                                        // rsp_demux_020:src0_data -> rsp_mux_001:sink2_data
	wire         rsp_demux_020_src0_ready;                                                       // rsp_mux_001:sink2_ready -> rsp_demux_020:src0_ready
	wire  [24:0] rsp_demux_020_src0_channel;                                                     // rsp_demux_020:src0_channel -> rsp_mux_001:sink2_channel
	wire         rsp_demux_020_src0_startofpacket;                                               // rsp_demux_020:src0_startofpacket -> rsp_mux_001:sink2_startofpacket
	wire         rsp_demux_020_src0_endofpacket;                                                 // rsp_demux_020:src0_endofpacket -> rsp_mux_001:sink2_endofpacket
	wire         rsp_demux_021_src0_valid;                                                       // rsp_demux_021:src0_valid -> rsp_mux_001:sink3_valid
	wire  [95:0] rsp_demux_021_src0_data;                                                        // rsp_demux_021:src0_data -> rsp_mux_001:sink3_data
	wire         rsp_demux_021_src0_ready;                                                       // rsp_mux_001:sink3_ready -> rsp_demux_021:src0_ready
	wire  [24:0] rsp_demux_021_src0_channel;                                                     // rsp_demux_021:src0_channel -> rsp_mux_001:sink3_channel
	wire         rsp_demux_021_src0_startofpacket;                                               // rsp_demux_021:src0_startofpacket -> rsp_mux_001:sink3_startofpacket
	wire         rsp_demux_021_src0_endofpacket;                                                 // rsp_demux_021:src0_endofpacket -> rsp_mux_001:sink3_endofpacket
	wire         rsp_demux_022_src0_valid;                                                       // rsp_demux_022:src0_valid -> rsp_mux_001:sink4_valid
	wire  [95:0] rsp_demux_022_src0_data;                                                        // rsp_demux_022:src0_data -> rsp_mux_001:sink4_data
	wire         rsp_demux_022_src0_ready;                                                       // rsp_mux_001:sink4_ready -> rsp_demux_022:src0_ready
	wire  [24:0] rsp_demux_022_src0_channel;                                                     // rsp_demux_022:src0_channel -> rsp_mux_001:sink4_channel
	wire         rsp_demux_022_src0_startofpacket;                                               // rsp_demux_022:src0_startofpacket -> rsp_mux_001:sink4_startofpacket
	wire         rsp_demux_022_src0_endofpacket;                                                 // rsp_demux_022:src0_endofpacket -> rsp_mux_001:sink4_endofpacket
	wire         rsp_demux_023_src0_valid;                                                       // rsp_demux_023:src0_valid -> rsp_mux_001:sink5_valid
	wire  [95:0] rsp_demux_023_src0_data;                                                        // rsp_demux_023:src0_data -> rsp_mux_001:sink5_data
	wire         rsp_demux_023_src0_ready;                                                       // rsp_mux_001:sink5_ready -> rsp_demux_023:src0_ready
	wire  [24:0] rsp_demux_023_src0_channel;                                                     // rsp_demux_023:src0_channel -> rsp_mux_001:sink5_channel
	wire         rsp_demux_023_src0_startofpacket;                                               // rsp_demux_023:src0_startofpacket -> rsp_mux_001:sink5_startofpacket
	wire         rsp_demux_023_src0_endofpacket;                                                 // rsp_demux_023:src0_endofpacket -> rsp_mux_001:sink5_endofpacket
	wire         rsp_demux_024_src0_valid;                                                       // rsp_demux_024:src0_valid -> rsp_mux_001:sink6_valid
	wire  [95:0] rsp_demux_024_src0_data;                                                        // rsp_demux_024:src0_data -> rsp_mux_001:sink6_data
	wire         rsp_demux_024_src0_ready;                                                       // rsp_mux_001:sink6_ready -> rsp_demux_024:src0_ready
	wire  [24:0] rsp_demux_024_src0_channel;                                                     // rsp_demux_024:src0_channel -> rsp_mux_001:sink6_channel
	wire         rsp_demux_024_src0_startofpacket;                                               // rsp_demux_024:src0_startofpacket -> rsp_mux_001:sink6_startofpacket
	wire         rsp_demux_024_src0_endofpacket;                                                 // rsp_demux_024:src0_endofpacket -> rsp_mux_001:sink6_endofpacket
	wire         rsp_demux_024_src1_valid;                                                       // rsp_demux_024:src1_valid -> rsp_mux_006:sink1_valid
	wire  [95:0] rsp_demux_024_src1_data;                                                        // rsp_demux_024:src1_data -> rsp_mux_006:sink1_data
	wire         rsp_demux_024_src1_ready;                                                       // rsp_mux_006:sink1_ready -> rsp_demux_024:src1_ready
	wire  [24:0] rsp_demux_024_src1_channel;                                                     // rsp_demux_024:src1_channel -> rsp_mux_006:sink1_channel
	wire         rsp_demux_024_src1_startofpacket;                                               // rsp_demux_024:src1_startofpacket -> rsp_mux_006:sink1_startofpacket
	wire         rsp_demux_024_src1_endofpacket;                                                 // rsp_demux_024:src1_endofpacket -> rsp_mux_006:sink1_endofpacket
	wire         jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_valid;                       // jtag_uart_0_avalon_jtag_slave_agent:rdata_fifo_src_valid -> avalon_st_adapter:in_0_valid
	wire  [33:0] jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_data;                        // jtag_uart_0_avalon_jtag_slave_agent:rdata_fifo_src_data -> avalon_st_adapter:in_0_data
	wire         jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_ready;                       // avalon_st_adapter:in_0_ready -> jtag_uart_0_avalon_jtag_slave_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_out_0_valid;                                                  // avalon_st_adapter:out_0_valid -> jtag_uart_0_avalon_jtag_slave_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_out_0_data;                                                   // avalon_st_adapter:out_0_data -> jtag_uart_0_avalon_jtag_slave_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_out_0_ready;                                                  // jtag_uart_0_avalon_jtag_slave_agent:rdata_fifo_sink_ready -> avalon_st_adapter:out_0_ready
	wire   [0:0] avalon_st_adapter_out_0_error;                                                  // avalon_st_adapter:out_0_error -> jtag_uart_0_avalon_jtag_slave_agent:rdata_fifo_sink_error
	wire         nios2_00_debug_mem_slave_agent_rdata_fifo_src_valid;                            // nios2_00_debug_mem_slave_agent:rdata_fifo_src_valid -> avalon_st_adapter_001:in_0_valid
	wire  [33:0] nios2_00_debug_mem_slave_agent_rdata_fifo_src_data;                             // nios2_00_debug_mem_slave_agent:rdata_fifo_src_data -> avalon_st_adapter_001:in_0_data
	wire         nios2_00_debug_mem_slave_agent_rdata_fifo_src_ready;                            // avalon_st_adapter_001:in_0_ready -> nios2_00_debug_mem_slave_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_001_out_0_valid;                                              // avalon_st_adapter_001:out_0_valid -> nios2_00_debug_mem_slave_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_001_out_0_data;                                               // avalon_st_adapter_001:out_0_data -> nios2_00_debug_mem_slave_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_001_out_0_ready;                                              // nios2_00_debug_mem_slave_agent:rdata_fifo_sink_ready -> avalon_st_adapter_001:out_0_ready
	wire   [0:0] avalon_st_adapter_001_out_0_error;                                              // avalon_st_adapter_001:out_0_error -> nios2_00_debug_mem_slave_agent:rdata_fifo_sink_error
	wire         fifo_source_00_in_agent_rdata_fifo_src_valid;                                   // fifo_source_00_in_agent:rdata_fifo_src_valid -> avalon_st_adapter_002:in_0_valid
	wire  [33:0] fifo_source_00_in_agent_rdata_fifo_src_data;                                    // fifo_source_00_in_agent:rdata_fifo_src_data -> avalon_st_adapter_002:in_0_data
	wire         fifo_source_00_in_agent_rdata_fifo_src_ready;                                   // avalon_st_adapter_002:in_0_ready -> fifo_source_00_in_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_002_out_0_valid;                                              // avalon_st_adapter_002:out_0_valid -> fifo_source_00_in_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_002_out_0_data;                                               // avalon_st_adapter_002:out_0_data -> fifo_source_00_in_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_002_out_0_ready;                                              // fifo_source_00_in_agent:rdata_fifo_sink_ready -> avalon_st_adapter_002:out_0_ready
	wire   [0:0] avalon_st_adapter_002_out_0_error;                                              // avalon_st_adapter_002:out_0_error -> fifo_source_00_in_agent:rdata_fifo_sink_error
	wire         fifo_sink_00_in_csr_agent_rdata_fifo_src_valid;                                 // fifo_sink_00_in_csr_agent:rdata_fifo_src_valid -> avalon_st_adapter_003:in_0_valid
	wire  [33:0] fifo_sink_00_in_csr_agent_rdata_fifo_src_data;                                  // fifo_sink_00_in_csr_agent:rdata_fifo_src_data -> avalon_st_adapter_003:in_0_data
	wire         fifo_sink_00_in_csr_agent_rdata_fifo_src_ready;                                 // avalon_st_adapter_003:in_0_ready -> fifo_sink_00_in_csr_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_003_out_0_valid;                                              // avalon_st_adapter_003:out_0_valid -> fifo_sink_00_in_csr_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_003_out_0_data;                                               // avalon_st_adapter_003:out_0_data -> fifo_sink_00_in_csr_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_003_out_0_ready;                                              // fifo_sink_00_in_csr_agent:rdata_fifo_sink_ready -> avalon_st_adapter_003:out_0_ready
	wire   [0:0] avalon_st_adapter_003_out_0_error;                                              // avalon_st_adapter_003:out_0_error -> fifo_sink_00_in_csr_agent:rdata_fifo_sink_error
	wire         fifo_source_00_in_csr_agent_rdata_fifo_src_valid;                               // fifo_source_00_in_csr_agent:rdata_fifo_src_valid -> avalon_st_adapter_004:in_0_valid
	wire  [33:0] fifo_source_00_in_csr_agent_rdata_fifo_src_data;                                // fifo_source_00_in_csr_agent:rdata_fifo_src_data -> avalon_st_adapter_004:in_0_data
	wire         fifo_source_00_in_csr_agent_rdata_fifo_src_ready;                               // avalon_st_adapter_004:in_0_ready -> fifo_source_00_in_csr_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_004_out_0_valid;                                              // avalon_st_adapter_004:out_0_valid -> fifo_source_00_in_csr_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_004_out_0_data;                                               // avalon_st_adapter_004:out_0_data -> fifo_source_00_in_csr_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_004_out_0_ready;                                              // fifo_source_00_in_csr_agent:rdata_fifo_sink_ready -> avalon_st_adapter_004:out_0_ready
	wire   [0:0] avalon_st_adapter_004_out_0_error;                                              // avalon_st_adapter_004:out_0_error -> fifo_source_00_in_csr_agent:rdata_fifo_sink_error
	wire         fifo_sink_00_out_agent_rdata_fifo_src_valid;                                    // fifo_sink_00_out_agent:rdata_fifo_src_valid -> avalon_st_adapter_005:in_0_valid
	wire  [33:0] fifo_sink_00_out_agent_rdata_fifo_src_data;                                     // fifo_sink_00_out_agent:rdata_fifo_src_data -> avalon_st_adapter_005:in_0_data
	wire         fifo_sink_00_out_agent_rdata_fifo_src_ready;                                    // avalon_st_adapter_005:in_0_ready -> fifo_sink_00_out_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_005_out_0_valid;                                              // avalon_st_adapter_005:out_0_valid -> fifo_sink_00_out_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_005_out_0_data;                                               // avalon_st_adapter_005:out_0_data -> fifo_sink_00_out_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_005_out_0_ready;                                              // fifo_sink_00_out_agent:rdata_fifo_sink_ready -> avalon_st_adapter_005:out_0_ready
	wire   [0:0] avalon_st_adapter_005_out_0_error;                                              // avalon_st_adapter_005:out_0_error -> fifo_sink_00_out_agent:rdata_fifo_sink_error
	wire         data_mem_00_s1_agent_rdata_fifo_src_valid;                                      // data_mem_00_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter_006:in_0_valid
	wire  [33:0] data_mem_00_s1_agent_rdata_fifo_src_data;                                       // data_mem_00_s1_agent:rdata_fifo_src_data -> avalon_st_adapter_006:in_0_data
	wire         data_mem_00_s1_agent_rdata_fifo_src_ready;                                      // avalon_st_adapter_006:in_0_ready -> data_mem_00_s1_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_006_out_0_valid;                                              // avalon_st_adapter_006:out_0_valid -> data_mem_00_s1_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_006_out_0_data;                                               // avalon_st_adapter_006:out_0_data -> data_mem_00_s1_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_006_out_0_ready;                                              // data_mem_00_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_006:out_0_ready
	wire   [0:0] avalon_st_adapter_006_out_0_error;                                              // avalon_st_adapter_006:out_0_error -> data_mem_00_s1_agent:rdata_fifo_sink_error
	wire         nios2_11_debug_mem_slave_agent_rdata_fifo_src_valid;                            // nios2_11_debug_mem_slave_agent:rdata_fifo_src_valid -> avalon_st_adapter_007:in_0_valid
	wire  [33:0] nios2_11_debug_mem_slave_agent_rdata_fifo_src_data;                             // nios2_11_debug_mem_slave_agent:rdata_fifo_src_data -> avalon_st_adapter_007:in_0_data
	wire         nios2_11_debug_mem_slave_agent_rdata_fifo_src_ready;                            // avalon_st_adapter_007:in_0_ready -> nios2_11_debug_mem_slave_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_007_out_0_valid;                                              // avalon_st_adapter_007:out_0_valid -> nios2_11_debug_mem_slave_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_007_out_0_data;                                               // avalon_st_adapter_007:out_0_data -> nios2_11_debug_mem_slave_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_007_out_0_ready;                                              // nios2_11_debug_mem_slave_agent:rdata_fifo_sink_ready -> avalon_st_adapter_007:out_0_ready
	wire   [0:0] avalon_st_adapter_007_out_0_error;                                              // avalon_st_adapter_007:out_0_error -> nios2_11_debug_mem_slave_agent:rdata_fifo_sink_error
	wire         fifo_source_11_in_agent_rdata_fifo_src_valid;                                   // fifo_source_11_in_agent:rdata_fifo_src_valid -> avalon_st_adapter_008:in_0_valid
	wire  [33:0] fifo_source_11_in_agent_rdata_fifo_src_data;                                    // fifo_source_11_in_agent:rdata_fifo_src_data -> avalon_st_adapter_008:in_0_data
	wire         fifo_source_11_in_agent_rdata_fifo_src_ready;                                   // avalon_st_adapter_008:in_0_ready -> fifo_source_11_in_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_008_out_0_valid;                                              // avalon_st_adapter_008:out_0_valid -> fifo_source_11_in_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_008_out_0_data;                                               // avalon_st_adapter_008:out_0_data -> fifo_source_11_in_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_008_out_0_ready;                                              // fifo_source_11_in_agent:rdata_fifo_sink_ready -> avalon_st_adapter_008:out_0_ready
	wire   [0:0] avalon_st_adapter_008_out_0_error;                                              // avalon_st_adapter_008:out_0_error -> fifo_source_11_in_agent:rdata_fifo_sink_error
	wire         fifo_sink_11_in_csr_agent_rdata_fifo_src_valid;                                 // fifo_sink_11_in_csr_agent:rdata_fifo_src_valid -> avalon_st_adapter_009:in_0_valid
	wire  [33:0] fifo_sink_11_in_csr_agent_rdata_fifo_src_data;                                  // fifo_sink_11_in_csr_agent:rdata_fifo_src_data -> avalon_st_adapter_009:in_0_data
	wire         fifo_sink_11_in_csr_agent_rdata_fifo_src_ready;                                 // avalon_st_adapter_009:in_0_ready -> fifo_sink_11_in_csr_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_009_out_0_valid;                                              // avalon_st_adapter_009:out_0_valid -> fifo_sink_11_in_csr_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_009_out_0_data;                                               // avalon_st_adapter_009:out_0_data -> fifo_sink_11_in_csr_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_009_out_0_ready;                                              // fifo_sink_11_in_csr_agent:rdata_fifo_sink_ready -> avalon_st_adapter_009:out_0_ready
	wire   [0:0] avalon_st_adapter_009_out_0_error;                                              // avalon_st_adapter_009:out_0_error -> fifo_sink_11_in_csr_agent:rdata_fifo_sink_error
	wire         fifo_source_11_in_csr_agent_rdata_fifo_src_valid;                               // fifo_source_11_in_csr_agent:rdata_fifo_src_valid -> avalon_st_adapter_010:in_0_valid
	wire  [33:0] fifo_source_11_in_csr_agent_rdata_fifo_src_data;                                // fifo_source_11_in_csr_agent:rdata_fifo_src_data -> avalon_st_adapter_010:in_0_data
	wire         fifo_source_11_in_csr_agent_rdata_fifo_src_ready;                               // avalon_st_adapter_010:in_0_ready -> fifo_source_11_in_csr_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_010_out_0_valid;                                              // avalon_st_adapter_010:out_0_valid -> fifo_source_11_in_csr_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_010_out_0_data;                                               // avalon_st_adapter_010:out_0_data -> fifo_source_11_in_csr_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_010_out_0_ready;                                              // fifo_source_11_in_csr_agent:rdata_fifo_sink_ready -> avalon_st_adapter_010:out_0_ready
	wire   [0:0] avalon_st_adapter_010_out_0_error;                                              // avalon_st_adapter_010:out_0_error -> fifo_source_11_in_csr_agent:rdata_fifo_sink_error
	wire         fifo_sink_11_out_agent_rdata_fifo_src_valid;                                    // fifo_sink_11_out_agent:rdata_fifo_src_valid -> avalon_st_adapter_011:in_0_valid
	wire  [33:0] fifo_sink_11_out_agent_rdata_fifo_src_data;                                     // fifo_sink_11_out_agent:rdata_fifo_src_data -> avalon_st_adapter_011:in_0_data
	wire         fifo_sink_11_out_agent_rdata_fifo_src_ready;                                    // avalon_st_adapter_011:in_0_ready -> fifo_sink_11_out_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_011_out_0_valid;                                              // avalon_st_adapter_011:out_0_valid -> fifo_sink_11_out_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_011_out_0_data;                                               // avalon_st_adapter_011:out_0_data -> fifo_sink_11_out_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_011_out_0_ready;                                              // fifo_sink_11_out_agent:rdata_fifo_sink_ready -> avalon_st_adapter_011:out_0_ready
	wire   [0:0] avalon_st_adapter_011_out_0_error;                                              // avalon_st_adapter_011:out_0_error -> fifo_sink_11_out_agent:rdata_fifo_sink_error
	wire         data_mem_11_s1_agent_rdata_fifo_src_valid;                                      // data_mem_11_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter_012:in_0_valid
	wire  [33:0] data_mem_11_s1_agent_rdata_fifo_src_data;                                       // data_mem_11_s1_agent:rdata_fifo_src_data -> avalon_st_adapter_012:in_0_data
	wire         data_mem_11_s1_agent_rdata_fifo_src_ready;                                      // avalon_st_adapter_012:in_0_ready -> data_mem_11_s1_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_012_out_0_valid;                                              // avalon_st_adapter_012:out_0_valid -> data_mem_11_s1_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_012_out_0_data;                                               // avalon_st_adapter_012:out_0_data -> data_mem_11_s1_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_012_out_0_ready;                                              // data_mem_11_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_012:out_0_ready
	wire   [0:0] avalon_st_adapter_012_out_0_error;                                              // avalon_st_adapter_012:out_0_error -> data_mem_11_s1_agent:rdata_fifo_sink_error
	wire         nios2_10_debug_mem_slave_agent_rdata_fifo_src_valid;                            // nios2_10_debug_mem_slave_agent:rdata_fifo_src_valid -> avalon_st_adapter_013:in_0_valid
	wire  [33:0] nios2_10_debug_mem_slave_agent_rdata_fifo_src_data;                             // nios2_10_debug_mem_slave_agent:rdata_fifo_src_data -> avalon_st_adapter_013:in_0_data
	wire         nios2_10_debug_mem_slave_agent_rdata_fifo_src_ready;                            // avalon_st_adapter_013:in_0_ready -> nios2_10_debug_mem_slave_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_013_out_0_valid;                                              // avalon_st_adapter_013:out_0_valid -> nios2_10_debug_mem_slave_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_013_out_0_data;                                               // avalon_st_adapter_013:out_0_data -> nios2_10_debug_mem_slave_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_013_out_0_ready;                                              // nios2_10_debug_mem_slave_agent:rdata_fifo_sink_ready -> avalon_st_adapter_013:out_0_ready
	wire   [0:0] avalon_st_adapter_013_out_0_error;                                              // avalon_st_adapter_013:out_0_error -> nios2_10_debug_mem_slave_agent:rdata_fifo_sink_error
	wire         fifo_source_10_in_agent_rdata_fifo_src_valid;                                   // fifo_source_10_in_agent:rdata_fifo_src_valid -> avalon_st_adapter_014:in_0_valid
	wire  [33:0] fifo_source_10_in_agent_rdata_fifo_src_data;                                    // fifo_source_10_in_agent:rdata_fifo_src_data -> avalon_st_adapter_014:in_0_data
	wire         fifo_source_10_in_agent_rdata_fifo_src_ready;                                   // avalon_st_adapter_014:in_0_ready -> fifo_source_10_in_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_014_out_0_valid;                                              // avalon_st_adapter_014:out_0_valid -> fifo_source_10_in_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_014_out_0_data;                                               // avalon_st_adapter_014:out_0_data -> fifo_source_10_in_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_014_out_0_ready;                                              // fifo_source_10_in_agent:rdata_fifo_sink_ready -> avalon_st_adapter_014:out_0_ready
	wire   [0:0] avalon_st_adapter_014_out_0_error;                                              // avalon_st_adapter_014:out_0_error -> fifo_source_10_in_agent:rdata_fifo_sink_error
	wire         fifo_sink_10_in_csr_agent_rdata_fifo_src_valid;                                 // fifo_sink_10_in_csr_agent:rdata_fifo_src_valid -> avalon_st_adapter_015:in_0_valid
	wire  [33:0] fifo_sink_10_in_csr_agent_rdata_fifo_src_data;                                  // fifo_sink_10_in_csr_agent:rdata_fifo_src_data -> avalon_st_adapter_015:in_0_data
	wire         fifo_sink_10_in_csr_agent_rdata_fifo_src_ready;                                 // avalon_st_adapter_015:in_0_ready -> fifo_sink_10_in_csr_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_015_out_0_valid;                                              // avalon_st_adapter_015:out_0_valid -> fifo_sink_10_in_csr_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_015_out_0_data;                                               // avalon_st_adapter_015:out_0_data -> fifo_sink_10_in_csr_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_015_out_0_ready;                                              // fifo_sink_10_in_csr_agent:rdata_fifo_sink_ready -> avalon_st_adapter_015:out_0_ready
	wire   [0:0] avalon_st_adapter_015_out_0_error;                                              // avalon_st_adapter_015:out_0_error -> fifo_sink_10_in_csr_agent:rdata_fifo_sink_error
	wire         fifo_source_10_in_csr_agent_rdata_fifo_src_valid;                               // fifo_source_10_in_csr_agent:rdata_fifo_src_valid -> avalon_st_adapter_016:in_0_valid
	wire  [33:0] fifo_source_10_in_csr_agent_rdata_fifo_src_data;                                // fifo_source_10_in_csr_agent:rdata_fifo_src_data -> avalon_st_adapter_016:in_0_data
	wire         fifo_source_10_in_csr_agent_rdata_fifo_src_ready;                               // avalon_st_adapter_016:in_0_ready -> fifo_source_10_in_csr_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_016_out_0_valid;                                              // avalon_st_adapter_016:out_0_valid -> fifo_source_10_in_csr_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_016_out_0_data;                                               // avalon_st_adapter_016:out_0_data -> fifo_source_10_in_csr_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_016_out_0_ready;                                              // fifo_source_10_in_csr_agent:rdata_fifo_sink_ready -> avalon_st_adapter_016:out_0_ready
	wire   [0:0] avalon_st_adapter_016_out_0_error;                                              // avalon_st_adapter_016:out_0_error -> fifo_source_10_in_csr_agent:rdata_fifo_sink_error
	wire         fifo_sink_10_out_agent_rdata_fifo_src_valid;                                    // fifo_sink_10_out_agent:rdata_fifo_src_valid -> avalon_st_adapter_017:in_0_valid
	wire  [33:0] fifo_sink_10_out_agent_rdata_fifo_src_data;                                     // fifo_sink_10_out_agent:rdata_fifo_src_data -> avalon_st_adapter_017:in_0_data
	wire         fifo_sink_10_out_agent_rdata_fifo_src_ready;                                    // avalon_st_adapter_017:in_0_ready -> fifo_sink_10_out_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_017_out_0_valid;                                              // avalon_st_adapter_017:out_0_valid -> fifo_sink_10_out_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_017_out_0_data;                                               // avalon_st_adapter_017:out_0_data -> fifo_sink_10_out_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_017_out_0_ready;                                              // fifo_sink_10_out_agent:rdata_fifo_sink_ready -> avalon_st_adapter_017:out_0_ready
	wire   [0:0] avalon_st_adapter_017_out_0_error;                                              // avalon_st_adapter_017:out_0_error -> fifo_sink_10_out_agent:rdata_fifo_sink_error
	wire         data_mem_10_s1_agent_rdata_fifo_src_valid;                                      // data_mem_10_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter_018:in_0_valid
	wire  [33:0] data_mem_10_s1_agent_rdata_fifo_src_data;                                       // data_mem_10_s1_agent:rdata_fifo_src_data -> avalon_st_adapter_018:in_0_data
	wire         data_mem_10_s1_agent_rdata_fifo_src_ready;                                      // avalon_st_adapter_018:in_0_ready -> data_mem_10_s1_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_018_out_0_valid;                                              // avalon_st_adapter_018:out_0_valid -> data_mem_10_s1_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_018_out_0_data;                                               // avalon_st_adapter_018:out_0_data -> data_mem_10_s1_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_018_out_0_ready;                                              // data_mem_10_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_018:out_0_ready
	wire   [0:0] avalon_st_adapter_018_out_0_error;                                              // avalon_st_adapter_018:out_0_error -> data_mem_10_s1_agent:rdata_fifo_sink_error
	wire         nios2_01_debug_mem_slave_agent_rdata_fifo_src_valid;                            // nios2_01_debug_mem_slave_agent:rdata_fifo_src_valid -> avalon_st_adapter_019:in_0_valid
	wire  [33:0] nios2_01_debug_mem_slave_agent_rdata_fifo_src_data;                             // nios2_01_debug_mem_slave_agent:rdata_fifo_src_data -> avalon_st_adapter_019:in_0_data
	wire         nios2_01_debug_mem_slave_agent_rdata_fifo_src_ready;                            // avalon_st_adapter_019:in_0_ready -> nios2_01_debug_mem_slave_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_019_out_0_valid;                                              // avalon_st_adapter_019:out_0_valid -> nios2_01_debug_mem_slave_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_019_out_0_data;                                               // avalon_st_adapter_019:out_0_data -> nios2_01_debug_mem_slave_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_019_out_0_ready;                                              // nios2_01_debug_mem_slave_agent:rdata_fifo_sink_ready -> avalon_st_adapter_019:out_0_ready
	wire   [0:0] avalon_st_adapter_019_out_0_error;                                              // avalon_st_adapter_019:out_0_error -> nios2_01_debug_mem_slave_agent:rdata_fifo_sink_error
	wire         fifo_source_01_in_agent_rdata_fifo_src_valid;                                   // fifo_source_01_in_agent:rdata_fifo_src_valid -> avalon_st_adapter_020:in_0_valid
	wire  [33:0] fifo_source_01_in_agent_rdata_fifo_src_data;                                    // fifo_source_01_in_agent:rdata_fifo_src_data -> avalon_st_adapter_020:in_0_data
	wire         fifo_source_01_in_agent_rdata_fifo_src_ready;                                   // avalon_st_adapter_020:in_0_ready -> fifo_source_01_in_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_020_out_0_valid;                                              // avalon_st_adapter_020:out_0_valid -> fifo_source_01_in_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_020_out_0_data;                                               // avalon_st_adapter_020:out_0_data -> fifo_source_01_in_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_020_out_0_ready;                                              // fifo_source_01_in_agent:rdata_fifo_sink_ready -> avalon_st_adapter_020:out_0_ready
	wire   [0:0] avalon_st_adapter_020_out_0_error;                                              // avalon_st_adapter_020:out_0_error -> fifo_source_01_in_agent:rdata_fifo_sink_error
	wire         fifo_sink_01_in_csr_agent_rdata_fifo_src_valid;                                 // fifo_sink_01_in_csr_agent:rdata_fifo_src_valid -> avalon_st_adapter_021:in_0_valid
	wire  [33:0] fifo_sink_01_in_csr_agent_rdata_fifo_src_data;                                  // fifo_sink_01_in_csr_agent:rdata_fifo_src_data -> avalon_st_adapter_021:in_0_data
	wire         fifo_sink_01_in_csr_agent_rdata_fifo_src_ready;                                 // avalon_st_adapter_021:in_0_ready -> fifo_sink_01_in_csr_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_021_out_0_valid;                                              // avalon_st_adapter_021:out_0_valid -> fifo_sink_01_in_csr_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_021_out_0_data;                                               // avalon_st_adapter_021:out_0_data -> fifo_sink_01_in_csr_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_021_out_0_ready;                                              // fifo_sink_01_in_csr_agent:rdata_fifo_sink_ready -> avalon_st_adapter_021:out_0_ready
	wire   [0:0] avalon_st_adapter_021_out_0_error;                                              // avalon_st_adapter_021:out_0_error -> fifo_sink_01_in_csr_agent:rdata_fifo_sink_error
	wire         fifo_source_01_in_csr_agent_rdata_fifo_src_valid;                               // fifo_source_01_in_csr_agent:rdata_fifo_src_valid -> avalon_st_adapter_022:in_0_valid
	wire  [33:0] fifo_source_01_in_csr_agent_rdata_fifo_src_data;                                // fifo_source_01_in_csr_agent:rdata_fifo_src_data -> avalon_st_adapter_022:in_0_data
	wire         fifo_source_01_in_csr_agent_rdata_fifo_src_ready;                               // avalon_st_adapter_022:in_0_ready -> fifo_source_01_in_csr_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_022_out_0_valid;                                              // avalon_st_adapter_022:out_0_valid -> fifo_source_01_in_csr_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_022_out_0_data;                                               // avalon_st_adapter_022:out_0_data -> fifo_source_01_in_csr_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_022_out_0_ready;                                              // fifo_source_01_in_csr_agent:rdata_fifo_sink_ready -> avalon_st_adapter_022:out_0_ready
	wire   [0:0] avalon_st_adapter_022_out_0_error;                                              // avalon_st_adapter_022:out_0_error -> fifo_source_01_in_csr_agent:rdata_fifo_sink_error
	wire         fifo_sink_01_out_agent_rdata_fifo_src_valid;                                    // fifo_sink_01_out_agent:rdata_fifo_src_valid -> avalon_st_adapter_023:in_0_valid
	wire  [33:0] fifo_sink_01_out_agent_rdata_fifo_src_data;                                     // fifo_sink_01_out_agent:rdata_fifo_src_data -> avalon_st_adapter_023:in_0_data
	wire         fifo_sink_01_out_agent_rdata_fifo_src_ready;                                    // avalon_st_adapter_023:in_0_ready -> fifo_sink_01_out_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_023_out_0_valid;                                              // avalon_st_adapter_023:out_0_valid -> fifo_sink_01_out_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_023_out_0_data;                                               // avalon_st_adapter_023:out_0_data -> fifo_sink_01_out_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_023_out_0_ready;                                              // fifo_sink_01_out_agent:rdata_fifo_sink_ready -> avalon_st_adapter_023:out_0_ready
	wire   [0:0] avalon_st_adapter_023_out_0_error;                                              // avalon_st_adapter_023:out_0_error -> fifo_sink_01_out_agent:rdata_fifo_sink_error
	wire         data_mem_01_s1_agent_rdata_fifo_src_valid;                                      // data_mem_01_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter_024:in_0_valid
	wire  [33:0] data_mem_01_s1_agent_rdata_fifo_src_data;                                       // data_mem_01_s1_agent:rdata_fifo_src_data -> avalon_st_adapter_024:in_0_data
	wire         data_mem_01_s1_agent_rdata_fifo_src_ready;                                      // avalon_st_adapter_024:in_0_ready -> data_mem_01_s1_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_024_out_0_valid;                                              // avalon_st_adapter_024:out_0_valid -> data_mem_01_s1_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_024_out_0_data;                                               // avalon_st_adapter_024:out_0_data -> data_mem_01_s1_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_024_out_0_ready;                                              // data_mem_01_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_024:out_0_ready
	wire   [0:0] avalon_st_adapter_024_out_0_error;                                              // avalon_st_adapter_024:out_0_error -> data_mem_01_s1_agent:rdata_fifo_sink_error

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (16),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (16),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (1)
	) nios2_00_data_master_translator (
		.clk                    (clk_0_clk_clk),                                                           //                       clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset),                              //                     reset.reset
		.uav_address            (nios2_00_data_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount         (nios2_00_data_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read               (nios2_00_data_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write              (nios2_00_data_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest        (nios2_00_data_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid      (nios2_00_data_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable         (nios2_00_data_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata           (nios2_00_data_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata          (nios2_00_data_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock               (nios2_00_data_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess        (nios2_00_data_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address             (nios2_00_data_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest         (nios2_00_data_master_waitrequest),                                        //                          .waitrequest
		.av_byteenable          (nios2_00_data_master_byteenable),                                         //                          .byteenable
		.av_read                (nios2_00_data_master_read),                                               //                          .read
		.av_readdata            (nios2_00_data_master_readdata),                                           //                          .readdata
		.av_write               (nios2_00_data_master_write),                                              //                          .write
		.av_writedata           (nios2_00_data_master_writedata),                                          //                          .writedata
		.av_debugaccess         (nios2_00_data_master_debugaccess),                                        //                          .debugaccess
		.av_burstcount          (1'b1),                                                                    //               (terminated)
		.av_beginbursttransfer  (1'b0),                                                                    //               (terminated)
		.av_begintransfer       (1'b0),                                                                    //               (terminated)
		.av_chipselect          (1'b0),                                                                    //               (terminated)
		.av_readdatavalid       (),                                                                        //               (terminated)
		.av_lock                (1'b0),                                                                    //               (terminated)
		.uav_clken              (),                                                                        //               (terminated)
		.av_clken               (1'b1),                                                                    //               (terminated)
		.uav_response           (2'b00),                                                                   //               (terminated)
		.av_response            (),                                                                        //               (terminated)
		.uav_writeresponsevalid (1'b0),                                                                    //               (terminated)
		.av_writeresponsevalid  ()                                                                         //               (terminated)
	);

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (16),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (16),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (1)
	) nios2_01_data_master_translator (
		.clk                    (clk_0_clk_clk),                                                           //                       clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset),                              //                     reset.reset
		.uav_address            (nios2_01_data_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount         (nios2_01_data_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read               (nios2_01_data_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write              (nios2_01_data_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest        (nios2_01_data_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid      (nios2_01_data_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable         (nios2_01_data_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata           (nios2_01_data_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata          (nios2_01_data_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock               (nios2_01_data_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess        (nios2_01_data_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address             (nios2_01_data_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest         (nios2_01_data_master_waitrequest),                                        //                          .waitrequest
		.av_byteenable          (nios2_01_data_master_byteenable),                                         //                          .byteenable
		.av_read                (nios2_01_data_master_read),                                               //                          .read
		.av_readdata            (nios2_01_data_master_readdata),                                           //                          .readdata
		.av_write               (nios2_01_data_master_write),                                              //                          .write
		.av_writedata           (nios2_01_data_master_writedata),                                          //                          .writedata
		.av_debugaccess         (nios2_01_data_master_debugaccess),                                        //                          .debugaccess
		.av_burstcount          (1'b1),                                                                    //               (terminated)
		.av_beginbursttransfer  (1'b0),                                                                    //               (terminated)
		.av_begintransfer       (1'b0),                                                                    //               (terminated)
		.av_chipselect          (1'b0),                                                                    //               (terminated)
		.av_readdatavalid       (),                                                                        //               (terminated)
		.av_lock                (1'b0),                                                                    //               (terminated)
		.uav_clken              (),                                                                        //               (terminated)
		.av_clken               (1'b1),                                                                    //               (terminated)
		.uav_response           (2'b00),                                                                   //               (terminated)
		.av_response            (),                                                                        //               (terminated)
		.uav_writeresponsevalid (1'b0),                                                                    //               (terminated)
		.av_writeresponsevalid  ()                                                                         //               (terminated)
	);

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (16),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (16),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (1)
	) nios2_10_data_master_translator (
		.clk                    (clk_0_clk_clk),                                                           //                       clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset),                              //                     reset.reset
		.uav_address            (nios2_10_data_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount         (nios2_10_data_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read               (nios2_10_data_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write              (nios2_10_data_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest        (nios2_10_data_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid      (nios2_10_data_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable         (nios2_10_data_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata           (nios2_10_data_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata          (nios2_10_data_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock               (nios2_10_data_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess        (nios2_10_data_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address             (nios2_10_data_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest         (nios2_10_data_master_waitrequest),                                        //                          .waitrequest
		.av_byteenable          (nios2_10_data_master_byteenable),                                         //                          .byteenable
		.av_read                (nios2_10_data_master_read),                                               //                          .read
		.av_readdata            (nios2_10_data_master_readdata),                                           //                          .readdata
		.av_write               (nios2_10_data_master_write),                                              //                          .write
		.av_writedata           (nios2_10_data_master_writedata),                                          //                          .writedata
		.av_debugaccess         (nios2_10_data_master_debugaccess),                                        //                          .debugaccess
		.av_burstcount          (1'b1),                                                                    //               (terminated)
		.av_beginbursttransfer  (1'b0),                                                                    //               (terminated)
		.av_begintransfer       (1'b0),                                                                    //               (terminated)
		.av_chipselect          (1'b0),                                                                    //               (terminated)
		.av_readdatavalid       (),                                                                        //               (terminated)
		.av_lock                (1'b0),                                                                    //               (terminated)
		.uav_clken              (),                                                                        //               (terminated)
		.av_clken               (1'b1),                                                                    //               (terminated)
		.uav_response           (2'b00),                                                                   //               (terminated)
		.av_response            (),                                                                        //               (terminated)
		.uav_writeresponsevalid (1'b0),                                                                    //               (terminated)
		.av_writeresponsevalid  ()                                                                         //               (terminated)
	);

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (16),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (16),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (1)
	) nios2_11_data_master_translator (
		.clk                    (clk_0_clk_clk),                                                           //                       clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset),                              //                     reset.reset
		.uav_address            (nios2_11_data_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount         (nios2_11_data_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read               (nios2_11_data_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write              (nios2_11_data_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest        (nios2_11_data_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid      (nios2_11_data_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable         (nios2_11_data_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata           (nios2_11_data_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata          (nios2_11_data_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock               (nios2_11_data_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess        (nios2_11_data_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address             (nios2_11_data_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest         (nios2_11_data_master_waitrequest),                                        //                          .waitrequest
		.av_byteenable          (nios2_11_data_master_byteenable),                                         //                          .byteenable
		.av_read                (nios2_11_data_master_read),                                               //                          .read
		.av_readdata            (nios2_11_data_master_readdata),                                           //                          .readdata
		.av_write               (nios2_11_data_master_write),                                              //                          .write
		.av_writedata           (nios2_11_data_master_writedata),                                          //                          .writedata
		.av_debugaccess         (nios2_11_data_master_debugaccess),                                        //                          .debugaccess
		.av_burstcount          (1'b1),                                                                    //               (terminated)
		.av_beginbursttransfer  (1'b0),                                                                    //               (terminated)
		.av_begintransfer       (1'b0),                                                                    //               (terminated)
		.av_chipselect          (1'b0),                                                                    //               (terminated)
		.av_readdatavalid       (),                                                                        //               (terminated)
		.av_lock                (1'b0),                                                                    //               (terminated)
		.uav_clken              (),                                                                        //               (terminated)
		.av_clken               (1'b1),                                                                    //               (terminated)
		.uav_response           (2'b00),                                                                   //               (terminated)
		.av_response            (),                                                                        //               (terminated)
		.uav_writeresponsevalid (1'b0),                                                                    //               (terminated)
		.av_writeresponsevalid  ()                                                                         //               (terminated)
	);

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (16),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (16),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (0),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (1),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) nios2_11_instruction_master_translator (
		.clk                    (clk_0_clk_clk),                                                                  //                       clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset),                                     //                     reset.reset
		.uav_address            (nios2_11_instruction_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount         (nios2_11_instruction_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read               (nios2_11_instruction_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write              (nios2_11_instruction_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest        (nios2_11_instruction_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid      (nios2_11_instruction_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable         (nios2_11_instruction_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata           (nios2_11_instruction_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata          (nios2_11_instruction_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock               (nios2_11_instruction_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess        (nios2_11_instruction_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address             (nios2_11_instruction_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest         (nios2_11_instruction_master_waitrequest),                                        //                          .waitrequest
		.av_read                (nios2_11_instruction_master_read),                                               //                          .read
		.av_readdata            (nios2_11_instruction_master_readdata),                                           //                          .readdata
		.av_burstcount          (1'b1),                                                                           //               (terminated)
		.av_byteenable          (4'b1111),                                                                        //               (terminated)
		.av_beginbursttransfer  (1'b0),                                                                           //               (terminated)
		.av_begintransfer       (1'b0),                                                                           //               (terminated)
		.av_chipselect          (1'b0),                                                                           //               (terminated)
		.av_readdatavalid       (),                                                                               //               (terminated)
		.av_write               (1'b0),                                                                           //               (terminated)
		.av_writedata           (32'b00000000000000000000000000000000),                                           //               (terminated)
		.av_lock                (1'b0),                                                                           //               (terminated)
		.av_debugaccess         (1'b0),                                                                           //               (terminated)
		.uav_clken              (),                                                                               //               (terminated)
		.av_clken               (1'b1),                                                                           //               (terminated)
		.uav_response           (2'b00),                                                                          //               (terminated)
		.av_response            (),                                                                               //               (terminated)
		.uav_writeresponsevalid (1'b0),                                                                           //               (terminated)
		.av_writeresponsevalid  ()                                                                                //               (terminated)
	);

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (16),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (16),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (0),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (1),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) nios2_10_instruction_master_translator (
		.clk                    (clk_0_clk_clk),                                                                  //                       clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset),                                     //                     reset.reset
		.uav_address            (nios2_10_instruction_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount         (nios2_10_instruction_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read               (nios2_10_instruction_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write              (nios2_10_instruction_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest        (nios2_10_instruction_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid      (nios2_10_instruction_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable         (nios2_10_instruction_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata           (nios2_10_instruction_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata          (nios2_10_instruction_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock               (nios2_10_instruction_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess        (nios2_10_instruction_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address             (nios2_10_instruction_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest         (nios2_10_instruction_master_waitrequest),                                        //                          .waitrequest
		.av_read                (nios2_10_instruction_master_read),                                               //                          .read
		.av_readdata            (nios2_10_instruction_master_readdata),                                           //                          .readdata
		.av_burstcount          (1'b1),                                                                           //               (terminated)
		.av_byteenable          (4'b1111),                                                                        //               (terminated)
		.av_beginbursttransfer  (1'b0),                                                                           //               (terminated)
		.av_begintransfer       (1'b0),                                                                           //               (terminated)
		.av_chipselect          (1'b0),                                                                           //               (terminated)
		.av_readdatavalid       (),                                                                               //               (terminated)
		.av_write               (1'b0),                                                                           //               (terminated)
		.av_writedata           (32'b00000000000000000000000000000000),                                           //               (terminated)
		.av_lock                (1'b0),                                                                           //               (terminated)
		.av_debugaccess         (1'b0),                                                                           //               (terminated)
		.uav_clken              (),                                                                               //               (terminated)
		.av_clken               (1'b1),                                                                           //               (terminated)
		.uav_response           (2'b00),                                                                          //               (terminated)
		.av_response            (),                                                                               //               (terminated)
		.uav_writeresponsevalid (1'b0),                                                                           //               (terminated)
		.av_writeresponsevalid  ()                                                                                //               (terminated)
	);

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (16),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (16),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (0),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (1),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) nios2_01_instruction_master_translator (
		.clk                    (clk_0_clk_clk),                                                                  //                       clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset),                                     //                     reset.reset
		.uav_address            (nios2_01_instruction_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount         (nios2_01_instruction_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read               (nios2_01_instruction_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write              (nios2_01_instruction_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest        (nios2_01_instruction_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid      (nios2_01_instruction_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable         (nios2_01_instruction_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata           (nios2_01_instruction_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata          (nios2_01_instruction_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock               (nios2_01_instruction_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess        (nios2_01_instruction_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address             (nios2_01_instruction_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest         (nios2_01_instruction_master_waitrequest),                                        //                          .waitrequest
		.av_read                (nios2_01_instruction_master_read),                                               //                          .read
		.av_readdata            (nios2_01_instruction_master_readdata),                                           //                          .readdata
		.av_burstcount          (1'b1),                                                                           //               (terminated)
		.av_byteenable          (4'b1111),                                                                        //               (terminated)
		.av_beginbursttransfer  (1'b0),                                                                           //               (terminated)
		.av_begintransfer       (1'b0),                                                                           //               (terminated)
		.av_chipselect          (1'b0),                                                                           //               (terminated)
		.av_readdatavalid       (),                                                                               //               (terminated)
		.av_write               (1'b0),                                                                           //               (terminated)
		.av_writedata           (32'b00000000000000000000000000000000),                                           //               (terminated)
		.av_lock                (1'b0),                                                                           //               (terminated)
		.av_debugaccess         (1'b0),                                                                           //               (terminated)
		.uav_clken              (),                                                                               //               (terminated)
		.av_clken               (1'b1),                                                                           //               (terminated)
		.uav_response           (2'b00),                                                                          //               (terminated)
		.av_response            (),                                                                               //               (terminated)
		.uav_writeresponsevalid (1'b0),                                                                           //               (terminated)
		.av_writeresponsevalid  ()                                                                                //               (terminated)
	);

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (16),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (16),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (0),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (1),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) nios2_00_instruction_master_translator (
		.clk                    (clk_0_clk_clk),                                                                  //                       clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset),                                     //                     reset.reset
		.uav_address            (nios2_00_instruction_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount         (nios2_00_instruction_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read               (nios2_00_instruction_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write              (nios2_00_instruction_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest        (nios2_00_instruction_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid      (nios2_00_instruction_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable         (nios2_00_instruction_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata           (nios2_00_instruction_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata          (nios2_00_instruction_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock               (nios2_00_instruction_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess        (nios2_00_instruction_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address             (nios2_00_instruction_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest         (nios2_00_instruction_master_waitrequest),                                        //                          .waitrequest
		.av_read                (nios2_00_instruction_master_read),                                               //                          .read
		.av_readdata            (nios2_00_instruction_master_readdata),                                           //                          .readdata
		.av_burstcount          (1'b1),                                                                           //               (terminated)
		.av_byteenable          (4'b1111),                                                                        //               (terminated)
		.av_beginbursttransfer  (1'b0),                                                                           //               (terminated)
		.av_begintransfer       (1'b0),                                                                           //               (terminated)
		.av_chipselect          (1'b0),                                                                           //               (terminated)
		.av_readdatavalid       (),                                                                               //               (terminated)
		.av_write               (1'b0),                                                                           //               (terminated)
		.av_writedata           (32'b00000000000000000000000000000000),                                           //               (terminated)
		.av_lock                (1'b0),                                                                           //               (terminated)
		.av_debugaccess         (1'b0),                                                                           //               (terminated)
		.uav_clken              (),                                                                               //               (terminated)
		.av_clken               (1'b1),                                                                           //               (terminated)
		.uav_response           (2'b00),                                                                          //               (terminated)
		.av_response            (),                                                                               //               (terminated)
		.uav_writeresponsevalid (1'b0),                                                                           //               (terminated)
		.av_writeresponsevalid  ()                                                                                //               (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) jtag_uart_0_avalon_jtag_slave_translator (
		.clk                    (clk_0_clk_clk),                                        //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset),           //                    reset.reset
		.uav_address            (jtag_uart_0_avalon_jtag_slave_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (jtag_uart_0_avalon_jtag_slave_agent_m0_burstcount),    //                         .burstcount
		.uav_read               (jtag_uart_0_avalon_jtag_slave_agent_m0_read),          //                         .read
		.uav_write              (jtag_uart_0_avalon_jtag_slave_agent_m0_write),         //                         .write
		.uav_waitrequest        (jtag_uart_0_avalon_jtag_slave_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (jtag_uart_0_avalon_jtag_slave_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (jtag_uart_0_avalon_jtag_slave_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata           (jtag_uart_0_avalon_jtag_slave_agent_m0_readdata),      //                         .readdata
		.uav_writedata          (jtag_uart_0_avalon_jtag_slave_agent_m0_writedata),     //                         .writedata
		.uav_lock               (jtag_uart_0_avalon_jtag_slave_agent_m0_lock),          //                         .lock
		.uav_debugaccess        (jtag_uart_0_avalon_jtag_slave_agent_m0_debugaccess),   //                         .debugaccess
		.av_address             (jtag_uart_0_avalon_jtag_slave_address),                //      avalon_anti_slave_0.address
		.av_write               (jtag_uart_0_avalon_jtag_slave_write),                  //                         .write
		.av_read                (jtag_uart_0_avalon_jtag_slave_read),                   //                         .read
		.av_readdata            (jtag_uart_0_avalon_jtag_slave_readdata),               //                         .readdata
		.av_writedata           (jtag_uart_0_avalon_jtag_slave_writedata),              //                         .writedata
		.av_waitrequest         (jtag_uart_0_avalon_jtag_slave_waitrequest),            //                         .waitrequest
		.av_chipselect          (jtag_uart_0_avalon_jtag_slave_chipselect),             //                         .chipselect
		.av_begintransfer       (),                                                     //              (terminated)
		.av_beginbursttransfer  (),                                                     //              (terminated)
		.av_burstcount          (),                                                     //              (terminated)
		.av_byteenable          (),                                                     //              (terminated)
		.av_readdatavalid       (1'b0),                                                 //              (terminated)
		.av_writebyteenable     (),                                                     //              (terminated)
		.av_lock                (),                                                     //              (terminated)
		.av_clken               (),                                                     //              (terminated)
		.uav_clken              (1'b0),                                                 //              (terminated)
		.av_debugaccess         (),                                                     //              (terminated)
		.av_outputenable        (),                                                     //              (terminated)
		.uav_response           (),                                                     //              (terminated)
		.av_response            (2'b00),                                                //              (terminated)
		.uav_writeresponsevalid (),                                                     //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                  //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (9),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) nios2_00_debug_mem_slave_translator (
		.clk                    (clk_0_clk_clk),                                   //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset),      //                    reset.reset
		.uav_address            (nios2_00_debug_mem_slave_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (nios2_00_debug_mem_slave_agent_m0_burstcount),    //                         .burstcount
		.uav_read               (nios2_00_debug_mem_slave_agent_m0_read),          //                         .read
		.uav_write              (nios2_00_debug_mem_slave_agent_m0_write),         //                         .write
		.uav_waitrequest        (nios2_00_debug_mem_slave_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (nios2_00_debug_mem_slave_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (nios2_00_debug_mem_slave_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata           (nios2_00_debug_mem_slave_agent_m0_readdata),      //                         .readdata
		.uav_writedata          (nios2_00_debug_mem_slave_agent_m0_writedata),     //                         .writedata
		.uav_lock               (nios2_00_debug_mem_slave_agent_m0_lock),          //                         .lock
		.uav_debugaccess        (nios2_00_debug_mem_slave_agent_m0_debugaccess),   //                         .debugaccess
		.av_address             (nios2_00_debug_mem_slave_address),                //      avalon_anti_slave_0.address
		.av_write               (nios2_00_debug_mem_slave_write),                  //                         .write
		.av_read                (nios2_00_debug_mem_slave_read),                   //                         .read
		.av_readdata            (nios2_00_debug_mem_slave_readdata),               //                         .readdata
		.av_writedata           (nios2_00_debug_mem_slave_writedata),              //                         .writedata
		.av_byteenable          (nios2_00_debug_mem_slave_byteenable),             //                         .byteenable
		.av_waitrequest         (nios2_00_debug_mem_slave_waitrequest),            //                         .waitrequest
		.av_debugaccess         (nios2_00_debug_mem_slave_debugaccess),            //                         .debugaccess
		.av_begintransfer       (),                                                //              (terminated)
		.av_beginbursttransfer  (),                                                //              (terminated)
		.av_burstcount          (),                                                //              (terminated)
		.av_readdatavalid       (1'b0),                                            //              (terminated)
		.av_writebyteenable     (),                                                //              (terminated)
		.av_lock                (),                                                //              (terminated)
		.av_chipselect          (),                                                //              (terminated)
		.av_clken               (),                                                //              (terminated)
		.uav_clken              (1'b0),                                            //              (terminated)
		.av_outputenable        (),                                                //              (terminated)
		.uav_response           (),                                                //              (terminated)
		.av_response            (2'b00),                                           //              (terminated)
		.uav_writeresponsevalid (),                                                //              (terminated)
		.av_writeresponsevalid  (1'b0)                                             //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) fifo_source_00_in_translator (
		.clk                    (clk_0_clk_clk),                              //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (fifo_source_00_in_agent_m0_address),         // avalon_universal_slave_0.address
		.uav_burstcount         (fifo_source_00_in_agent_m0_burstcount),      //                         .burstcount
		.uav_read               (fifo_source_00_in_agent_m0_read),            //                         .read
		.uav_write              (fifo_source_00_in_agent_m0_write),           //                         .write
		.uav_waitrequest        (fifo_source_00_in_agent_m0_waitrequest),     //                         .waitrequest
		.uav_readdatavalid      (fifo_source_00_in_agent_m0_readdatavalid),   //                         .readdatavalid
		.uav_byteenable         (fifo_source_00_in_agent_m0_byteenable),      //                         .byteenable
		.uav_readdata           (fifo_source_00_in_agent_m0_readdata),        //                         .readdata
		.uav_writedata          (fifo_source_00_in_agent_m0_writedata),       //                         .writedata
		.uav_lock               (fifo_source_00_in_agent_m0_lock),            //                         .lock
		.uav_debugaccess        (fifo_source_00_in_agent_m0_debugaccess),     //                         .debugaccess
		.av_address             (fifo_source_00_in_address),                  //      avalon_anti_slave_0.address
		.av_write               (fifo_source_00_in_write),                    //                         .write
		.av_writedata           (fifo_source_00_in_writedata),                //                         .writedata
		.av_waitrequest         (fifo_source_00_in_waitrequest),              //                         .waitrequest
		.av_read                (),                                           //              (terminated)
		.av_readdata            (32'b11011110101011011101111010101101),       //              (terminated)
		.av_begintransfer       (),                                           //              (terminated)
		.av_beginbursttransfer  (),                                           //              (terminated)
		.av_burstcount          (),                                           //              (terminated)
		.av_byteenable          (),                                           //              (terminated)
		.av_readdatavalid       (1'b0),                                       //              (terminated)
		.av_writebyteenable     (),                                           //              (terminated)
		.av_lock                (),                                           //              (terminated)
		.av_chipselect          (),                                           //              (terminated)
		.av_clken               (),                                           //              (terminated)
		.uav_clken              (1'b0),                                       //              (terminated)
		.av_debugaccess         (),                                           //              (terminated)
		.av_outputenable        (),                                           //              (terminated)
		.uav_response           (),                                           //              (terminated)
		.av_response            (2'b00),                                      //              (terminated)
		.uav_writeresponsevalid (),                                           //              (terminated)
		.av_writeresponsevalid  (1'b0)                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) fifo_sink_00_in_csr_translator (
		.clk                    (clk_0_clk_clk),                              //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (fifo_sink_00_in_csr_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (fifo_sink_00_in_csr_agent_m0_burstcount),    //                         .burstcount
		.uav_read               (fifo_sink_00_in_csr_agent_m0_read),          //                         .read
		.uav_write              (fifo_sink_00_in_csr_agent_m0_write),         //                         .write
		.uav_waitrequest        (fifo_sink_00_in_csr_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (fifo_sink_00_in_csr_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (fifo_sink_00_in_csr_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata           (fifo_sink_00_in_csr_agent_m0_readdata),      //                         .readdata
		.uav_writedata          (fifo_sink_00_in_csr_agent_m0_writedata),     //                         .writedata
		.uav_lock               (fifo_sink_00_in_csr_agent_m0_lock),          //                         .lock
		.uav_debugaccess        (fifo_sink_00_in_csr_agent_m0_debugaccess),   //                         .debugaccess
		.av_address             (fifo_sink_00_in_csr_address),                //      avalon_anti_slave_0.address
		.av_write               (fifo_sink_00_in_csr_write),                  //                         .write
		.av_read                (fifo_sink_00_in_csr_read),                   //                         .read
		.av_readdata            (fifo_sink_00_in_csr_readdata),               //                         .readdata
		.av_writedata           (fifo_sink_00_in_csr_writedata),              //                         .writedata
		.av_begintransfer       (),                                           //              (terminated)
		.av_beginbursttransfer  (),                                           //              (terminated)
		.av_burstcount          (),                                           //              (terminated)
		.av_byteenable          (),                                           //              (terminated)
		.av_readdatavalid       (1'b0),                                       //              (terminated)
		.av_waitrequest         (1'b0),                                       //              (terminated)
		.av_writebyteenable     (),                                           //              (terminated)
		.av_lock                (),                                           //              (terminated)
		.av_chipselect          (),                                           //              (terminated)
		.av_clken               (),                                           //              (terminated)
		.uav_clken              (1'b0),                                       //              (terminated)
		.av_debugaccess         (),                                           //              (terminated)
		.av_outputenable        (),                                           //              (terminated)
		.uav_response           (),                                           //              (terminated)
		.av_response            (2'b00),                                      //              (terminated)
		.uav_writeresponsevalid (),                                           //              (terminated)
		.av_writeresponsevalid  (1'b0)                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) fifo_source_00_in_csr_translator (
		.clk                    (clk_0_clk_clk),                                //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset),   //                    reset.reset
		.uav_address            (fifo_source_00_in_csr_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (fifo_source_00_in_csr_agent_m0_burstcount),    //                         .burstcount
		.uav_read               (fifo_source_00_in_csr_agent_m0_read),          //                         .read
		.uav_write              (fifo_source_00_in_csr_agent_m0_write),         //                         .write
		.uav_waitrequest        (fifo_source_00_in_csr_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (fifo_source_00_in_csr_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (fifo_source_00_in_csr_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata           (fifo_source_00_in_csr_agent_m0_readdata),      //                         .readdata
		.uav_writedata          (fifo_source_00_in_csr_agent_m0_writedata),     //                         .writedata
		.uav_lock               (fifo_source_00_in_csr_agent_m0_lock),          //                         .lock
		.uav_debugaccess        (fifo_source_00_in_csr_agent_m0_debugaccess),   //                         .debugaccess
		.av_address             (fifo_source_00_in_csr_address),                //      avalon_anti_slave_0.address
		.av_write               (fifo_source_00_in_csr_write),                  //                         .write
		.av_read                (fifo_source_00_in_csr_read),                   //                         .read
		.av_readdata            (fifo_source_00_in_csr_readdata),               //                         .readdata
		.av_writedata           (fifo_source_00_in_csr_writedata),              //                         .writedata
		.av_begintransfer       (),                                             //              (terminated)
		.av_beginbursttransfer  (),                                             //              (terminated)
		.av_burstcount          (),                                             //              (terminated)
		.av_byteenable          (),                                             //              (terminated)
		.av_readdatavalid       (1'b0),                                         //              (terminated)
		.av_waitrequest         (1'b0),                                         //              (terminated)
		.av_writebyteenable     (),                                             //              (terminated)
		.av_lock                (),                                             //              (terminated)
		.av_chipselect          (),                                             //              (terminated)
		.av_clken               (),                                             //              (terminated)
		.uav_clken              (1'b0),                                         //              (terminated)
		.av_debugaccess         (),                                             //              (terminated)
		.av_outputenable        (),                                             //              (terminated)
		.uav_response           (),                                             //              (terminated)
		.av_response            (2'b00),                                        //              (terminated)
		.uav_writeresponsevalid (),                                             //              (terminated)
		.av_writeresponsevalid  (1'b0)                                          //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) fifo_sink_00_out_translator (
		.clk                    (clk_0_clk_clk),                              //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (fifo_sink_00_out_agent_m0_address),          // avalon_universal_slave_0.address
		.uav_burstcount         (fifo_sink_00_out_agent_m0_burstcount),       //                         .burstcount
		.uav_read               (fifo_sink_00_out_agent_m0_read),             //                         .read
		.uav_write              (fifo_sink_00_out_agent_m0_write),            //                         .write
		.uav_waitrequest        (fifo_sink_00_out_agent_m0_waitrequest),      //                         .waitrequest
		.uav_readdatavalid      (fifo_sink_00_out_agent_m0_readdatavalid),    //                         .readdatavalid
		.uav_byteenable         (fifo_sink_00_out_agent_m0_byteenable),       //                         .byteenable
		.uav_readdata           (fifo_sink_00_out_agent_m0_readdata),         //                         .readdata
		.uav_writedata          (fifo_sink_00_out_agent_m0_writedata),        //                         .writedata
		.uav_lock               (fifo_sink_00_out_agent_m0_lock),             //                         .lock
		.uav_debugaccess        (fifo_sink_00_out_agent_m0_debugaccess),      //                         .debugaccess
		.av_address             (fifo_sink_00_out_address),                   //      avalon_anti_slave_0.address
		.av_read                (fifo_sink_00_out_read),                      //                         .read
		.av_readdata            (fifo_sink_00_out_readdata),                  //                         .readdata
		.av_waitrequest         (fifo_sink_00_out_waitrequest),               //                         .waitrequest
		.av_write               (),                                           //              (terminated)
		.av_writedata           (),                                           //              (terminated)
		.av_begintransfer       (),                                           //              (terminated)
		.av_beginbursttransfer  (),                                           //              (terminated)
		.av_burstcount          (),                                           //              (terminated)
		.av_byteenable          (),                                           //              (terminated)
		.av_readdatavalid       (1'b0),                                       //              (terminated)
		.av_writebyteenable     (),                                           //              (terminated)
		.av_lock                (),                                           //              (terminated)
		.av_chipselect          (),                                           //              (terminated)
		.av_clken               (),                                           //              (terminated)
		.uav_clken              (1'b0),                                       //              (terminated)
		.av_debugaccess         (),                                           //              (terminated)
		.av_outputenable        (),                                           //              (terminated)
		.uav_response           (),                                           //              (terminated)
		.av_response            (2'b00),                                      //              (terminated)
		.uav_writeresponsevalid (),                                           //              (terminated)
		.av_writeresponsevalid  (1'b0)                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (12),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) data_mem_00_s1_translator (
		.clk                    (clk_0_clk_clk),                              //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (data_mem_00_s1_agent_m0_address),            // avalon_universal_slave_0.address
		.uav_burstcount         (data_mem_00_s1_agent_m0_burstcount),         //                         .burstcount
		.uav_read               (data_mem_00_s1_agent_m0_read),               //                         .read
		.uav_write              (data_mem_00_s1_agent_m0_write),              //                         .write
		.uav_waitrequest        (data_mem_00_s1_agent_m0_waitrequest),        //                         .waitrequest
		.uav_readdatavalid      (data_mem_00_s1_agent_m0_readdatavalid),      //                         .readdatavalid
		.uav_byteenable         (data_mem_00_s1_agent_m0_byteenable),         //                         .byteenable
		.uav_readdata           (data_mem_00_s1_agent_m0_readdata),           //                         .readdata
		.uav_writedata          (data_mem_00_s1_agent_m0_writedata),          //                         .writedata
		.uav_lock               (data_mem_00_s1_agent_m0_lock),               //                         .lock
		.uav_debugaccess        (data_mem_00_s1_agent_m0_debugaccess),        //                         .debugaccess
		.av_address             (data_mem_00_s1_address),                     //      avalon_anti_slave_0.address
		.av_write               (data_mem_00_s1_write),                       //                         .write
		.av_readdata            (data_mem_00_s1_readdata),                    //                         .readdata
		.av_writedata           (data_mem_00_s1_writedata),                   //                         .writedata
		.av_byteenable          (data_mem_00_s1_byteenable),                  //                         .byteenable
		.av_chipselect          (data_mem_00_s1_chipselect),                  //                         .chipselect
		.av_clken               (data_mem_00_s1_clken),                       //                         .clken
		.av_read                (),                                           //              (terminated)
		.av_begintransfer       (),                                           //              (terminated)
		.av_beginbursttransfer  (),                                           //              (terminated)
		.av_burstcount          (),                                           //              (terminated)
		.av_readdatavalid       (1'b0),                                       //              (terminated)
		.av_waitrequest         (1'b0),                                       //              (terminated)
		.av_writebyteenable     (),                                           //              (terminated)
		.av_lock                (),                                           //              (terminated)
		.uav_clken              (1'b0),                                       //              (terminated)
		.av_debugaccess         (),                                           //              (terminated)
		.av_outputenable        (),                                           //              (terminated)
		.uav_response           (),                                           //              (terminated)
		.av_response            (2'b00),                                      //              (terminated)
		.uav_writeresponsevalid (),                                           //              (terminated)
		.av_writeresponsevalid  (1'b0)                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (9),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) nios2_11_debug_mem_slave_translator (
		.clk                    (clk_0_clk_clk),                                   //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset),      //                    reset.reset
		.uav_address            (nios2_11_debug_mem_slave_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (nios2_11_debug_mem_slave_agent_m0_burstcount),    //                         .burstcount
		.uav_read               (nios2_11_debug_mem_slave_agent_m0_read),          //                         .read
		.uav_write              (nios2_11_debug_mem_slave_agent_m0_write),         //                         .write
		.uav_waitrequest        (nios2_11_debug_mem_slave_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (nios2_11_debug_mem_slave_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (nios2_11_debug_mem_slave_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata           (nios2_11_debug_mem_slave_agent_m0_readdata),      //                         .readdata
		.uav_writedata          (nios2_11_debug_mem_slave_agent_m0_writedata),     //                         .writedata
		.uav_lock               (nios2_11_debug_mem_slave_agent_m0_lock),          //                         .lock
		.uav_debugaccess        (nios2_11_debug_mem_slave_agent_m0_debugaccess),   //                         .debugaccess
		.av_address             (nios2_11_debug_mem_slave_address),                //      avalon_anti_slave_0.address
		.av_write               (nios2_11_debug_mem_slave_write),                  //                         .write
		.av_read                (nios2_11_debug_mem_slave_read),                   //                         .read
		.av_readdata            (nios2_11_debug_mem_slave_readdata),               //                         .readdata
		.av_writedata           (nios2_11_debug_mem_slave_writedata),              //                         .writedata
		.av_byteenable          (nios2_11_debug_mem_slave_byteenable),             //                         .byteenable
		.av_waitrequest         (nios2_11_debug_mem_slave_waitrequest),            //                         .waitrequest
		.av_debugaccess         (nios2_11_debug_mem_slave_debugaccess),            //                         .debugaccess
		.av_begintransfer       (),                                                //              (terminated)
		.av_beginbursttransfer  (),                                                //              (terminated)
		.av_burstcount          (),                                                //              (terminated)
		.av_readdatavalid       (1'b0),                                            //              (terminated)
		.av_writebyteenable     (),                                                //              (terminated)
		.av_lock                (),                                                //              (terminated)
		.av_chipselect          (),                                                //              (terminated)
		.av_clken               (),                                                //              (terminated)
		.uav_clken              (1'b0),                                            //              (terminated)
		.av_outputenable        (),                                                //              (terminated)
		.uav_response           (),                                                //              (terminated)
		.av_response            (2'b00),                                           //              (terminated)
		.uav_writeresponsevalid (),                                                //              (terminated)
		.av_writeresponsevalid  (1'b0)                                             //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) fifo_source_11_in_translator (
		.clk                    (clk_0_clk_clk),                              //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (fifo_source_11_in_agent_m0_address),         // avalon_universal_slave_0.address
		.uav_burstcount         (fifo_source_11_in_agent_m0_burstcount),      //                         .burstcount
		.uav_read               (fifo_source_11_in_agent_m0_read),            //                         .read
		.uav_write              (fifo_source_11_in_agent_m0_write),           //                         .write
		.uav_waitrequest        (fifo_source_11_in_agent_m0_waitrequest),     //                         .waitrequest
		.uav_readdatavalid      (fifo_source_11_in_agent_m0_readdatavalid),   //                         .readdatavalid
		.uav_byteenable         (fifo_source_11_in_agent_m0_byteenable),      //                         .byteenable
		.uav_readdata           (fifo_source_11_in_agent_m0_readdata),        //                         .readdata
		.uav_writedata          (fifo_source_11_in_agent_m0_writedata),       //                         .writedata
		.uav_lock               (fifo_source_11_in_agent_m0_lock),            //                         .lock
		.uav_debugaccess        (fifo_source_11_in_agent_m0_debugaccess),     //                         .debugaccess
		.av_address             (fifo_source_11_in_address),                  //      avalon_anti_slave_0.address
		.av_write               (fifo_source_11_in_write),                    //                         .write
		.av_writedata           (fifo_source_11_in_writedata),                //                         .writedata
		.av_waitrequest         (fifo_source_11_in_waitrequest),              //                         .waitrequest
		.av_read                (),                                           //              (terminated)
		.av_readdata            (32'b11011110101011011101111010101101),       //              (terminated)
		.av_begintransfer       (),                                           //              (terminated)
		.av_beginbursttransfer  (),                                           //              (terminated)
		.av_burstcount          (),                                           //              (terminated)
		.av_byteenable          (),                                           //              (terminated)
		.av_readdatavalid       (1'b0),                                       //              (terminated)
		.av_writebyteenable     (),                                           //              (terminated)
		.av_lock                (),                                           //              (terminated)
		.av_chipselect          (),                                           //              (terminated)
		.av_clken               (),                                           //              (terminated)
		.uav_clken              (1'b0),                                       //              (terminated)
		.av_debugaccess         (),                                           //              (terminated)
		.av_outputenable        (),                                           //              (terminated)
		.uav_response           (),                                           //              (terminated)
		.av_response            (2'b00),                                      //              (terminated)
		.uav_writeresponsevalid (),                                           //              (terminated)
		.av_writeresponsevalid  (1'b0)                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) fifo_sink_11_in_csr_translator (
		.clk                    (clk_0_clk_clk),                              //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (fifo_sink_11_in_csr_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (fifo_sink_11_in_csr_agent_m0_burstcount),    //                         .burstcount
		.uav_read               (fifo_sink_11_in_csr_agent_m0_read),          //                         .read
		.uav_write              (fifo_sink_11_in_csr_agent_m0_write),         //                         .write
		.uav_waitrequest        (fifo_sink_11_in_csr_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (fifo_sink_11_in_csr_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (fifo_sink_11_in_csr_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata           (fifo_sink_11_in_csr_agent_m0_readdata),      //                         .readdata
		.uav_writedata          (fifo_sink_11_in_csr_agent_m0_writedata),     //                         .writedata
		.uav_lock               (fifo_sink_11_in_csr_agent_m0_lock),          //                         .lock
		.uav_debugaccess        (fifo_sink_11_in_csr_agent_m0_debugaccess),   //                         .debugaccess
		.av_address             (fifo_sink_11_in_csr_address),                //      avalon_anti_slave_0.address
		.av_write               (fifo_sink_11_in_csr_write),                  //                         .write
		.av_read                (fifo_sink_11_in_csr_read),                   //                         .read
		.av_readdata            (fifo_sink_11_in_csr_readdata),               //                         .readdata
		.av_writedata           (fifo_sink_11_in_csr_writedata),              //                         .writedata
		.av_begintransfer       (),                                           //              (terminated)
		.av_beginbursttransfer  (),                                           //              (terminated)
		.av_burstcount          (),                                           //              (terminated)
		.av_byteenable          (),                                           //              (terminated)
		.av_readdatavalid       (1'b0),                                       //              (terminated)
		.av_waitrequest         (1'b0),                                       //              (terminated)
		.av_writebyteenable     (),                                           //              (terminated)
		.av_lock                (),                                           //              (terminated)
		.av_chipselect          (),                                           //              (terminated)
		.av_clken               (),                                           //              (terminated)
		.uav_clken              (1'b0),                                       //              (terminated)
		.av_debugaccess         (),                                           //              (terminated)
		.av_outputenable        (),                                           //              (terminated)
		.uav_response           (),                                           //              (terminated)
		.av_response            (2'b00),                                      //              (terminated)
		.uav_writeresponsevalid (),                                           //              (terminated)
		.av_writeresponsevalid  (1'b0)                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) fifo_source_11_in_csr_translator (
		.clk                    (clk_0_clk_clk),                                //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset),   //                    reset.reset
		.uav_address            (fifo_source_11_in_csr_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (fifo_source_11_in_csr_agent_m0_burstcount),    //                         .burstcount
		.uav_read               (fifo_source_11_in_csr_agent_m0_read),          //                         .read
		.uav_write              (fifo_source_11_in_csr_agent_m0_write),         //                         .write
		.uav_waitrequest        (fifo_source_11_in_csr_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (fifo_source_11_in_csr_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (fifo_source_11_in_csr_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata           (fifo_source_11_in_csr_agent_m0_readdata),      //                         .readdata
		.uav_writedata          (fifo_source_11_in_csr_agent_m0_writedata),     //                         .writedata
		.uav_lock               (fifo_source_11_in_csr_agent_m0_lock),          //                         .lock
		.uav_debugaccess        (fifo_source_11_in_csr_agent_m0_debugaccess),   //                         .debugaccess
		.av_address             (fifo_source_11_in_csr_address),                //      avalon_anti_slave_0.address
		.av_write               (fifo_source_11_in_csr_write),                  //                         .write
		.av_read                (fifo_source_11_in_csr_read),                   //                         .read
		.av_readdata            (fifo_source_11_in_csr_readdata),               //                         .readdata
		.av_writedata           (fifo_source_11_in_csr_writedata),              //                         .writedata
		.av_begintransfer       (),                                             //              (terminated)
		.av_beginbursttransfer  (),                                             //              (terminated)
		.av_burstcount          (),                                             //              (terminated)
		.av_byteenable          (),                                             //              (terminated)
		.av_readdatavalid       (1'b0),                                         //              (terminated)
		.av_waitrequest         (1'b0),                                         //              (terminated)
		.av_writebyteenable     (),                                             //              (terminated)
		.av_lock                (),                                             //              (terminated)
		.av_chipselect          (),                                             //              (terminated)
		.av_clken               (),                                             //              (terminated)
		.uav_clken              (1'b0),                                         //              (terminated)
		.av_debugaccess         (),                                             //              (terminated)
		.av_outputenable        (),                                             //              (terminated)
		.uav_response           (),                                             //              (terminated)
		.av_response            (2'b00),                                        //              (terminated)
		.uav_writeresponsevalid (),                                             //              (terminated)
		.av_writeresponsevalid  (1'b0)                                          //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) fifo_sink_11_out_translator (
		.clk                    (clk_0_clk_clk),                              //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (fifo_sink_11_out_agent_m0_address),          // avalon_universal_slave_0.address
		.uav_burstcount         (fifo_sink_11_out_agent_m0_burstcount),       //                         .burstcount
		.uav_read               (fifo_sink_11_out_agent_m0_read),             //                         .read
		.uav_write              (fifo_sink_11_out_agent_m0_write),            //                         .write
		.uav_waitrequest        (fifo_sink_11_out_agent_m0_waitrequest),      //                         .waitrequest
		.uav_readdatavalid      (fifo_sink_11_out_agent_m0_readdatavalid),    //                         .readdatavalid
		.uav_byteenable         (fifo_sink_11_out_agent_m0_byteenable),       //                         .byteenable
		.uav_readdata           (fifo_sink_11_out_agent_m0_readdata),         //                         .readdata
		.uav_writedata          (fifo_sink_11_out_agent_m0_writedata),        //                         .writedata
		.uav_lock               (fifo_sink_11_out_agent_m0_lock),             //                         .lock
		.uav_debugaccess        (fifo_sink_11_out_agent_m0_debugaccess),      //                         .debugaccess
		.av_address             (fifo_sink_11_out_address),                   //      avalon_anti_slave_0.address
		.av_read                (fifo_sink_11_out_read),                      //                         .read
		.av_readdata            (fifo_sink_11_out_readdata),                  //                         .readdata
		.av_waitrequest         (fifo_sink_11_out_waitrequest),               //                         .waitrequest
		.av_write               (),                                           //              (terminated)
		.av_writedata           (),                                           //              (terminated)
		.av_begintransfer       (),                                           //              (terminated)
		.av_beginbursttransfer  (),                                           //              (terminated)
		.av_burstcount          (),                                           //              (terminated)
		.av_byteenable          (),                                           //              (terminated)
		.av_readdatavalid       (1'b0),                                       //              (terminated)
		.av_writebyteenable     (),                                           //              (terminated)
		.av_lock                (),                                           //              (terminated)
		.av_chipselect          (),                                           //              (terminated)
		.av_clken               (),                                           //              (terminated)
		.uav_clken              (1'b0),                                       //              (terminated)
		.av_debugaccess         (),                                           //              (terminated)
		.av_outputenable        (),                                           //              (terminated)
		.uav_response           (),                                           //              (terminated)
		.av_response            (2'b00),                                      //              (terminated)
		.uav_writeresponsevalid (),                                           //              (terminated)
		.av_writeresponsevalid  (1'b0)                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (12),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) data_mem_11_s1_translator (
		.clk                    (clk_0_clk_clk),                              //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (data_mem_11_s1_agent_m0_address),            // avalon_universal_slave_0.address
		.uav_burstcount         (data_mem_11_s1_agent_m0_burstcount),         //                         .burstcount
		.uav_read               (data_mem_11_s1_agent_m0_read),               //                         .read
		.uav_write              (data_mem_11_s1_agent_m0_write),              //                         .write
		.uav_waitrequest        (data_mem_11_s1_agent_m0_waitrequest),        //                         .waitrequest
		.uav_readdatavalid      (data_mem_11_s1_agent_m0_readdatavalid),      //                         .readdatavalid
		.uav_byteenable         (data_mem_11_s1_agent_m0_byteenable),         //                         .byteenable
		.uav_readdata           (data_mem_11_s1_agent_m0_readdata),           //                         .readdata
		.uav_writedata          (data_mem_11_s1_agent_m0_writedata),          //                         .writedata
		.uav_lock               (data_mem_11_s1_agent_m0_lock),               //                         .lock
		.uav_debugaccess        (data_mem_11_s1_agent_m0_debugaccess),        //                         .debugaccess
		.av_address             (data_mem_11_s1_address),                     //      avalon_anti_slave_0.address
		.av_write               (data_mem_11_s1_write),                       //                         .write
		.av_readdata            (data_mem_11_s1_readdata),                    //                         .readdata
		.av_writedata           (data_mem_11_s1_writedata),                   //                         .writedata
		.av_byteenable          (data_mem_11_s1_byteenable),                  //                         .byteenable
		.av_chipselect          (data_mem_11_s1_chipselect),                  //                         .chipselect
		.av_clken               (data_mem_11_s1_clken),                       //                         .clken
		.av_read                (),                                           //              (terminated)
		.av_begintransfer       (),                                           //              (terminated)
		.av_beginbursttransfer  (),                                           //              (terminated)
		.av_burstcount          (),                                           //              (terminated)
		.av_readdatavalid       (1'b0),                                       //              (terminated)
		.av_waitrequest         (1'b0),                                       //              (terminated)
		.av_writebyteenable     (),                                           //              (terminated)
		.av_lock                (),                                           //              (terminated)
		.uav_clken              (1'b0),                                       //              (terminated)
		.av_debugaccess         (),                                           //              (terminated)
		.av_outputenable        (),                                           //              (terminated)
		.uav_response           (),                                           //              (terminated)
		.av_response            (2'b00),                                      //              (terminated)
		.uav_writeresponsevalid (),                                           //              (terminated)
		.av_writeresponsevalid  (1'b0)                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (9),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) nios2_10_debug_mem_slave_translator (
		.clk                    (clk_0_clk_clk),                                   //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset),      //                    reset.reset
		.uav_address            (nios2_10_debug_mem_slave_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (nios2_10_debug_mem_slave_agent_m0_burstcount),    //                         .burstcount
		.uav_read               (nios2_10_debug_mem_slave_agent_m0_read),          //                         .read
		.uav_write              (nios2_10_debug_mem_slave_agent_m0_write),         //                         .write
		.uav_waitrequest        (nios2_10_debug_mem_slave_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (nios2_10_debug_mem_slave_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (nios2_10_debug_mem_slave_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata           (nios2_10_debug_mem_slave_agent_m0_readdata),      //                         .readdata
		.uav_writedata          (nios2_10_debug_mem_slave_agent_m0_writedata),     //                         .writedata
		.uav_lock               (nios2_10_debug_mem_slave_agent_m0_lock),          //                         .lock
		.uav_debugaccess        (nios2_10_debug_mem_slave_agent_m0_debugaccess),   //                         .debugaccess
		.av_address             (nios2_10_debug_mem_slave_address),                //      avalon_anti_slave_0.address
		.av_write               (nios2_10_debug_mem_slave_write),                  //                         .write
		.av_read                (nios2_10_debug_mem_slave_read),                   //                         .read
		.av_readdata            (nios2_10_debug_mem_slave_readdata),               //                         .readdata
		.av_writedata           (nios2_10_debug_mem_slave_writedata),              //                         .writedata
		.av_byteenable          (nios2_10_debug_mem_slave_byteenable),             //                         .byteenable
		.av_waitrequest         (nios2_10_debug_mem_slave_waitrequest),            //                         .waitrequest
		.av_debugaccess         (nios2_10_debug_mem_slave_debugaccess),            //                         .debugaccess
		.av_begintransfer       (),                                                //              (terminated)
		.av_beginbursttransfer  (),                                                //              (terminated)
		.av_burstcount          (),                                                //              (terminated)
		.av_readdatavalid       (1'b0),                                            //              (terminated)
		.av_writebyteenable     (),                                                //              (terminated)
		.av_lock                (),                                                //              (terminated)
		.av_chipselect          (),                                                //              (terminated)
		.av_clken               (),                                                //              (terminated)
		.uav_clken              (1'b0),                                            //              (terminated)
		.av_outputenable        (),                                                //              (terminated)
		.uav_response           (),                                                //              (terminated)
		.av_response            (2'b00),                                           //              (terminated)
		.uav_writeresponsevalid (),                                                //              (terminated)
		.av_writeresponsevalid  (1'b0)                                             //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) fifo_source_10_in_translator (
		.clk                    (clk_0_clk_clk),                              //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (fifo_source_10_in_agent_m0_address),         // avalon_universal_slave_0.address
		.uav_burstcount         (fifo_source_10_in_agent_m0_burstcount),      //                         .burstcount
		.uav_read               (fifo_source_10_in_agent_m0_read),            //                         .read
		.uav_write              (fifo_source_10_in_agent_m0_write),           //                         .write
		.uav_waitrequest        (fifo_source_10_in_agent_m0_waitrequest),     //                         .waitrequest
		.uav_readdatavalid      (fifo_source_10_in_agent_m0_readdatavalid),   //                         .readdatavalid
		.uav_byteenable         (fifo_source_10_in_agent_m0_byteenable),      //                         .byteenable
		.uav_readdata           (fifo_source_10_in_agent_m0_readdata),        //                         .readdata
		.uav_writedata          (fifo_source_10_in_agent_m0_writedata),       //                         .writedata
		.uav_lock               (fifo_source_10_in_agent_m0_lock),            //                         .lock
		.uav_debugaccess        (fifo_source_10_in_agent_m0_debugaccess),     //                         .debugaccess
		.av_address             (fifo_source_10_in_address),                  //      avalon_anti_slave_0.address
		.av_write               (fifo_source_10_in_write),                    //                         .write
		.av_writedata           (fifo_source_10_in_writedata),                //                         .writedata
		.av_waitrequest         (fifo_source_10_in_waitrequest),              //                         .waitrequest
		.av_read                (),                                           //              (terminated)
		.av_readdata            (32'b11011110101011011101111010101101),       //              (terminated)
		.av_begintransfer       (),                                           //              (terminated)
		.av_beginbursttransfer  (),                                           //              (terminated)
		.av_burstcount          (),                                           //              (terminated)
		.av_byteenable          (),                                           //              (terminated)
		.av_readdatavalid       (1'b0),                                       //              (terminated)
		.av_writebyteenable     (),                                           //              (terminated)
		.av_lock                (),                                           //              (terminated)
		.av_chipselect          (),                                           //              (terminated)
		.av_clken               (),                                           //              (terminated)
		.uav_clken              (1'b0),                                       //              (terminated)
		.av_debugaccess         (),                                           //              (terminated)
		.av_outputenable        (),                                           //              (terminated)
		.uav_response           (),                                           //              (terminated)
		.av_response            (2'b00),                                      //              (terminated)
		.uav_writeresponsevalid (),                                           //              (terminated)
		.av_writeresponsevalid  (1'b0)                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) fifo_sink_10_in_csr_translator (
		.clk                    (clk_0_clk_clk),                              //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (fifo_sink_10_in_csr_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (fifo_sink_10_in_csr_agent_m0_burstcount),    //                         .burstcount
		.uav_read               (fifo_sink_10_in_csr_agent_m0_read),          //                         .read
		.uav_write              (fifo_sink_10_in_csr_agent_m0_write),         //                         .write
		.uav_waitrequest        (fifo_sink_10_in_csr_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (fifo_sink_10_in_csr_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (fifo_sink_10_in_csr_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata           (fifo_sink_10_in_csr_agent_m0_readdata),      //                         .readdata
		.uav_writedata          (fifo_sink_10_in_csr_agent_m0_writedata),     //                         .writedata
		.uav_lock               (fifo_sink_10_in_csr_agent_m0_lock),          //                         .lock
		.uav_debugaccess        (fifo_sink_10_in_csr_agent_m0_debugaccess),   //                         .debugaccess
		.av_address             (fifo_sink_10_in_csr_address),                //      avalon_anti_slave_0.address
		.av_write               (fifo_sink_10_in_csr_write),                  //                         .write
		.av_read                (fifo_sink_10_in_csr_read),                   //                         .read
		.av_readdata            (fifo_sink_10_in_csr_readdata),               //                         .readdata
		.av_writedata           (fifo_sink_10_in_csr_writedata),              //                         .writedata
		.av_begintransfer       (),                                           //              (terminated)
		.av_beginbursttransfer  (),                                           //              (terminated)
		.av_burstcount          (),                                           //              (terminated)
		.av_byteenable          (),                                           //              (terminated)
		.av_readdatavalid       (1'b0),                                       //              (terminated)
		.av_waitrequest         (1'b0),                                       //              (terminated)
		.av_writebyteenable     (),                                           //              (terminated)
		.av_lock                (),                                           //              (terminated)
		.av_chipselect          (),                                           //              (terminated)
		.av_clken               (),                                           //              (terminated)
		.uav_clken              (1'b0),                                       //              (terminated)
		.av_debugaccess         (),                                           //              (terminated)
		.av_outputenable        (),                                           //              (terminated)
		.uav_response           (),                                           //              (terminated)
		.av_response            (2'b00),                                      //              (terminated)
		.uav_writeresponsevalid (),                                           //              (terminated)
		.av_writeresponsevalid  (1'b0)                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) fifo_source_10_in_csr_translator (
		.clk                    (clk_0_clk_clk),                                //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset),   //                    reset.reset
		.uav_address            (fifo_source_10_in_csr_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (fifo_source_10_in_csr_agent_m0_burstcount),    //                         .burstcount
		.uav_read               (fifo_source_10_in_csr_agent_m0_read),          //                         .read
		.uav_write              (fifo_source_10_in_csr_agent_m0_write),         //                         .write
		.uav_waitrequest        (fifo_source_10_in_csr_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (fifo_source_10_in_csr_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (fifo_source_10_in_csr_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata           (fifo_source_10_in_csr_agent_m0_readdata),      //                         .readdata
		.uav_writedata          (fifo_source_10_in_csr_agent_m0_writedata),     //                         .writedata
		.uav_lock               (fifo_source_10_in_csr_agent_m0_lock),          //                         .lock
		.uav_debugaccess        (fifo_source_10_in_csr_agent_m0_debugaccess),   //                         .debugaccess
		.av_address             (fifo_source_10_in_csr_address),                //      avalon_anti_slave_0.address
		.av_write               (fifo_source_10_in_csr_write),                  //                         .write
		.av_read                (fifo_source_10_in_csr_read),                   //                         .read
		.av_readdata            (fifo_source_10_in_csr_readdata),               //                         .readdata
		.av_writedata           (fifo_source_10_in_csr_writedata),              //                         .writedata
		.av_begintransfer       (),                                             //              (terminated)
		.av_beginbursttransfer  (),                                             //              (terminated)
		.av_burstcount          (),                                             //              (terminated)
		.av_byteenable          (),                                             //              (terminated)
		.av_readdatavalid       (1'b0),                                         //              (terminated)
		.av_waitrequest         (1'b0),                                         //              (terminated)
		.av_writebyteenable     (),                                             //              (terminated)
		.av_lock                (),                                             //              (terminated)
		.av_chipselect          (),                                             //              (terminated)
		.av_clken               (),                                             //              (terminated)
		.uav_clken              (1'b0),                                         //              (terminated)
		.av_debugaccess         (),                                             //              (terminated)
		.av_outputenable        (),                                             //              (terminated)
		.uav_response           (),                                             //              (terminated)
		.av_response            (2'b00),                                        //              (terminated)
		.uav_writeresponsevalid (),                                             //              (terminated)
		.av_writeresponsevalid  (1'b0)                                          //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) fifo_sink_10_out_translator (
		.clk                    (clk_0_clk_clk),                              //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (fifo_sink_10_out_agent_m0_address),          // avalon_universal_slave_0.address
		.uav_burstcount         (fifo_sink_10_out_agent_m0_burstcount),       //                         .burstcount
		.uav_read               (fifo_sink_10_out_agent_m0_read),             //                         .read
		.uav_write              (fifo_sink_10_out_agent_m0_write),            //                         .write
		.uav_waitrequest        (fifo_sink_10_out_agent_m0_waitrequest),      //                         .waitrequest
		.uav_readdatavalid      (fifo_sink_10_out_agent_m0_readdatavalid),    //                         .readdatavalid
		.uav_byteenable         (fifo_sink_10_out_agent_m0_byteenable),       //                         .byteenable
		.uav_readdata           (fifo_sink_10_out_agent_m0_readdata),         //                         .readdata
		.uav_writedata          (fifo_sink_10_out_agent_m0_writedata),        //                         .writedata
		.uav_lock               (fifo_sink_10_out_agent_m0_lock),             //                         .lock
		.uav_debugaccess        (fifo_sink_10_out_agent_m0_debugaccess),      //                         .debugaccess
		.av_address             (fifo_sink_10_out_address),                   //      avalon_anti_slave_0.address
		.av_read                (fifo_sink_10_out_read),                      //                         .read
		.av_readdata            (fifo_sink_10_out_readdata),                  //                         .readdata
		.av_waitrequest         (fifo_sink_10_out_waitrequest),               //                         .waitrequest
		.av_write               (),                                           //              (terminated)
		.av_writedata           (),                                           //              (terminated)
		.av_begintransfer       (),                                           //              (terminated)
		.av_beginbursttransfer  (),                                           //              (terminated)
		.av_burstcount          (),                                           //              (terminated)
		.av_byteenable          (),                                           //              (terminated)
		.av_readdatavalid       (1'b0),                                       //              (terminated)
		.av_writebyteenable     (),                                           //              (terminated)
		.av_lock                (),                                           //              (terminated)
		.av_chipselect          (),                                           //              (terminated)
		.av_clken               (),                                           //              (terminated)
		.uav_clken              (1'b0),                                       //              (terminated)
		.av_debugaccess         (),                                           //              (terminated)
		.av_outputenable        (),                                           //              (terminated)
		.uav_response           (),                                           //              (terminated)
		.av_response            (2'b00),                                      //              (terminated)
		.uav_writeresponsevalid (),                                           //              (terminated)
		.av_writeresponsevalid  (1'b0)                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (12),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) data_mem_10_s1_translator (
		.clk                    (clk_0_clk_clk),                              //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (data_mem_10_s1_agent_m0_address),            // avalon_universal_slave_0.address
		.uav_burstcount         (data_mem_10_s1_agent_m0_burstcount),         //                         .burstcount
		.uav_read               (data_mem_10_s1_agent_m0_read),               //                         .read
		.uav_write              (data_mem_10_s1_agent_m0_write),              //                         .write
		.uav_waitrequest        (data_mem_10_s1_agent_m0_waitrequest),        //                         .waitrequest
		.uav_readdatavalid      (data_mem_10_s1_agent_m0_readdatavalid),      //                         .readdatavalid
		.uav_byteenable         (data_mem_10_s1_agent_m0_byteenable),         //                         .byteenable
		.uav_readdata           (data_mem_10_s1_agent_m0_readdata),           //                         .readdata
		.uav_writedata          (data_mem_10_s1_agent_m0_writedata),          //                         .writedata
		.uav_lock               (data_mem_10_s1_agent_m0_lock),               //                         .lock
		.uav_debugaccess        (data_mem_10_s1_agent_m0_debugaccess),        //                         .debugaccess
		.av_address             (data_mem_10_s1_address),                     //      avalon_anti_slave_0.address
		.av_write               (data_mem_10_s1_write),                       //                         .write
		.av_readdata            (data_mem_10_s1_readdata),                    //                         .readdata
		.av_writedata           (data_mem_10_s1_writedata),                   //                         .writedata
		.av_byteenable          (data_mem_10_s1_byteenable),                  //                         .byteenable
		.av_chipselect          (data_mem_10_s1_chipselect),                  //                         .chipselect
		.av_clken               (data_mem_10_s1_clken),                       //                         .clken
		.av_read                (),                                           //              (terminated)
		.av_begintransfer       (),                                           //              (terminated)
		.av_beginbursttransfer  (),                                           //              (terminated)
		.av_burstcount          (),                                           //              (terminated)
		.av_readdatavalid       (1'b0),                                       //              (terminated)
		.av_waitrequest         (1'b0),                                       //              (terminated)
		.av_writebyteenable     (),                                           //              (terminated)
		.av_lock                (),                                           //              (terminated)
		.uav_clken              (1'b0),                                       //              (terminated)
		.av_debugaccess         (),                                           //              (terminated)
		.av_outputenable        (),                                           //              (terminated)
		.uav_response           (),                                           //              (terminated)
		.av_response            (2'b00),                                      //              (terminated)
		.uav_writeresponsevalid (),                                           //              (terminated)
		.av_writeresponsevalid  (1'b0)                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (9),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) nios2_01_debug_mem_slave_translator (
		.clk                    (clk_0_clk_clk),                                   //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset),      //                    reset.reset
		.uav_address            (nios2_01_debug_mem_slave_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (nios2_01_debug_mem_slave_agent_m0_burstcount),    //                         .burstcount
		.uav_read               (nios2_01_debug_mem_slave_agent_m0_read),          //                         .read
		.uav_write              (nios2_01_debug_mem_slave_agent_m0_write),         //                         .write
		.uav_waitrequest        (nios2_01_debug_mem_slave_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (nios2_01_debug_mem_slave_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (nios2_01_debug_mem_slave_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata           (nios2_01_debug_mem_slave_agent_m0_readdata),      //                         .readdata
		.uav_writedata          (nios2_01_debug_mem_slave_agent_m0_writedata),     //                         .writedata
		.uav_lock               (nios2_01_debug_mem_slave_agent_m0_lock),          //                         .lock
		.uav_debugaccess        (nios2_01_debug_mem_slave_agent_m0_debugaccess),   //                         .debugaccess
		.av_address             (nios2_01_debug_mem_slave_address),                //      avalon_anti_slave_0.address
		.av_write               (nios2_01_debug_mem_slave_write),                  //                         .write
		.av_read                (nios2_01_debug_mem_slave_read),                   //                         .read
		.av_readdata            (nios2_01_debug_mem_slave_readdata),               //                         .readdata
		.av_writedata           (nios2_01_debug_mem_slave_writedata),              //                         .writedata
		.av_byteenable          (nios2_01_debug_mem_slave_byteenable),             //                         .byteenable
		.av_waitrequest         (nios2_01_debug_mem_slave_waitrequest),            //                         .waitrequest
		.av_debugaccess         (nios2_01_debug_mem_slave_debugaccess),            //                         .debugaccess
		.av_begintransfer       (),                                                //              (terminated)
		.av_beginbursttransfer  (),                                                //              (terminated)
		.av_burstcount          (),                                                //              (terminated)
		.av_readdatavalid       (1'b0),                                            //              (terminated)
		.av_writebyteenable     (),                                                //              (terminated)
		.av_lock                (),                                                //              (terminated)
		.av_chipselect          (),                                                //              (terminated)
		.av_clken               (),                                                //              (terminated)
		.uav_clken              (1'b0),                                            //              (terminated)
		.av_outputenable        (),                                                //              (terminated)
		.uav_response           (),                                                //              (terminated)
		.av_response            (2'b00),                                           //              (terminated)
		.uav_writeresponsevalid (),                                                //              (terminated)
		.av_writeresponsevalid  (1'b0)                                             //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) fifo_source_01_in_translator (
		.clk                    (clk_0_clk_clk),                              //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (fifo_source_01_in_agent_m0_address),         // avalon_universal_slave_0.address
		.uav_burstcount         (fifo_source_01_in_agent_m0_burstcount),      //                         .burstcount
		.uav_read               (fifo_source_01_in_agent_m0_read),            //                         .read
		.uav_write              (fifo_source_01_in_agent_m0_write),           //                         .write
		.uav_waitrequest        (fifo_source_01_in_agent_m0_waitrequest),     //                         .waitrequest
		.uav_readdatavalid      (fifo_source_01_in_agent_m0_readdatavalid),   //                         .readdatavalid
		.uav_byteenable         (fifo_source_01_in_agent_m0_byteenable),      //                         .byteenable
		.uav_readdata           (fifo_source_01_in_agent_m0_readdata),        //                         .readdata
		.uav_writedata          (fifo_source_01_in_agent_m0_writedata),       //                         .writedata
		.uav_lock               (fifo_source_01_in_agent_m0_lock),            //                         .lock
		.uav_debugaccess        (fifo_source_01_in_agent_m0_debugaccess),     //                         .debugaccess
		.av_address             (fifo_source_01_in_address),                  //      avalon_anti_slave_0.address
		.av_write               (fifo_source_01_in_write),                    //                         .write
		.av_writedata           (fifo_source_01_in_writedata),                //                         .writedata
		.av_waitrequest         (fifo_source_01_in_waitrequest),              //                         .waitrequest
		.av_read                (),                                           //              (terminated)
		.av_readdata            (32'b11011110101011011101111010101101),       //              (terminated)
		.av_begintransfer       (),                                           //              (terminated)
		.av_beginbursttransfer  (),                                           //              (terminated)
		.av_burstcount          (),                                           //              (terminated)
		.av_byteenable          (),                                           //              (terminated)
		.av_readdatavalid       (1'b0),                                       //              (terminated)
		.av_writebyteenable     (),                                           //              (terminated)
		.av_lock                (),                                           //              (terminated)
		.av_chipselect          (),                                           //              (terminated)
		.av_clken               (),                                           //              (terminated)
		.uav_clken              (1'b0),                                       //              (terminated)
		.av_debugaccess         (),                                           //              (terminated)
		.av_outputenable        (),                                           //              (terminated)
		.uav_response           (),                                           //              (terminated)
		.av_response            (2'b00),                                      //              (terminated)
		.uav_writeresponsevalid (),                                           //              (terminated)
		.av_writeresponsevalid  (1'b0)                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) fifo_sink_01_in_csr_translator (
		.clk                    (clk_0_clk_clk),                              //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (fifo_sink_01_in_csr_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (fifo_sink_01_in_csr_agent_m0_burstcount),    //                         .burstcount
		.uav_read               (fifo_sink_01_in_csr_agent_m0_read),          //                         .read
		.uav_write              (fifo_sink_01_in_csr_agent_m0_write),         //                         .write
		.uav_waitrequest        (fifo_sink_01_in_csr_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (fifo_sink_01_in_csr_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (fifo_sink_01_in_csr_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata           (fifo_sink_01_in_csr_agent_m0_readdata),      //                         .readdata
		.uav_writedata          (fifo_sink_01_in_csr_agent_m0_writedata),     //                         .writedata
		.uav_lock               (fifo_sink_01_in_csr_agent_m0_lock),          //                         .lock
		.uav_debugaccess        (fifo_sink_01_in_csr_agent_m0_debugaccess),   //                         .debugaccess
		.av_address             (fifo_sink_01_in_csr_address),                //      avalon_anti_slave_0.address
		.av_write               (fifo_sink_01_in_csr_write),                  //                         .write
		.av_read                (fifo_sink_01_in_csr_read),                   //                         .read
		.av_readdata            (fifo_sink_01_in_csr_readdata),               //                         .readdata
		.av_writedata           (fifo_sink_01_in_csr_writedata),              //                         .writedata
		.av_begintransfer       (),                                           //              (terminated)
		.av_beginbursttransfer  (),                                           //              (terminated)
		.av_burstcount          (),                                           //              (terminated)
		.av_byteenable          (),                                           //              (terminated)
		.av_readdatavalid       (1'b0),                                       //              (terminated)
		.av_waitrequest         (1'b0),                                       //              (terminated)
		.av_writebyteenable     (),                                           //              (terminated)
		.av_lock                (),                                           //              (terminated)
		.av_chipselect          (),                                           //              (terminated)
		.av_clken               (),                                           //              (terminated)
		.uav_clken              (1'b0),                                       //              (terminated)
		.av_debugaccess         (),                                           //              (terminated)
		.av_outputenable        (),                                           //              (terminated)
		.uav_response           (),                                           //              (terminated)
		.av_response            (2'b00),                                      //              (terminated)
		.uav_writeresponsevalid (),                                           //              (terminated)
		.av_writeresponsevalid  (1'b0)                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) fifo_source_01_in_csr_translator (
		.clk                    (clk_0_clk_clk),                                //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset),   //                    reset.reset
		.uav_address            (fifo_source_01_in_csr_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (fifo_source_01_in_csr_agent_m0_burstcount),    //                         .burstcount
		.uav_read               (fifo_source_01_in_csr_agent_m0_read),          //                         .read
		.uav_write              (fifo_source_01_in_csr_agent_m0_write),         //                         .write
		.uav_waitrequest        (fifo_source_01_in_csr_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (fifo_source_01_in_csr_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (fifo_source_01_in_csr_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata           (fifo_source_01_in_csr_agent_m0_readdata),      //                         .readdata
		.uav_writedata          (fifo_source_01_in_csr_agent_m0_writedata),     //                         .writedata
		.uav_lock               (fifo_source_01_in_csr_agent_m0_lock),          //                         .lock
		.uav_debugaccess        (fifo_source_01_in_csr_agent_m0_debugaccess),   //                         .debugaccess
		.av_address             (fifo_source_01_in_csr_address),                //      avalon_anti_slave_0.address
		.av_write               (fifo_source_01_in_csr_write),                  //                         .write
		.av_read                (fifo_source_01_in_csr_read),                   //                         .read
		.av_readdata            (fifo_source_01_in_csr_readdata),               //                         .readdata
		.av_writedata           (fifo_source_01_in_csr_writedata),              //                         .writedata
		.av_begintransfer       (),                                             //              (terminated)
		.av_beginbursttransfer  (),                                             //              (terminated)
		.av_burstcount          (),                                             //              (terminated)
		.av_byteenable          (),                                             //              (terminated)
		.av_readdatavalid       (1'b0),                                         //              (terminated)
		.av_waitrequest         (1'b0),                                         //              (terminated)
		.av_writebyteenable     (),                                             //              (terminated)
		.av_lock                (),                                             //              (terminated)
		.av_chipselect          (),                                             //              (terminated)
		.av_clken               (),                                             //              (terminated)
		.uav_clken              (1'b0),                                         //              (terminated)
		.av_debugaccess         (),                                             //              (terminated)
		.av_outputenable        (),                                             //              (terminated)
		.uav_response           (),                                             //              (terminated)
		.av_response            (2'b00),                                        //              (terminated)
		.uav_writeresponsevalid (),                                             //              (terminated)
		.av_writeresponsevalid  (1'b0)                                          //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) fifo_sink_01_out_translator (
		.clk                    (clk_0_clk_clk),                              //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (fifo_sink_01_out_agent_m0_address),          // avalon_universal_slave_0.address
		.uav_burstcount         (fifo_sink_01_out_agent_m0_burstcount),       //                         .burstcount
		.uav_read               (fifo_sink_01_out_agent_m0_read),             //                         .read
		.uav_write              (fifo_sink_01_out_agent_m0_write),            //                         .write
		.uav_waitrequest        (fifo_sink_01_out_agent_m0_waitrequest),      //                         .waitrequest
		.uav_readdatavalid      (fifo_sink_01_out_agent_m0_readdatavalid),    //                         .readdatavalid
		.uav_byteenable         (fifo_sink_01_out_agent_m0_byteenable),       //                         .byteenable
		.uav_readdata           (fifo_sink_01_out_agent_m0_readdata),         //                         .readdata
		.uav_writedata          (fifo_sink_01_out_agent_m0_writedata),        //                         .writedata
		.uav_lock               (fifo_sink_01_out_agent_m0_lock),             //                         .lock
		.uav_debugaccess        (fifo_sink_01_out_agent_m0_debugaccess),      //                         .debugaccess
		.av_address             (fifo_sink_01_out_address),                   //      avalon_anti_slave_0.address
		.av_read                (fifo_sink_01_out_read),                      //                         .read
		.av_readdata            (fifo_sink_01_out_readdata),                  //                         .readdata
		.av_waitrequest         (fifo_sink_01_out_waitrequest),               //                         .waitrequest
		.av_write               (),                                           //              (terminated)
		.av_writedata           (),                                           //              (terminated)
		.av_begintransfer       (),                                           //              (terminated)
		.av_beginbursttransfer  (),                                           //              (terminated)
		.av_burstcount          (),                                           //              (terminated)
		.av_byteenable          (),                                           //              (terminated)
		.av_readdatavalid       (1'b0),                                       //              (terminated)
		.av_writebyteenable     (),                                           //              (terminated)
		.av_lock                (),                                           //              (terminated)
		.av_chipselect          (),                                           //              (terminated)
		.av_clken               (),                                           //              (terminated)
		.uav_clken              (1'b0),                                       //              (terminated)
		.av_debugaccess         (),                                           //              (terminated)
		.av_outputenable        (),                                           //              (terminated)
		.uav_response           (),                                           //              (terminated)
		.av_response            (2'b00),                                      //              (terminated)
		.uav_writeresponsevalid (),                                           //              (terminated)
		.av_writeresponsevalid  (1'b0)                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (12),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) data_mem_01_s1_translator (
		.clk                    (clk_0_clk_clk),                              //                      clk.clk
		.reset                  (nios2_00_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (data_mem_01_s1_agent_m0_address),            // avalon_universal_slave_0.address
		.uav_burstcount         (data_mem_01_s1_agent_m0_burstcount),         //                         .burstcount
		.uav_read               (data_mem_01_s1_agent_m0_read),               //                         .read
		.uav_write              (data_mem_01_s1_agent_m0_write),              //                         .write
		.uav_waitrequest        (data_mem_01_s1_agent_m0_waitrequest),        //                         .waitrequest
		.uav_readdatavalid      (data_mem_01_s1_agent_m0_readdatavalid),      //                         .readdatavalid
		.uav_byteenable         (data_mem_01_s1_agent_m0_byteenable),         //                         .byteenable
		.uav_readdata           (data_mem_01_s1_agent_m0_readdata),           //                         .readdata
		.uav_writedata          (data_mem_01_s1_agent_m0_writedata),          //                         .writedata
		.uav_lock               (data_mem_01_s1_agent_m0_lock),               //                         .lock
		.uav_debugaccess        (data_mem_01_s1_agent_m0_debugaccess),        //                         .debugaccess
		.av_address             (data_mem_01_s1_address),                     //      avalon_anti_slave_0.address
		.av_write               (data_mem_01_s1_write),                       //                         .write
		.av_readdata            (data_mem_01_s1_readdata),                    //                         .readdata
		.av_writedata           (data_mem_01_s1_writedata),                   //                         .writedata
		.av_byteenable          (data_mem_01_s1_byteenable),                  //                         .byteenable
		.av_chipselect          (data_mem_01_s1_chipselect),                  //                         .chipselect
		.av_clken               (data_mem_01_s1_clken),                       //                         .clken
		.av_read                (),                                           //              (terminated)
		.av_begintransfer       (),                                           //              (terminated)
		.av_beginbursttransfer  (),                                           //              (terminated)
		.av_burstcount          (),                                           //              (terminated)
		.av_readdatavalid       (1'b0),                                       //              (terminated)
		.av_waitrequest         (1'b0),                                       //              (terminated)
		.av_writebyteenable     (),                                           //              (terminated)
		.av_lock                (),                                           //              (terminated)
		.uav_clken              (1'b0),                                       //              (terminated)
		.av_debugaccess         (),                                           //              (terminated)
		.av_outputenable        (),                                           //              (terminated)
		.uav_response           (),                                           //              (terminated)
		.av_response            (2'b00),                                      //              (terminated)
		.uav_writeresponsevalid (),                                           //              (terminated)
		.av_writeresponsevalid  (1'b0)                                        //              (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_QOS_H                 (72),
		.PKT_QOS_L                 (72),
		.PKT_DATA_SIDEBAND_H       (70),
		.PKT_DATA_SIDEBAND_L       (70),
		.PKT_ADDR_SIDEBAND_H       (69),
		.PKT_ADDR_SIDEBAND_L       (69),
		.PKT_BURST_TYPE_H          (68),
		.PKT_BURST_TYPE_L          (67),
		.PKT_CACHE_H               (90),
		.PKT_CACHE_L               (87),
		.PKT_THREAD_ID_H           (83),
		.PKT_THREAD_ID_L           (83),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_EXCLUSIVE       (57),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.ST_DATA_W                 (96),
		.ST_CHANNEL_W              (25),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (0),
		.BURSTWRAP_VALUE           (7),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) nios2_00_data_master_agent (
		.clk                   (clk_0_clk_clk),                                                           //       clk.clk
		.reset                 (nios2_00_reset_reset_bridge_in_reset_reset),                              // clk_reset.reset
		.av_address            (nios2_00_data_master_translator_avalon_universal_master_0_address),       //        av.address
		.av_write              (nios2_00_data_master_translator_avalon_universal_master_0_write),         //          .write
		.av_read               (nios2_00_data_master_translator_avalon_universal_master_0_read),          //          .read
		.av_writedata          (nios2_00_data_master_translator_avalon_universal_master_0_writedata),     //          .writedata
		.av_readdata           (nios2_00_data_master_translator_avalon_universal_master_0_readdata),      //          .readdata
		.av_waitrequest        (nios2_00_data_master_translator_avalon_universal_master_0_waitrequest),   //          .waitrequest
		.av_readdatavalid      (nios2_00_data_master_translator_avalon_universal_master_0_readdatavalid), //          .readdatavalid
		.av_byteenable         (nios2_00_data_master_translator_avalon_universal_master_0_byteenable),    //          .byteenable
		.av_burstcount         (nios2_00_data_master_translator_avalon_universal_master_0_burstcount),    //          .burstcount
		.av_debugaccess        (nios2_00_data_master_translator_avalon_universal_master_0_debugaccess),   //          .debugaccess
		.av_lock               (nios2_00_data_master_translator_avalon_universal_master_0_lock),          //          .lock
		.cp_valid              (nios2_00_data_master_agent_cp_valid),                                     //        cp.valid
		.cp_data               (nios2_00_data_master_agent_cp_data),                                      //          .data
		.cp_startofpacket      (nios2_00_data_master_agent_cp_startofpacket),                             //          .startofpacket
		.cp_endofpacket        (nios2_00_data_master_agent_cp_endofpacket),                               //          .endofpacket
		.cp_ready              (nios2_00_data_master_agent_cp_ready),                                     //          .ready
		.rp_valid              (rsp_mux_src_valid),                                                       //        rp.valid
		.rp_data               (rsp_mux_src_data),                                                        //          .data
		.rp_channel            (rsp_mux_src_channel),                                                     //          .channel
		.rp_startofpacket      (rsp_mux_src_startofpacket),                                               //          .startofpacket
		.rp_endofpacket        (rsp_mux_src_endofpacket),                                                 //          .endofpacket
		.rp_ready              (rsp_mux_src_ready),                                                       //          .ready
		.av_response           (),                                                                        // (terminated)
		.av_writeresponsevalid ()                                                                         // (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_QOS_H                 (72),
		.PKT_QOS_L                 (72),
		.PKT_DATA_SIDEBAND_H       (70),
		.PKT_DATA_SIDEBAND_L       (70),
		.PKT_ADDR_SIDEBAND_H       (69),
		.PKT_ADDR_SIDEBAND_L       (69),
		.PKT_BURST_TYPE_H          (68),
		.PKT_BURST_TYPE_L          (67),
		.PKT_CACHE_H               (90),
		.PKT_CACHE_L               (87),
		.PKT_THREAD_ID_H           (83),
		.PKT_THREAD_ID_L           (83),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_EXCLUSIVE       (57),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.ST_DATA_W                 (96),
		.ST_CHANNEL_W              (25),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (2),
		.BURSTWRAP_VALUE           (7),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) nios2_01_data_master_agent (
		.clk                   (clk_0_clk_clk),                                                           //       clk.clk
		.reset                 (nios2_00_reset_reset_bridge_in_reset_reset),                              // clk_reset.reset
		.av_address            (nios2_01_data_master_translator_avalon_universal_master_0_address),       //        av.address
		.av_write              (nios2_01_data_master_translator_avalon_universal_master_0_write),         //          .write
		.av_read               (nios2_01_data_master_translator_avalon_universal_master_0_read),          //          .read
		.av_writedata          (nios2_01_data_master_translator_avalon_universal_master_0_writedata),     //          .writedata
		.av_readdata           (nios2_01_data_master_translator_avalon_universal_master_0_readdata),      //          .readdata
		.av_waitrequest        (nios2_01_data_master_translator_avalon_universal_master_0_waitrequest),   //          .waitrequest
		.av_readdatavalid      (nios2_01_data_master_translator_avalon_universal_master_0_readdatavalid), //          .readdatavalid
		.av_byteenable         (nios2_01_data_master_translator_avalon_universal_master_0_byteenable),    //          .byteenable
		.av_burstcount         (nios2_01_data_master_translator_avalon_universal_master_0_burstcount),    //          .burstcount
		.av_debugaccess        (nios2_01_data_master_translator_avalon_universal_master_0_debugaccess),   //          .debugaccess
		.av_lock               (nios2_01_data_master_translator_avalon_universal_master_0_lock),          //          .lock
		.cp_valid              (nios2_01_data_master_agent_cp_valid),                                     //        cp.valid
		.cp_data               (nios2_01_data_master_agent_cp_data),                                      //          .data
		.cp_startofpacket      (nios2_01_data_master_agent_cp_startofpacket),                             //          .startofpacket
		.cp_endofpacket        (nios2_01_data_master_agent_cp_endofpacket),                               //          .endofpacket
		.cp_ready              (nios2_01_data_master_agent_cp_ready),                                     //          .ready
		.rp_valid              (rsp_mux_001_src_valid),                                                   //        rp.valid
		.rp_data               (rsp_mux_001_src_data),                                                    //          .data
		.rp_channel            (rsp_mux_001_src_channel),                                                 //          .channel
		.rp_startofpacket      (rsp_mux_001_src_startofpacket),                                           //          .startofpacket
		.rp_endofpacket        (rsp_mux_001_src_endofpacket),                                             //          .endofpacket
		.rp_ready              (rsp_mux_001_src_ready),                                                   //          .ready
		.av_response           (),                                                                        // (terminated)
		.av_writeresponsevalid ()                                                                         // (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_QOS_H                 (72),
		.PKT_QOS_L                 (72),
		.PKT_DATA_SIDEBAND_H       (70),
		.PKT_DATA_SIDEBAND_L       (70),
		.PKT_ADDR_SIDEBAND_H       (69),
		.PKT_ADDR_SIDEBAND_L       (69),
		.PKT_BURST_TYPE_H          (68),
		.PKT_BURST_TYPE_L          (67),
		.PKT_CACHE_H               (90),
		.PKT_CACHE_L               (87),
		.PKT_THREAD_ID_H           (83),
		.PKT_THREAD_ID_L           (83),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_EXCLUSIVE       (57),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.ST_DATA_W                 (96),
		.ST_CHANNEL_W              (25),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (4),
		.BURSTWRAP_VALUE           (7),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) nios2_10_data_master_agent (
		.clk                   (clk_0_clk_clk),                                                           //       clk.clk
		.reset                 (nios2_00_reset_reset_bridge_in_reset_reset),                              // clk_reset.reset
		.av_address            (nios2_10_data_master_translator_avalon_universal_master_0_address),       //        av.address
		.av_write              (nios2_10_data_master_translator_avalon_universal_master_0_write),         //          .write
		.av_read               (nios2_10_data_master_translator_avalon_universal_master_0_read),          //          .read
		.av_writedata          (nios2_10_data_master_translator_avalon_universal_master_0_writedata),     //          .writedata
		.av_readdata           (nios2_10_data_master_translator_avalon_universal_master_0_readdata),      //          .readdata
		.av_waitrequest        (nios2_10_data_master_translator_avalon_universal_master_0_waitrequest),   //          .waitrequest
		.av_readdatavalid      (nios2_10_data_master_translator_avalon_universal_master_0_readdatavalid), //          .readdatavalid
		.av_byteenable         (nios2_10_data_master_translator_avalon_universal_master_0_byteenable),    //          .byteenable
		.av_burstcount         (nios2_10_data_master_translator_avalon_universal_master_0_burstcount),    //          .burstcount
		.av_debugaccess        (nios2_10_data_master_translator_avalon_universal_master_0_debugaccess),   //          .debugaccess
		.av_lock               (nios2_10_data_master_translator_avalon_universal_master_0_lock),          //          .lock
		.cp_valid              (nios2_10_data_master_agent_cp_valid),                                     //        cp.valid
		.cp_data               (nios2_10_data_master_agent_cp_data),                                      //          .data
		.cp_startofpacket      (nios2_10_data_master_agent_cp_startofpacket),                             //          .startofpacket
		.cp_endofpacket        (nios2_10_data_master_agent_cp_endofpacket),                               //          .endofpacket
		.cp_ready              (nios2_10_data_master_agent_cp_ready),                                     //          .ready
		.rp_valid              (rsp_mux_002_src_valid),                                                   //        rp.valid
		.rp_data               (rsp_mux_002_src_data),                                                    //          .data
		.rp_channel            (rsp_mux_002_src_channel),                                                 //          .channel
		.rp_startofpacket      (rsp_mux_002_src_startofpacket),                                           //          .startofpacket
		.rp_endofpacket        (rsp_mux_002_src_endofpacket),                                             //          .endofpacket
		.rp_ready              (rsp_mux_002_src_ready),                                                   //          .ready
		.av_response           (),                                                                        // (terminated)
		.av_writeresponsevalid ()                                                                         // (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_QOS_H                 (72),
		.PKT_QOS_L                 (72),
		.PKT_DATA_SIDEBAND_H       (70),
		.PKT_DATA_SIDEBAND_L       (70),
		.PKT_ADDR_SIDEBAND_H       (69),
		.PKT_ADDR_SIDEBAND_L       (69),
		.PKT_BURST_TYPE_H          (68),
		.PKT_BURST_TYPE_L          (67),
		.PKT_CACHE_H               (90),
		.PKT_CACHE_L               (87),
		.PKT_THREAD_ID_H           (83),
		.PKT_THREAD_ID_L           (83),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_EXCLUSIVE       (57),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.ST_DATA_W                 (96),
		.ST_CHANNEL_W              (25),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (6),
		.BURSTWRAP_VALUE           (7),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) nios2_11_data_master_agent (
		.clk                   (clk_0_clk_clk),                                                           //       clk.clk
		.reset                 (nios2_00_reset_reset_bridge_in_reset_reset),                              // clk_reset.reset
		.av_address            (nios2_11_data_master_translator_avalon_universal_master_0_address),       //        av.address
		.av_write              (nios2_11_data_master_translator_avalon_universal_master_0_write),         //          .write
		.av_read               (nios2_11_data_master_translator_avalon_universal_master_0_read),          //          .read
		.av_writedata          (nios2_11_data_master_translator_avalon_universal_master_0_writedata),     //          .writedata
		.av_readdata           (nios2_11_data_master_translator_avalon_universal_master_0_readdata),      //          .readdata
		.av_waitrequest        (nios2_11_data_master_translator_avalon_universal_master_0_waitrequest),   //          .waitrequest
		.av_readdatavalid      (nios2_11_data_master_translator_avalon_universal_master_0_readdatavalid), //          .readdatavalid
		.av_byteenable         (nios2_11_data_master_translator_avalon_universal_master_0_byteenable),    //          .byteenable
		.av_burstcount         (nios2_11_data_master_translator_avalon_universal_master_0_burstcount),    //          .burstcount
		.av_debugaccess        (nios2_11_data_master_translator_avalon_universal_master_0_debugaccess),   //          .debugaccess
		.av_lock               (nios2_11_data_master_translator_avalon_universal_master_0_lock),          //          .lock
		.cp_valid              (nios2_11_data_master_agent_cp_valid),                                     //        cp.valid
		.cp_data               (nios2_11_data_master_agent_cp_data),                                      //          .data
		.cp_startofpacket      (nios2_11_data_master_agent_cp_startofpacket),                             //          .startofpacket
		.cp_endofpacket        (nios2_11_data_master_agent_cp_endofpacket),                               //          .endofpacket
		.cp_ready              (nios2_11_data_master_agent_cp_ready),                                     //          .ready
		.rp_valid              (rsp_mux_003_src_valid),                                                   //        rp.valid
		.rp_data               (rsp_mux_003_src_data),                                                    //          .data
		.rp_channel            (rsp_mux_003_src_channel),                                                 //          .channel
		.rp_startofpacket      (rsp_mux_003_src_startofpacket),                                           //          .startofpacket
		.rp_endofpacket        (rsp_mux_003_src_endofpacket),                                             //          .endofpacket
		.rp_ready              (rsp_mux_003_src_ready),                                                   //          .ready
		.av_response           (),                                                                        // (terminated)
		.av_writeresponsevalid ()                                                                         // (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_QOS_H                 (72),
		.PKT_QOS_L                 (72),
		.PKT_DATA_SIDEBAND_H       (70),
		.PKT_DATA_SIDEBAND_L       (70),
		.PKT_ADDR_SIDEBAND_H       (69),
		.PKT_ADDR_SIDEBAND_L       (69),
		.PKT_BURST_TYPE_H          (68),
		.PKT_BURST_TYPE_L          (67),
		.PKT_CACHE_H               (90),
		.PKT_CACHE_L               (87),
		.PKT_THREAD_ID_H           (83),
		.PKT_THREAD_ID_L           (83),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_EXCLUSIVE       (57),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.ST_DATA_W                 (96),
		.ST_CHANNEL_W              (25),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (7),
		.BURSTWRAP_VALUE           (3),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) nios2_11_instruction_master_agent (
		.clk                   (clk_0_clk_clk),                                                                  //       clk.clk
		.reset                 (nios2_00_reset_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.av_address            (nios2_11_instruction_master_translator_avalon_universal_master_0_address),       //        av.address
		.av_write              (nios2_11_instruction_master_translator_avalon_universal_master_0_write),         //          .write
		.av_read               (nios2_11_instruction_master_translator_avalon_universal_master_0_read),          //          .read
		.av_writedata          (nios2_11_instruction_master_translator_avalon_universal_master_0_writedata),     //          .writedata
		.av_readdata           (nios2_11_instruction_master_translator_avalon_universal_master_0_readdata),      //          .readdata
		.av_waitrequest        (nios2_11_instruction_master_translator_avalon_universal_master_0_waitrequest),   //          .waitrequest
		.av_readdatavalid      (nios2_11_instruction_master_translator_avalon_universal_master_0_readdatavalid), //          .readdatavalid
		.av_byteenable         (nios2_11_instruction_master_translator_avalon_universal_master_0_byteenable),    //          .byteenable
		.av_burstcount         (nios2_11_instruction_master_translator_avalon_universal_master_0_burstcount),    //          .burstcount
		.av_debugaccess        (nios2_11_instruction_master_translator_avalon_universal_master_0_debugaccess),   //          .debugaccess
		.av_lock               (nios2_11_instruction_master_translator_avalon_universal_master_0_lock),          //          .lock
		.cp_valid              (nios2_11_instruction_master_agent_cp_valid),                                     //        cp.valid
		.cp_data               (nios2_11_instruction_master_agent_cp_data),                                      //          .data
		.cp_startofpacket      (nios2_11_instruction_master_agent_cp_startofpacket),                             //          .startofpacket
		.cp_endofpacket        (nios2_11_instruction_master_agent_cp_endofpacket),                               //          .endofpacket
		.cp_ready              (nios2_11_instruction_master_agent_cp_ready),                                     //          .ready
		.rp_valid              (rsp_mux_004_src_valid),                                                          //        rp.valid
		.rp_data               (rsp_mux_004_src_data),                                                           //          .data
		.rp_channel            (rsp_mux_004_src_channel),                                                        //          .channel
		.rp_startofpacket      (rsp_mux_004_src_startofpacket),                                                  //          .startofpacket
		.rp_endofpacket        (rsp_mux_004_src_endofpacket),                                                    //          .endofpacket
		.rp_ready              (rsp_mux_004_src_ready),                                                          //          .ready
		.av_response           (),                                                                               // (terminated)
		.av_writeresponsevalid ()                                                                                // (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_QOS_H                 (72),
		.PKT_QOS_L                 (72),
		.PKT_DATA_SIDEBAND_H       (70),
		.PKT_DATA_SIDEBAND_L       (70),
		.PKT_ADDR_SIDEBAND_H       (69),
		.PKT_ADDR_SIDEBAND_L       (69),
		.PKT_BURST_TYPE_H          (68),
		.PKT_BURST_TYPE_L          (67),
		.PKT_CACHE_H               (90),
		.PKT_CACHE_L               (87),
		.PKT_THREAD_ID_H           (83),
		.PKT_THREAD_ID_L           (83),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_EXCLUSIVE       (57),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.ST_DATA_W                 (96),
		.ST_CHANNEL_W              (25),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (5),
		.BURSTWRAP_VALUE           (3),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) nios2_10_instruction_master_agent (
		.clk                   (clk_0_clk_clk),                                                                  //       clk.clk
		.reset                 (nios2_00_reset_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.av_address            (nios2_10_instruction_master_translator_avalon_universal_master_0_address),       //        av.address
		.av_write              (nios2_10_instruction_master_translator_avalon_universal_master_0_write),         //          .write
		.av_read               (nios2_10_instruction_master_translator_avalon_universal_master_0_read),          //          .read
		.av_writedata          (nios2_10_instruction_master_translator_avalon_universal_master_0_writedata),     //          .writedata
		.av_readdata           (nios2_10_instruction_master_translator_avalon_universal_master_0_readdata),      //          .readdata
		.av_waitrequest        (nios2_10_instruction_master_translator_avalon_universal_master_0_waitrequest),   //          .waitrequest
		.av_readdatavalid      (nios2_10_instruction_master_translator_avalon_universal_master_0_readdatavalid), //          .readdatavalid
		.av_byteenable         (nios2_10_instruction_master_translator_avalon_universal_master_0_byteenable),    //          .byteenable
		.av_burstcount         (nios2_10_instruction_master_translator_avalon_universal_master_0_burstcount),    //          .burstcount
		.av_debugaccess        (nios2_10_instruction_master_translator_avalon_universal_master_0_debugaccess),   //          .debugaccess
		.av_lock               (nios2_10_instruction_master_translator_avalon_universal_master_0_lock),          //          .lock
		.cp_valid              (nios2_10_instruction_master_agent_cp_valid),                                     //        cp.valid
		.cp_data               (nios2_10_instruction_master_agent_cp_data),                                      //          .data
		.cp_startofpacket      (nios2_10_instruction_master_agent_cp_startofpacket),                             //          .startofpacket
		.cp_endofpacket        (nios2_10_instruction_master_agent_cp_endofpacket),                               //          .endofpacket
		.cp_ready              (nios2_10_instruction_master_agent_cp_ready),                                     //          .ready
		.rp_valid              (rsp_mux_005_src_valid),                                                          //        rp.valid
		.rp_data               (rsp_mux_005_src_data),                                                           //          .data
		.rp_channel            (rsp_mux_005_src_channel),                                                        //          .channel
		.rp_startofpacket      (rsp_mux_005_src_startofpacket),                                                  //          .startofpacket
		.rp_endofpacket        (rsp_mux_005_src_endofpacket),                                                    //          .endofpacket
		.rp_ready              (rsp_mux_005_src_ready),                                                          //          .ready
		.av_response           (),                                                                               // (terminated)
		.av_writeresponsevalid ()                                                                                // (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_QOS_H                 (72),
		.PKT_QOS_L                 (72),
		.PKT_DATA_SIDEBAND_H       (70),
		.PKT_DATA_SIDEBAND_L       (70),
		.PKT_ADDR_SIDEBAND_H       (69),
		.PKT_ADDR_SIDEBAND_L       (69),
		.PKT_BURST_TYPE_H          (68),
		.PKT_BURST_TYPE_L          (67),
		.PKT_CACHE_H               (90),
		.PKT_CACHE_L               (87),
		.PKT_THREAD_ID_H           (83),
		.PKT_THREAD_ID_L           (83),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_EXCLUSIVE       (57),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.ST_DATA_W                 (96),
		.ST_CHANNEL_W              (25),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (3),
		.BURSTWRAP_VALUE           (3),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) nios2_01_instruction_master_agent (
		.clk                   (clk_0_clk_clk),                                                                  //       clk.clk
		.reset                 (nios2_00_reset_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.av_address            (nios2_01_instruction_master_translator_avalon_universal_master_0_address),       //        av.address
		.av_write              (nios2_01_instruction_master_translator_avalon_universal_master_0_write),         //          .write
		.av_read               (nios2_01_instruction_master_translator_avalon_universal_master_0_read),          //          .read
		.av_writedata          (nios2_01_instruction_master_translator_avalon_universal_master_0_writedata),     //          .writedata
		.av_readdata           (nios2_01_instruction_master_translator_avalon_universal_master_0_readdata),      //          .readdata
		.av_waitrequest        (nios2_01_instruction_master_translator_avalon_universal_master_0_waitrequest),   //          .waitrequest
		.av_readdatavalid      (nios2_01_instruction_master_translator_avalon_universal_master_0_readdatavalid), //          .readdatavalid
		.av_byteenable         (nios2_01_instruction_master_translator_avalon_universal_master_0_byteenable),    //          .byteenable
		.av_burstcount         (nios2_01_instruction_master_translator_avalon_universal_master_0_burstcount),    //          .burstcount
		.av_debugaccess        (nios2_01_instruction_master_translator_avalon_universal_master_0_debugaccess),   //          .debugaccess
		.av_lock               (nios2_01_instruction_master_translator_avalon_universal_master_0_lock),          //          .lock
		.cp_valid              (nios2_01_instruction_master_agent_cp_valid),                                     //        cp.valid
		.cp_data               (nios2_01_instruction_master_agent_cp_data),                                      //          .data
		.cp_startofpacket      (nios2_01_instruction_master_agent_cp_startofpacket),                             //          .startofpacket
		.cp_endofpacket        (nios2_01_instruction_master_agent_cp_endofpacket),                               //          .endofpacket
		.cp_ready              (nios2_01_instruction_master_agent_cp_ready),                                     //          .ready
		.rp_valid              (rsp_mux_006_src_valid),                                                          //        rp.valid
		.rp_data               (rsp_mux_006_src_data),                                                           //          .data
		.rp_channel            (rsp_mux_006_src_channel),                                                        //          .channel
		.rp_startofpacket      (rsp_mux_006_src_startofpacket),                                                  //          .startofpacket
		.rp_endofpacket        (rsp_mux_006_src_endofpacket),                                                    //          .endofpacket
		.rp_ready              (rsp_mux_006_src_ready),                                                          //          .ready
		.av_response           (),                                                                               // (terminated)
		.av_writeresponsevalid ()                                                                                // (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_QOS_H                 (72),
		.PKT_QOS_L                 (72),
		.PKT_DATA_SIDEBAND_H       (70),
		.PKT_DATA_SIDEBAND_L       (70),
		.PKT_ADDR_SIDEBAND_H       (69),
		.PKT_ADDR_SIDEBAND_L       (69),
		.PKT_BURST_TYPE_H          (68),
		.PKT_BURST_TYPE_L          (67),
		.PKT_CACHE_H               (90),
		.PKT_CACHE_L               (87),
		.PKT_THREAD_ID_H           (83),
		.PKT_THREAD_ID_L           (83),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_EXCLUSIVE       (57),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.ST_DATA_W                 (96),
		.ST_CHANNEL_W              (25),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (1),
		.BURSTWRAP_VALUE           (3),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) nios2_00_instruction_master_agent (
		.clk                   (clk_0_clk_clk),                                                                  //       clk.clk
		.reset                 (nios2_00_reset_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.av_address            (nios2_00_instruction_master_translator_avalon_universal_master_0_address),       //        av.address
		.av_write              (nios2_00_instruction_master_translator_avalon_universal_master_0_write),         //          .write
		.av_read               (nios2_00_instruction_master_translator_avalon_universal_master_0_read),          //          .read
		.av_writedata          (nios2_00_instruction_master_translator_avalon_universal_master_0_writedata),     //          .writedata
		.av_readdata           (nios2_00_instruction_master_translator_avalon_universal_master_0_readdata),      //          .readdata
		.av_waitrequest        (nios2_00_instruction_master_translator_avalon_universal_master_0_waitrequest),   //          .waitrequest
		.av_readdatavalid      (nios2_00_instruction_master_translator_avalon_universal_master_0_readdatavalid), //          .readdatavalid
		.av_byteenable         (nios2_00_instruction_master_translator_avalon_universal_master_0_byteenable),    //          .byteenable
		.av_burstcount         (nios2_00_instruction_master_translator_avalon_universal_master_0_burstcount),    //          .burstcount
		.av_debugaccess        (nios2_00_instruction_master_translator_avalon_universal_master_0_debugaccess),   //          .debugaccess
		.av_lock               (nios2_00_instruction_master_translator_avalon_universal_master_0_lock),          //          .lock
		.cp_valid              (nios2_00_instruction_master_agent_cp_valid),                                     //        cp.valid
		.cp_data               (nios2_00_instruction_master_agent_cp_data),                                      //          .data
		.cp_startofpacket      (nios2_00_instruction_master_agent_cp_startofpacket),                             //          .startofpacket
		.cp_endofpacket        (nios2_00_instruction_master_agent_cp_endofpacket),                               //          .endofpacket
		.cp_ready              (nios2_00_instruction_master_agent_cp_ready),                                     //          .ready
		.rp_valid              (rsp_mux_007_src_valid),                                                          //        rp.valid
		.rp_data               (rsp_mux_007_src_data),                                                           //          .data
		.rp_channel            (rsp_mux_007_src_channel),                                                        //          .channel
		.rp_startofpacket      (rsp_mux_007_src_startofpacket),                                                  //          .startofpacket
		.rp_endofpacket        (rsp_mux_007_src_endofpacket),                                                    //          .endofpacket
		.rp_ready              (rsp_mux_007_src_ready),                                                          //          .ready
		.av_response           (),                                                                               // (terminated)
		.av_writeresponsevalid ()                                                                                // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) jtag_uart_0_avalon_jtag_slave_agent (
		.clk                     (clk_0_clk_clk),                                                  //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),                     //       clk_reset.reset
		.m0_address              (jtag_uart_0_avalon_jtag_slave_agent_m0_address),                 //              m0.address
		.m0_burstcount           (jtag_uart_0_avalon_jtag_slave_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (jtag_uart_0_avalon_jtag_slave_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (jtag_uart_0_avalon_jtag_slave_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (jtag_uart_0_avalon_jtag_slave_agent_m0_lock),                    //                .lock
		.m0_readdata             (jtag_uart_0_avalon_jtag_slave_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (jtag_uart_0_avalon_jtag_slave_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (jtag_uart_0_avalon_jtag_slave_agent_m0_read),                    //                .read
		.m0_waitrequest          (jtag_uart_0_avalon_jtag_slave_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (jtag_uart_0_avalon_jtag_slave_agent_m0_writedata),               //                .writedata
		.m0_write                (jtag_uart_0_avalon_jtag_slave_agent_m0_write),                   //                .write
		.rp_endofpacket          (jtag_uart_0_avalon_jtag_slave_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (jtag_uart_0_avalon_jtag_slave_agent_rp_ready),                   //                .ready
		.rp_valid                (jtag_uart_0_avalon_jtag_slave_agent_rp_valid),                   //                .valid
		.rp_data                 (jtag_uart_0_avalon_jtag_slave_agent_rp_data),                    //                .data
		.rp_startofpacket        (jtag_uart_0_avalon_jtag_slave_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_src_ready),                                              //              cp.ready
		.cp_valid                (cmd_mux_src_valid),                                              //                .valid
		.cp_data                 (cmd_mux_src_data),                                               //                .data
		.cp_startofpacket        (cmd_mux_src_startofpacket),                                      //                .startofpacket
		.cp_endofpacket          (cmd_mux_src_endofpacket),                                        //                .endofpacket
		.cp_channel              (cmd_mux_src_channel),                                            //                .channel
		.rf_sink_ready           (jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (jtag_uart_0_avalon_jtag_slave_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (jtag_uart_0_avalon_jtag_slave_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (jtag_uart_0_avalon_jtag_slave_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (jtag_uart_0_avalon_jtag_slave_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (jtag_uart_0_avalon_jtag_slave_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_out_0_ready),                                  // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_out_0_valid),                                  //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_out_0_data),                                   //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_out_0_error),                                  //                .error
		.rdata_fifo_src_ready    (jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                          //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                            //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                  //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),                     // clk_reset.reset
		.in_data           (jtag_uart_0_avalon_jtag_slave_agent_rf_source_data),             //        in.data
		.in_valid          (jtag_uart_0_avalon_jtag_slave_agent_rf_source_valid),            //          .valid
		.in_ready          (jtag_uart_0_avalon_jtag_slave_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (jtag_uart_0_avalon_jtag_slave_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (jtag_uart_0_avalon_jtag_slave_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                          // (terminated)
		.csr_read          (1'b0),                                                           // (terminated)
		.csr_write         (1'b0),                                                           // (terminated)
		.csr_readdata      (),                                                               // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                           // (terminated)
		.almost_full_data  (),                                                               // (terminated)
		.almost_empty_data (),                                                               // (terminated)
		.in_empty          (1'b0),                                                           // (terminated)
		.out_empty         (),                                                               // (terminated)
		.in_error          (1'b0),                                                           // (terminated)
		.out_error         (),                                                               // (terminated)
		.in_channel        (1'b0),                                                           // (terminated)
		.out_channel       ()                                                                // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) nios2_00_debug_mem_slave_agent (
		.clk                     (clk_0_clk_clk),                                             //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),                //       clk_reset.reset
		.m0_address              (nios2_00_debug_mem_slave_agent_m0_address),                 //              m0.address
		.m0_burstcount           (nios2_00_debug_mem_slave_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (nios2_00_debug_mem_slave_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (nios2_00_debug_mem_slave_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (nios2_00_debug_mem_slave_agent_m0_lock),                    //                .lock
		.m0_readdata             (nios2_00_debug_mem_slave_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (nios2_00_debug_mem_slave_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (nios2_00_debug_mem_slave_agent_m0_read),                    //                .read
		.m0_waitrequest          (nios2_00_debug_mem_slave_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (nios2_00_debug_mem_slave_agent_m0_writedata),               //                .writedata
		.m0_write                (nios2_00_debug_mem_slave_agent_m0_write),                   //                .write
		.rp_endofpacket          (nios2_00_debug_mem_slave_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (nios2_00_debug_mem_slave_agent_rp_ready),                   //                .ready
		.rp_valid                (nios2_00_debug_mem_slave_agent_rp_valid),                   //                .valid
		.rp_data                 (nios2_00_debug_mem_slave_agent_rp_data),                    //                .data
		.rp_startofpacket        (nios2_00_debug_mem_slave_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_001_src_ready),                                     //              cp.ready
		.cp_valid                (cmd_mux_001_src_valid),                                     //                .valid
		.cp_data                 (cmd_mux_001_src_data),                                      //                .data
		.cp_startofpacket        (cmd_mux_001_src_startofpacket),                             //                .startofpacket
		.cp_endofpacket          (cmd_mux_001_src_endofpacket),                               //                .endofpacket
		.cp_channel              (cmd_mux_001_src_channel),                                   //                .channel
		.rf_sink_ready           (nios2_00_debug_mem_slave_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (nios2_00_debug_mem_slave_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (nios2_00_debug_mem_slave_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (nios2_00_debug_mem_slave_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (nios2_00_debug_mem_slave_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (nios2_00_debug_mem_slave_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (nios2_00_debug_mem_slave_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (nios2_00_debug_mem_slave_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (nios2_00_debug_mem_slave_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (nios2_00_debug_mem_slave_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_001_out_0_ready),                         // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_001_out_0_valid),                         //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_001_out_0_data),                          //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_001_out_0_error),                         //                .error
		.rdata_fifo_src_ready    (nios2_00_debug_mem_slave_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (nios2_00_debug_mem_slave_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (nios2_00_debug_mem_slave_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                     //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                       //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) nios2_00_debug_mem_slave_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                             //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.in_data           (nios2_00_debug_mem_slave_agent_rf_source_data),             //        in.data
		.in_valid          (nios2_00_debug_mem_slave_agent_rf_source_valid),            //          .valid
		.in_ready          (nios2_00_debug_mem_slave_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (nios2_00_debug_mem_slave_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (nios2_00_debug_mem_slave_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (nios2_00_debug_mem_slave_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (nios2_00_debug_mem_slave_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (nios2_00_debug_mem_slave_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (nios2_00_debug_mem_slave_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (nios2_00_debug_mem_slave_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                     // (terminated)
		.csr_read          (1'b0),                                                      // (terminated)
		.csr_write         (1'b0),                                                      // (terminated)
		.csr_readdata      (),                                                          // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                      // (terminated)
		.almost_full_data  (),                                                          // (terminated)
		.almost_empty_data (),                                                          // (terminated)
		.in_empty          (1'b0),                                                      // (terminated)
		.out_empty         (),                                                          // (terminated)
		.in_error          (1'b0),                                                      // (terminated)
		.out_error         (),                                                          // (terminated)
		.in_channel        (1'b0),                                                      // (terminated)
		.out_channel       ()                                                           // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) fifo_source_00_in_agent (
		.clk                     (clk_0_clk_clk),                                      //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),         //       clk_reset.reset
		.m0_address              (fifo_source_00_in_agent_m0_address),                 //              m0.address
		.m0_burstcount           (fifo_source_00_in_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (fifo_source_00_in_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (fifo_source_00_in_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (fifo_source_00_in_agent_m0_lock),                    //                .lock
		.m0_readdata             (fifo_source_00_in_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (fifo_source_00_in_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (fifo_source_00_in_agent_m0_read),                    //                .read
		.m0_waitrequest          (fifo_source_00_in_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (fifo_source_00_in_agent_m0_writedata),               //                .writedata
		.m0_write                (fifo_source_00_in_agent_m0_write),                   //                .write
		.rp_endofpacket          (fifo_source_00_in_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (fifo_source_00_in_agent_rp_ready),                   //                .ready
		.rp_valid                (fifo_source_00_in_agent_rp_valid),                   //                .valid
		.rp_data                 (fifo_source_00_in_agent_rp_data),                    //                .data
		.rp_startofpacket        (fifo_source_00_in_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_002_src_ready),                              //              cp.ready
		.cp_valid                (cmd_mux_002_src_valid),                              //                .valid
		.cp_data                 (cmd_mux_002_src_data),                               //                .data
		.cp_startofpacket        (cmd_mux_002_src_startofpacket),                      //                .startofpacket
		.cp_endofpacket          (cmd_mux_002_src_endofpacket),                        //                .endofpacket
		.cp_channel              (cmd_mux_002_src_channel),                            //                .channel
		.rf_sink_ready           (fifo_source_00_in_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (fifo_source_00_in_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (fifo_source_00_in_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (fifo_source_00_in_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (fifo_source_00_in_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (fifo_source_00_in_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (fifo_source_00_in_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (fifo_source_00_in_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (fifo_source_00_in_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (fifo_source_00_in_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_002_out_0_ready),                  // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_002_out_0_valid),                  //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_002_out_0_data),                   //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_002_out_0_error),                  //                .error
		.rdata_fifo_src_ready    (fifo_source_00_in_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (fifo_source_00_in_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (fifo_source_00_in_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) fifo_source_00_in_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                      //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),         // clk_reset.reset
		.in_data           (fifo_source_00_in_agent_rf_source_data),             //        in.data
		.in_valid          (fifo_source_00_in_agent_rf_source_valid),            //          .valid
		.in_ready          (fifo_source_00_in_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (fifo_source_00_in_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (fifo_source_00_in_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (fifo_source_00_in_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (fifo_source_00_in_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (fifo_source_00_in_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (fifo_source_00_in_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (fifo_source_00_in_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                              // (terminated)
		.csr_read          (1'b0),                                               // (terminated)
		.csr_write         (1'b0),                                               // (terminated)
		.csr_readdata      (),                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),               // (terminated)
		.almost_full_data  (),                                                   // (terminated)
		.almost_empty_data (),                                                   // (terminated)
		.in_empty          (1'b0),                                               // (terminated)
		.out_empty         (),                                                   // (terminated)
		.in_error          (1'b0),                                               // (terminated)
		.out_error         (),                                                   // (terminated)
		.in_channel        (1'b0),                                               // (terminated)
		.out_channel       ()                                                    // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) fifo_sink_00_in_csr_agent (
		.clk                     (clk_0_clk_clk),                                        //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),           //       clk_reset.reset
		.m0_address              (fifo_sink_00_in_csr_agent_m0_address),                 //              m0.address
		.m0_burstcount           (fifo_sink_00_in_csr_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (fifo_sink_00_in_csr_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (fifo_sink_00_in_csr_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (fifo_sink_00_in_csr_agent_m0_lock),                    //                .lock
		.m0_readdata             (fifo_sink_00_in_csr_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (fifo_sink_00_in_csr_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (fifo_sink_00_in_csr_agent_m0_read),                    //                .read
		.m0_waitrequest          (fifo_sink_00_in_csr_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (fifo_sink_00_in_csr_agent_m0_writedata),               //                .writedata
		.m0_write                (fifo_sink_00_in_csr_agent_m0_write),                   //                .write
		.rp_endofpacket          (fifo_sink_00_in_csr_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (fifo_sink_00_in_csr_agent_rp_ready),                   //                .ready
		.rp_valid                (fifo_sink_00_in_csr_agent_rp_valid),                   //                .valid
		.rp_data                 (fifo_sink_00_in_csr_agent_rp_data),                    //                .data
		.rp_startofpacket        (fifo_sink_00_in_csr_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_003_src_ready),                                //              cp.ready
		.cp_valid                (cmd_mux_003_src_valid),                                //                .valid
		.cp_data                 (cmd_mux_003_src_data),                                 //                .data
		.cp_startofpacket        (cmd_mux_003_src_startofpacket),                        //                .startofpacket
		.cp_endofpacket          (cmd_mux_003_src_endofpacket),                          //                .endofpacket
		.cp_channel              (cmd_mux_003_src_channel),                              //                .channel
		.rf_sink_ready           (fifo_sink_00_in_csr_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (fifo_sink_00_in_csr_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (fifo_sink_00_in_csr_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (fifo_sink_00_in_csr_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (fifo_sink_00_in_csr_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (fifo_sink_00_in_csr_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (fifo_sink_00_in_csr_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (fifo_sink_00_in_csr_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (fifo_sink_00_in_csr_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (fifo_sink_00_in_csr_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_003_out_0_ready),                    // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_003_out_0_valid),                    //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_003_out_0_data),                     //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_003_out_0_error),                    //                .error
		.rdata_fifo_src_ready    (fifo_sink_00_in_csr_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (fifo_sink_00_in_csr_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (fifo_sink_00_in_csr_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) fifo_sink_00_in_csr_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                        //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),           // clk_reset.reset
		.in_data           (fifo_sink_00_in_csr_agent_rf_source_data),             //        in.data
		.in_valid          (fifo_sink_00_in_csr_agent_rf_source_valid),            //          .valid
		.in_ready          (fifo_sink_00_in_csr_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (fifo_sink_00_in_csr_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (fifo_sink_00_in_csr_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (fifo_sink_00_in_csr_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (fifo_sink_00_in_csr_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (fifo_sink_00_in_csr_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (fifo_sink_00_in_csr_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (fifo_sink_00_in_csr_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                // (terminated)
		.csr_read          (1'b0),                                                 // (terminated)
		.csr_write         (1'b0),                                                 // (terminated)
		.csr_readdata      (),                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                 // (terminated)
		.almost_full_data  (),                                                     // (terminated)
		.almost_empty_data (),                                                     // (terminated)
		.in_empty          (1'b0),                                                 // (terminated)
		.out_empty         (),                                                     // (terminated)
		.in_error          (1'b0),                                                 // (terminated)
		.out_error         (),                                                     // (terminated)
		.in_channel        (1'b0),                                                 // (terminated)
		.out_channel       ()                                                      // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) fifo_source_00_in_csr_agent (
		.clk                     (clk_0_clk_clk),                                          //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),             //       clk_reset.reset
		.m0_address              (fifo_source_00_in_csr_agent_m0_address),                 //              m0.address
		.m0_burstcount           (fifo_source_00_in_csr_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (fifo_source_00_in_csr_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (fifo_source_00_in_csr_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (fifo_source_00_in_csr_agent_m0_lock),                    //                .lock
		.m0_readdata             (fifo_source_00_in_csr_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (fifo_source_00_in_csr_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (fifo_source_00_in_csr_agent_m0_read),                    //                .read
		.m0_waitrequest          (fifo_source_00_in_csr_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (fifo_source_00_in_csr_agent_m0_writedata),               //                .writedata
		.m0_write                (fifo_source_00_in_csr_agent_m0_write),                   //                .write
		.rp_endofpacket          (fifo_source_00_in_csr_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (fifo_source_00_in_csr_agent_rp_ready),                   //                .ready
		.rp_valid                (fifo_source_00_in_csr_agent_rp_valid),                   //                .valid
		.rp_data                 (fifo_source_00_in_csr_agent_rp_data),                    //                .data
		.rp_startofpacket        (fifo_source_00_in_csr_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_004_src_ready),                                  //              cp.ready
		.cp_valid                (cmd_mux_004_src_valid),                                  //                .valid
		.cp_data                 (cmd_mux_004_src_data),                                   //                .data
		.cp_startofpacket        (cmd_mux_004_src_startofpacket),                          //                .startofpacket
		.cp_endofpacket          (cmd_mux_004_src_endofpacket),                            //                .endofpacket
		.cp_channel              (cmd_mux_004_src_channel),                                //                .channel
		.rf_sink_ready           (fifo_source_00_in_csr_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (fifo_source_00_in_csr_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (fifo_source_00_in_csr_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (fifo_source_00_in_csr_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (fifo_source_00_in_csr_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (fifo_source_00_in_csr_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (fifo_source_00_in_csr_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (fifo_source_00_in_csr_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (fifo_source_00_in_csr_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (fifo_source_00_in_csr_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_004_out_0_ready),                      // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_004_out_0_valid),                      //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_004_out_0_data),                       //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_004_out_0_error),                      //                .error
		.rdata_fifo_src_ready    (fifo_source_00_in_csr_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (fifo_source_00_in_csr_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (fifo_source_00_in_csr_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) fifo_source_00_in_csr_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                          //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),             // clk_reset.reset
		.in_data           (fifo_source_00_in_csr_agent_rf_source_data),             //        in.data
		.in_valid          (fifo_source_00_in_csr_agent_rf_source_valid),            //          .valid
		.in_ready          (fifo_source_00_in_csr_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (fifo_source_00_in_csr_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (fifo_source_00_in_csr_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (fifo_source_00_in_csr_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (fifo_source_00_in_csr_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (fifo_source_00_in_csr_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (fifo_source_00_in_csr_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (fifo_source_00_in_csr_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) fifo_sink_00_out_agent (
		.clk                     (clk_0_clk_clk),                                     //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),        //       clk_reset.reset
		.m0_address              (fifo_sink_00_out_agent_m0_address),                 //              m0.address
		.m0_burstcount           (fifo_sink_00_out_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (fifo_sink_00_out_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (fifo_sink_00_out_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (fifo_sink_00_out_agent_m0_lock),                    //                .lock
		.m0_readdata             (fifo_sink_00_out_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (fifo_sink_00_out_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (fifo_sink_00_out_agent_m0_read),                    //                .read
		.m0_waitrequest          (fifo_sink_00_out_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (fifo_sink_00_out_agent_m0_writedata),               //                .writedata
		.m0_write                (fifo_sink_00_out_agent_m0_write),                   //                .write
		.rp_endofpacket          (fifo_sink_00_out_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (fifo_sink_00_out_agent_rp_ready),                   //                .ready
		.rp_valid                (fifo_sink_00_out_agent_rp_valid),                   //                .valid
		.rp_data                 (fifo_sink_00_out_agent_rp_data),                    //                .data
		.rp_startofpacket        (fifo_sink_00_out_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_005_src_ready),                             //              cp.ready
		.cp_valid                (cmd_mux_005_src_valid),                             //                .valid
		.cp_data                 (cmd_mux_005_src_data),                              //                .data
		.cp_startofpacket        (cmd_mux_005_src_startofpacket),                     //                .startofpacket
		.cp_endofpacket          (cmd_mux_005_src_endofpacket),                       //                .endofpacket
		.cp_channel              (cmd_mux_005_src_channel),                           //                .channel
		.rf_sink_ready           (fifo_sink_00_out_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (fifo_sink_00_out_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (fifo_sink_00_out_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (fifo_sink_00_out_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (fifo_sink_00_out_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (fifo_sink_00_out_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (fifo_sink_00_out_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (fifo_sink_00_out_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (fifo_sink_00_out_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (fifo_sink_00_out_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_005_out_0_ready),                 // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_005_out_0_valid),                 //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_005_out_0_data),                  //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_005_out_0_error),                 //                .error
		.rdata_fifo_src_ready    (fifo_sink_00_out_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (fifo_sink_00_out_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (fifo_sink_00_out_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                             //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                               //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) fifo_sink_00_out_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                     //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),        // clk_reset.reset
		.in_data           (fifo_sink_00_out_agent_rf_source_data),             //        in.data
		.in_valid          (fifo_sink_00_out_agent_rf_source_valid),            //          .valid
		.in_ready          (fifo_sink_00_out_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (fifo_sink_00_out_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (fifo_sink_00_out_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (fifo_sink_00_out_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (fifo_sink_00_out_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (fifo_sink_00_out_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (fifo_sink_00_out_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (fifo_sink_00_out_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                             // (terminated)
		.csr_read          (1'b0),                                              // (terminated)
		.csr_write         (1'b0),                                              // (terminated)
		.csr_readdata      (),                                                  // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),              // (terminated)
		.almost_full_data  (),                                                  // (terminated)
		.almost_empty_data (),                                                  // (terminated)
		.in_empty          (1'b0),                                              // (terminated)
		.out_empty         (),                                                  // (terminated)
		.in_error          (1'b0),                                              // (terminated)
		.out_error         (),                                                  // (terminated)
		.in_channel        (1'b0),                                              // (terminated)
		.out_channel       ()                                                   // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) data_mem_00_s1_agent (
		.clk                     (clk_0_clk_clk),                                   //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),      //       clk_reset.reset
		.m0_address              (data_mem_00_s1_agent_m0_address),                 //              m0.address
		.m0_burstcount           (data_mem_00_s1_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (data_mem_00_s1_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (data_mem_00_s1_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (data_mem_00_s1_agent_m0_lock),                    //                .lock
		.m0_readdata             (data_mem_00_s1_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (data_mem_00_s1_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (data_mem_00_s1_agent_m0_read),                    //                .read
		.m0_waitrequest          (data_mem_00_s1_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (data_mem_00_s1_agent_m0_writedata),               //                .writedata
		.m0_write                (data_mem_00_s1_agent_m0_write),                   //                .write
		.rp_endofpacket          (data_mem_00_s1_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (data_mem_00_s1_agent_rp_ready),                   //                .ready
		.rp_valid                (data_mem_00_s1_agent_rp_valid),                   //                .valid
		.rp_data                 (data_mem_00_s1_agent_rp_data),                    //                .data
		.rp_startofpacket        (data_mem_00_s1_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_006_src_ready),                           //              cp.ready
		.cp_valid                (cmd_mux_006_src_valid),                           //                .valid
		.cp_data                 (cmd_mux_006_src_data),                            //                .data
		.cp_startofpacket        (cmd_mux_006_src_startofpacket),                   //                .startofpacket
		.cp_endofpacket          (cmd_mux_006_src_endofpacket),                     //                .endofpacket
		.cp_channel              (cmd_mux_006_src_channel),                         //                .channel
		.rf_sink_ready           (data_mem_00_s1_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (data_mem_00_s1_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (data_mem_00_s1_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (data_mem_00_s1_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (data_mem_00_s1_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (data_mem_00_s1_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (data_mem_00_s1_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (data_mem_00_s1_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (data_mem_00_s1_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (data_mem_00_s1_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_006_out_0_ready),               // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_006_out_0_valid),               //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_006_out_0_data),                //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_006_out_0_error),               //                .error
		.rdata_fifo_src_ready    (data_mem_00_s1_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (data_mem_00_s1_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (data_mem_00_s1_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                           //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) data_mem_00_s1_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                   //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),      // clk_reset.reset
		.in_data           (data_mem_00_s1_agent_rf_source_data),             //        in.data
		.in_valid          (data_mem_00_s1_agent_rf_source_valid),            //          .valid
		.in_ready          (data_mem_00_s1_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (data_mem_00_s1_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (data_mem_00_s1_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (data_mem_00_s1_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (data_mem_00_s1_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (data_mem_00_s1_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (data_mem_00_s1_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (data_mem_00_s1_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                           // (terminated)
		.csr_read          (1'b0),                                            // (terminated)
		.csr_write         (1'b0),                                            // (terminated)
		.csr_readdata      (),                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),            // (terminated)
		.almost_full_data  (),                                                // (terminated)
		.almost_empty_data (),                                                // (terminated)
		.in_empty          (1'b0),                                            // (terminated)
		.out_empty         (),                                                // (terminated)
		.in_error          (1'b0),                                            // (terminated)
		.out_error         (),                                                // (terminated)
		.in_channel        (1'b0),                                            // (terminated)
		.out_channel       ()                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) nios2_11_debug_mem_slave_agent (
		.clk                     (clk_0_clk_clk),                                             //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),                //       clk_reset.reset
		.m0_address              (nios2_11_debug_mem_slave_agent_m0_address),                 //              m0.address
		.m0_burstcount           (nios2_11_debug_mem_slave_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (nios2_11_debug_mem_slave_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (nios2_11_debug_mem_slave_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (nios2_11_debug_mem_slave_agent_m0_lock),                    //                .lock
		.m0_readdata             (nios2_11_debug_mem_slave_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (nios2_11_debug_mem_slave_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (nios2_11_debug_mem_slave_agent_m0_read),                    //                .read
		.m0_waitrequest          (nios2_11_debug_mem_slave_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (nios2_11_debug_mem_slave_agent_m0_writedata),               //                .writedata
		.m0_write                (nios2_11_debug_mem_slave_agent_m0_write),                   //                .write
		.rp_endofpacket          (nios2_11_debug_mem_slave_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (nios2_11_debug_mem_slave_agent_rp_ready),                   //                .ready
		.rp_valid                (nios2_11_debug_mem_slave_agent_rp_valid),                   //                .valid
		.rp_data                 (nios2_11_debug_mem_slave_agent_rp_data),                    //                .data
		.rp_startofpacket        (nios2_11_debug_mem_slave_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_007_src_ready),                                     //              cp.ready
		.cp_valid                (cmd_mux_007_src_valid),                                     //                .valid
		.cp_data                 (cmd_mux_007_src_data),                                      //                .data
		.cp_startofpacket        (cmd_mux_007_src_startofpacket),                             //                .startofpacket
		.cp_endofpacket          (cmd_mux_007_src_endofpacket),                               //                .endofpacket
		.cp_channel              (cmd_mux_007_src_channel),                                   //                .channel
		.rf_sink_ready           (nios2_11_debug_mem_slave_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (nios2_11_debug_mem_slave_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (nios2_11_debug_mem_slave_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (nios2_11_debug_mem_slave_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (nios2_11_debug_mem_slave_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (nios2_11_debug_mem_slave_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (nios2_11_debug_mem_slave_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (nios2_11_debug_mem_slave_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (nios2_11_debug_mem_slave_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (nios2_11_debug_mem_slave_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_007_out_0_ready),                         // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_007_out_0_valid),                         //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_007_out_0_data),                          //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_007_out_0_error),                         //                .error
		.rdata_fifo_src_ready    (nios2_11_debug_mem_slave_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (nios2_11_debug_mem_slave_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (nios2_11_debug_mem_slave_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                     //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                       //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) nios2_11_debug_mem_slave_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                             //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.in_data           (nios2_11_debug_mem_slave_agent_rf_source_data),             //        in.data
		.in_valid          (nios2_11_debug_mem_slave_agent_rf_source_valid),            //          .valid
		.in_ready          (nios2_11_debug_mem_slave_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (nios2_11_debug_mem_slave_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (nios2_11_debug_mem_slave_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (nios2_11_debug_mem_slave_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (nios2_11_debug_mem_slave_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (nios2_11_debug_mem_slave_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (nios2_11_debug_mem_slave_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (nios2_11_debug_mem_slave_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                     // (terminated)
		.csr_read          (1'b0),                                                      // (terminated)
		.csr_write         (1'b0),                                                      // (terminated)
		.csr_readdata      (),                                                          // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                      // (terminated)
		.almost_full_data  (),                                                          // (terminated)
		.almost_empty_data (),                                                          // (terminated)
		.in_empty          (1'b0),                                                      // (terminated)
		.out_empty         (),                                                          // (terminated)
		.in_error          (1'b0),                                                      // (terminated)
		.out_error         (),                                                          // (terminated)
		.in_channel        (1'b0),                                                      // (terminated)
		.out_channel       ()                                                           // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) fifo_source_11_in_agent (
		.clk                     (clk_0_clk_clk),                                      //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),         //       clk_reset.reset
		.m0_address              (fifo_source_11_in_agent_m0_address),                 //              m0.address
		.m0_burstcount           (fifo_source_11_in_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (fifo_source_11_in_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (fifo_source_11_in_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (fifo_source_11_in_agent_m0_lock),                    //                .lock
		.m0_readdata             (fifo_source_11_in_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (fifo_source_11_in_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (fifo_source_11_in_agent_m0_read),                    //                .read
		.m0_waitrequest          (fifo_source_11_in_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (fifo_source_11_in_agent_m0_writedata),               //                .writedata
		.m0_write                (fifo_source_11_in_agent_m0_write),                   //                .write
		.rp_endofpacket          (fifo_source_11_in_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (fifo_source_11_in_agent_rp_ready),                   //                .ready
		.rp_valid                (fifo_source_11_in_agent_rp_valid),                   //                .valid
		.rp_data                 (fifo_source_11_in_agent_rp_data),                    //                .data
		.rp_startofpacket        (fifo_source_11_in_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_008_src_ready),                              //              cp.ready
		.cp_valid                (cmd_mux_008_src_valid),                              //                .valid
		.cp_data                 (cmd_mux_008_src_data),                               //                .data
		.cp_startofpacket        (cmd_mux_008_src_startofpacket),                      //                .startofpacket
		.cp_endofpacket          (cmd_mux_008_src_endofpacket),                        //                .endofpacket
		.cp_channel              (cmd_mux_008_src_channel),                            //                .channel
		.rf_sink_ready           (fifo_source_11_in_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (fifo_source_11_in_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (fifo_source_11_in_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (fifo_source_11_in_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (fifo_source_11_in_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (fifo_source_11_in_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (fifo_source_11_in_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (fifo_source_11_in_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (fifo_source_11_in_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (fifo_source_11_in_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_008_out_0_ready),                  // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_008_out_0_valid),                  //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_008_out_0_data),                   //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_008_out_0_error),                  //                .error
		.rdata_fifo_src_ready    (fifo_source_11_in_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (fifo_source_11_in_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (fifo_source_11_in_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) fifo_source_11_in_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                      //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),         // clk_reset.reset
		.in_data           (fifo_source_11_in_agent_rf_source_data),             //        in.data
		.in_valid          (fifo_source_11_in_agent_rf_source_valid),            //          .valid
		.in_ready          (fifo_source_11_in_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (fifo_source_11_in_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (fifo_source_11_in_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (fifo_source_11_in_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (fifo_source_11_in_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (fifo_source_11_in_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (fifo_source_11_in_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (fifo_source_11_in_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                              // (terminated)
		.csr_read          (1'b0),                                               // (terminated)
		.csr_write         (1'b0),                                               // (terminated)
		.csr_readdata      (),                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),               // (terminated)
		.almost_full_data  (),                                                   // (terminated)
		.almost_empty_data (),                                                   // (terminated)
		.in_empty          (1'b0),                                               // (terminated)
		.out_empty         (),                                                   // (terminated)
		.in_error          (1'b0),                                               // (terminated)
		.out_error         (),                                                   // (terminated)
		.in_channel        (1'b0),                                               // (terminated)
		.out_channel       ()                                                    // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) fifo_sink_11_in_csr_agent (
		.clk                     (clk_0_clk_clk),                                        //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),           //       clk_reset.reset
		.m0_address              (fifo_sink_11_in_csr_agent_m0_address),                 //              m0.address
		.m0_burstcount           (fifo_sink_11_in_csr_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (fifo_sink_11_in_csr_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (fifo_sink_11_in_csr_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (fifo_sink_11_in_csr_agent_m0_lock),                    //                .lock
		.m0_readdata             (fifo_sink_11_in_csr_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (fifo_sink_11_in_csr_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (fifo_sink_11_in_csr_agent_m0_read),                    //                .read
		.m0_waitrequest          (fifo_sink_11_in_csr_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (fifo_sink_11_in_csr_agent_m0_writedata),               //                .writedata
		.m0_write                (fifo_sink_11_in_csr_agent_m0_write),                   //                .write
		.rp_endofpacket          (fifo_sink_11_in_csr_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (fifo_sink_11_in_csr_agent_rp_ready),                   //                .ready
		.rp_valid                (fifo_sink_11_in_csr_agent_rp_valid),                   //                .valid
		.rp_data                 (fifo_sink_11_in_csr_agent_rp_data),                    //                .data
		.rp_startofpacket        (fifo_sink_11_in_csr_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_009_src_ready),                                //              cp.ready
		.cp_valid                (cmd_mux_009_src_valid),                                //                .valid
		.cp_data                 (cmd_mux_009_src_data),                                 //                .data
		.cp_startofpacket        (cmd_mux_009_src_startofpacket),                        //                .startofpacket
		.cp_endofpacket          (cmd_mux_009_src_endofpacket),                          //                .endofpacket
		.cp_channel              (cmd_mux_009_src_channel),                              //                .channel
		.rf_sink_ready           (fifo_sink_11_in_csr_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (fifo_sink_11_in_csr_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (fifo_sink_11_in_csr_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (fifo_sink_11_in_csr_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (fifo_sink_11_in_csr_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (fifo_sink_11_in_csr_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (fifo_sink_11_in_csr_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (fifo_sink_11_in_csr_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (fifo_sink_11_in_csr_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (fifo_sink_11_in_csr_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_009_out_0_ready),                    // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_009_out_0_valid),                    //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_009_out_0_data),                     //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_009_out_0_error),                    //                .error
		.rdata_fifo_src_ready    (fifo_sink_11_in_csr_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (fifo_sink_11_in_csr_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (fifo_sink_11_in_csr_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) fifo_sink_11_in_csr_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                        //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),           // clk_reset.reset
		.in_data           (fifo_sink_11_in_csr_agent_rf_source_data),             //        in.data
		.in_valid          (fifo_sink_11_in_csr_agent_rf_source_valid),            //          .valid
		.in_ready          (fifo_sink_11_in_csr_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (fifo_sink_11_in_csr_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (fifo_sink_11_in_csr_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (fifo_sink_11_in_csr_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (fifo_sink_11_in_csr_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (fifo_sink_11_in_csr_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (fifo_sink_11_in_csr_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (fifo_sink_11_in_csr_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                // (terminated)
		.csr_read          (1'b0),                                                 // (terminated)
		.csr_write         (1'b0),                                                 // (terminated)
		.csr_readdata      (),                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                 // (terminated)
		.almost_full_data  (),                                                     // (terminated)
		.almost_empty_data (),                                                     // (terminated)
		.in_empty          (1'b0),                                                 // (terminated)
		.out_empty         (),                                                     // (terminated)
		.in_error          (1'b0),                                                 // (terminated)
		.out_error         (),                                                     // (terminated)
		.in_channel        (1'b0),                                                 // (terminated)
		.out_channel       ()                                                      // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) fifo_source_11_in_csr_agent (
		.clk                     (clk_0_clk_clk),                                          //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),             //       clk_reset.reset
		.m0_address              (fifo_source_11_in_csr_agent_m0_address),                 //              m0.address
		.m0_burstcount           (fifo_source_11_in_csr_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (fifo_source_11_in_csr_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (fifo_source_11_in_csr_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (fifo_source_11_in_csr_agent_m0_lock),                    //                .lock
		.m0_readdata             (fifo_source_11_in_csr_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (fifo_source_11_in_csr_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (fifo_source_11_in_csr_agent_m0_read),                    //                .read
		.m0_waitrequest          (fifo_source_11_in_csr_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (fifo_source_11_in_csr_agent_m0_writedata),               //                .writedata
		.m0_write                (fifo_source_11_in_csr_agent_m0_write),                   //                .write
		.rp_endofpacket          (fifo_source_11_in_csr_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (fifo_source_11_in_csr_agent_rp_ready),                   //                .ready
		.rp_valid                (fifo_source_11_in_csr_agent_rp_valid),                   //                .valid
		.rp_data                 (fifo_source_11_in_csr_agent_rp_data),                    //                .data
		.rp_startofpacket        (fifo_source_11_in_csr_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_010_src_ready),                                  //              cp.ready
		.cp_valid                (cmd_mux_010_src_valid),                                  //                .valid
		.cp_data                 (cmd_mux_010_src_data),                                   //                .data
		.cp_startofpacket        (cmd_mux_010_src_startofpacket),                          //                .startofpacket
		.cp_endofpacket          (cmd_mux_010_src_endofpacket),                            //                .endofpacket
		.cp_channel              (cmd_mux_010_src_channel),                                //                .channel
		.rf_sink_ready           (fifo_source_11_in_csr_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (fifo_source_11_in_csr_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (fifo_source_11_in_csr_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (fifo_source_11_in_csr_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (fifo_source_11_in_csr_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (fifo_source_11_in_csr_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (fifo_source_11_in_csr_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (fifo_source_11_in_csr_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (fifo_source_11_in_csr_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (fifo_source_11_in_csr_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_010_out_0_ready),                      // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_010_out_0_valid),                      //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_010_out_0_data),                       //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_010_out_0_error),                      //                .error
		.rdata_fifo_src_ready    (fifo_source_11_in_csr_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (fifo_source_11_in_csr_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (fifo_source_11_in_csr_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) fifo_source_11_in_csr_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                          //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),             // clk_reset.reset
		.in_data           (fifo_source_11_in_csr_agent_rf_source_data),             //        in.data
		.in_valid          (fifo_source_11_in_csr_agent_rf_source_valid),            //          .valid
		.in_ready          (fifo_source_11_in_csr_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (fifo_source_11_in_csr_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (fifo_source_11_in_csr_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (fifo_source_11_in_csr_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (fifo_source_11_in_csr_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (fifo_source_11_in_csr_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (fifo_source_11_in_csr_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (fifo_source_11_in_csr_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) fifo_sink_11_out_agent (
		.clk                     (clk_0_clk_clk),                                     //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),        //       clk_reset.reset
		.m0_address              (fifo_sink_11_out_agent_m0_address),                 //              m0.address
		.m0_burstcount           (fifo_sink_11_out_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (fifo_sink_11_out_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (fifo_sink_11_out_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (fifo_sink_11_out_agent_m0_lock),                    //                .lock
		.m0_readdata             (fifo_sink_11_out_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (fifo_sink_11_out_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (fifo_sink_11_out_agent_m0_read),                    //                .read
		.m0_waitrequest          (fifo_sink_11_out_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (fifo_sink_11_out_agent_m0_writedata),               //                .writedata
		.m0_write                (fifo_sink_11_out_agent_m0_write),                   //                .write
		.rp_endofpacket          (fifo_sink_11_out_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (fifo_sink_11_out_agent_rp_ready),                   //                .ready
		.rp_valid                (fifo_sink_11_out_agent_rp_valid),                   //                .valid
		.rp_data                 (fifo_sink_11_out_agent_rp_data),                    //                .data
		.rp_startofpacket        (fifo_sink_11_out_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_011_src_ready),                             //              cp.ready
		.cp_valid                (cmd_mux_011_src_valid),                             //                .valid
		.cp_data                 (cmd_mux_011_src_data),                              //                .data
		.cp_startofpacket        (cmd_mux_011_src_startofpacket),                     //                .startofpacket
		.cp_endofpacket          (cmd_mux_011_src_endofpacket),                       //                .endofpacket
		.cp_channel              (cmd_mux_011_src_channel),                           //                .channel
		.rf_sink_ready           (fifo_sink_11_out_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (fifo_sink_11_out_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (fifo_sink_11_out_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (fifo_sink_11_out_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (fifo_sink_11_out_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (fifo_sink_11_out_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (fifo_sink_11_out_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (fifo_sink_11_out_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (fifo_sink_11_out_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (fifo_sink_11_out_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_011_out_0_ready),                 // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_011_out_0_valid),                 //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_011_out_0_data),                  //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_011_out_0_error),                 //                .error
		.rdata_fifo_src_ready    (fifo_sink_11_out_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (fifo_sink_11_out_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (fifo_sink_11_out_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                             //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                               //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) fifo_sink_11_out_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                     //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),        // clk_reset.reset
		.in_data           (fifo_sink_11_out_agent_rf_source_data),             //        in.data
		.in_valid          (fifo_sink_11_out_agent_rf_source_valid),            //          .valid
		.in_ready          (fifo_sink_11_out_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (fifo_sink_11_out_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (fifo_sink_11_out_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (fifo_sink_11_out_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (fifo_sink_11_out_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (fifo_sink_11_out_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (fifo_sink_11_out_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (fifo_sink_11_out_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                             // (terminated)
		.csr_read          (1'b0),                                              // (terminated)
		.csr_write         (1'b0),                                              // (terminated)
		.csr_readdata      (),                                                  // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),              // (terminated)
		.almost_full_data  (),                                                  // (terminated)
		.almost_empty_data (),                                                  // (terminated)
		.in_empty          (1'b0),                                              // (terminated)
		.out_empty         (),                                                  // (terminated)
		.in_error          (1'b0),                                              // (terminated)
		.out_error         (),                                                  // (terminated)
		.in_channel        (1'b0),                                              // (terminated)
		.out_channel       ()                                                   // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) data_mem_11_s1_agent (
		.clk                     (clk_0_clk_clk),                                   //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),      //       clk_reset.reset
		.m0_address              (data_mem_11_s1_agent_m0_address),                 //              m0.address
		.m0_burstcount           (data_mem_11_s1_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (data_mem_11_s1_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (data_mem_11_s1_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (data_mem_11_s1_agent_m0_lock),                    //                .lock
		.m0_readdata             (data_mem_11_s1_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (data_mem_11_s1_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (data_mem_11_s1_agent_m0_read),                    //                .read
		.m0_waitrequest          (data_mem_11_s1_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (data_mem_11_s1_agent_m0_writedata),               //                .writedata
		.m0_write                (data_mem_11_s1_agent_m0_write),                   //                .write
		.rp_endofpacket          (data_mem_11_s1_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (data_mem_11_s1_agent_rp_ready),                   //                .ready
		.rp_valid                (data_mem_11_s1_agent_rp_valid),                   //                .valid
		.rp_data                 (data_mem_11_s1_agent_rp_data),                    //                .data
		.rp_startofpacket        (data_mem_11_s1_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_012_src_ready),                           //              cp.ready
		.cp_valid                (cmd_mux_012_src_valid),                           //                .valid
		.cp_data                 (cmd_mux_012_src_data),                            //                .data
		.cp_startofpacket        (cmd_mux_012_src_startofpacket),                   //                .startofpacket
		.cp_endofpacket          (cmd_mux_012_src_endofpacket),                     //                .endofpacket
		.cp_channel              (cmd_mux_012_src_channel),                         //                .channel
		.rf_sink_ready           (data_mem_11_s1_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (data_mem_11_s1_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (data_mem_11_s1_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (data_mem_11_s1_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (data_mem_11_s1_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (data_mem_11_s1_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (data_mem_11_s1_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (data_mem_11_s1_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (data_mem_11_s1_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (data_mem_11_s1_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_012_out_0_ready),               // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_012_out_0_valid),               //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_012_out_0_data),                //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_012_out_0_error),               //                .error
		.rdata_fifo_src_ready    (data_mem_11_s1_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (data_mem_11_s1_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (data_mem_11_s1_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                           //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) data_mem_11_s1_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                   //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),      // clk_reset.reset
		.in_data           (data_mem_11_s1_agent_rf_source_data),             //        in.data
		.in_valid          (data_mem_11_s1_agent_rf_source_valid),            //          .valid
		.in_ready          (data_mem_11_s1_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (data_mem_11_s1_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (data_mem_11_s1_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (data_mem_11_s1_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (data_mem_11_s1_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (data_mem_11_s1_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (data_mem_11_s1_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (data_mem_11_s1_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                           // (terminated)
		.csr_read          (1'b0),                                            // (terminated)
		.csr_write         (1'b0),                                            // (terminated)
		.csr_readdata      (),                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),            // (terminated)
		.almost_full_data  (),                                                // (terminated)
		.almost_empty_data (),                                                // (terminated)
		.in_empty          (1'b0),                                            // (terminated)
		.out_empty         (),                                                // (terminated)
		.in_error          (1'b0),                                            // (terminated)
		.out_error         (),                                                // (terminated)
		.in_channel        (1'b0),                                            // (terminated)
		.out_channel       ()                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) nios2_10_debug_mem_slave_agent (
		.clk                     (clk_0_clk_clk),                                             //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),                //       clk_reset.reset
		.m0_address              (nios2_10_debug_mem_slave_agent_m0_address),                 //              m0.address
		.m0_burstcount           (nios2_10_debug_mem_slave_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (nios2_10_debug_mem_slave_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (nios2_10_debug_mem_slave_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (nios2_10_debug_mem_slave_agent_m0_lock),                    //                .lock
		.m0_readdata             (nios2_10_debug_mem_slave_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (nios2_10_debug_mem_slave_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (nios2_10_debug_mem_slave_agent_m0_read),                    //                .read
		.m0_waitrequest          (nios2_10_debug_mem_slave_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (nios2_10_debug_mem_slave_agent_m0_writedata),               //                .writedata
		.m0_write                (nios2_10_debug_mem_slave_agent_m0_write),                   //                .write
		.rp_endofpacket          (nios2_10_debug_mem_slave_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (nios2_10_debug_mem_slave_agent_rp_ready),                   //                .ready
		.rp_valid                (nios2_10_debug_mem_slave_agent_rp_valid),                   //                .valid
		.rp_data                 (nios2_10_debug_mem_slave_agent_rp_data),                    //                .data
		.rp_startofpacket        (nios2_10_debug_mem_slave_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_013_src_ready),                                     //              cp.ready
		.cp_valid                (cmd_mux_013_src_valid),                                     //                .valid
		.cp_data                 (cmd_mux_013_src_data),                                      //                .data
		.cp_startofpacket        (cmd_mux_013_src_startofpacket),                             //                .startofpacket
		.cp_endofpacket          (cmd_mux_013_src_endofpacket),                               //                .endofpacket
		.cp_channel              (cmd_mux_013_src_channel),                                   //                .channel
		.rf_sink_ready           (nios2_10_debug_mem_slave_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (nios2_10_debug_mem_slave_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (nios2_10_debug_mem_slave_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (nios2_10_debug_mem_slave_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (nios2_10_debug_mem_slave_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (nios2_10_debug_mem_slave_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (nios2_10_debug_mem_slave_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (nios2_10_debug_mem_slave_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (nios2_10_debug_mem_slave_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (nios2_10_debug_mem_slave_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_013_out_0_ready),                         // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_013_out_0_valid),                         //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_013_out_0_data),                          //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_013_out_0_error),                         //                .error
		.rdata_fifo_src_ready    (nios2_10_debug_mem_slave_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (nios2_10_debug_mem_slave_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (nios2_10_debug_mem_slave_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                     //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                       //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) nios2_10_debug_mem_slave_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                             //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.in_data           (nios2_10_debug_mem_slave_agent_rf_source_data),             //        in.data
		.in_valid          (nios2_10_debug_mem_slave_agent_rf_source_valid),            //          .valid
		.in_ready          (nios2_10_debug_mem_slave_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (nios2_10_debug_mem_slave_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (nios2_10_debug_mem_slave_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (nios2_10_debug_mem_slave_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (nios2_10_debug_mem_slave_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (nios2_10_debug_mem_slave_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (nios2_10_debug_mem_slave_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (nios2_10_debug_mem_slave_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                     // (terminated)
		.csr_read          (1'b0),                                                      // (terminated)
		.csr_write         (1'b0),                                                      // (terminated)
		.csr_readdata      (),                                                          // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                      // (terminated)
		.almost_full_data  (),                                                          // (terminated)
		.almost_empty_data (),                                                          // (terminated)
		.in_empty          (1'b0),                                                      // (terminated)
		.out_empty         (),                                                          // (terminated)
		.in_error          (1'b0),                                                      // (terminated)
		.out_error         (),                                                          // (terminated)
		.in_channel        (1'b0),                                                      // (terminated)
		.out_channel       ()                                                           // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) fifo_source_10_in_agent (
		.clk                     (clk_0_clk_clk),                                      //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),         //       clk_reset.reset
		.m0_address              (fifo_source_10_in_agent_m0_address),                 //              m0.address
		.m0_burstcount           (fifo_source_10_in_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (fifo_source_10_in_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (fifo_source_10_in_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (fifo_source_10_in_agent_m0_lock),                    //                .lock
		.m0_readdata             (fifo_source_10_in_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (fifo_source_10_in_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (fifo_source_10_in_agent_m0_read),                    //                .read
		.m0_waitrequest          (fifo_source_10_in_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (fifo_source_10_in_agent_m0_writedata),               //                .writedata
		.m0_write                (fifo_source_10_in_agent_m0_write),                   //                .write
		.rp_endofpacket          (fifo_source_10_in_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (fifo_source_10_in_agent_rp_ready),                   //                .ready
		.rp_valid                (fifo_source_10_in_agent_rp_valid),                   //                .valid
		.rp_data                 (fifo_source_10_in_agent_rp_data),                    //                .data
		.rp_startofpacket        (fifo_source_10_in_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_014_src_ready),                              //              cp.ready
		.cp_valid                (cmd_mux_014_src_valid),                              //                .valid
		.cp_data                 (cmd_mux_014_src_data),                               //                .data
		.cp_startofpacket        (cmd_mux_014_src_startofpacket),                      //                .startofpacket
		.cp_endofpacket          (cmd_mux_014_src_endofpacket),                        //                .endofpacket
		.cp_channel              (cmd_mux_014_src_channel),                            //                .channel
		.rf_sink_ready           (fifo_source_10_in_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (fifo_source_10_in_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (fifo_source_10_in_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (fifo_source_10_in_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (fifo_source_10_in_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (fifo_source_10_in_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (fifo_source_10_in_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (fifo_source_10_in_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (fifo_source_10_in_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (fifo_source_10_in_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_014_out_0_ready),                  // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_014_out_0_valid),                  //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_014_out_0_data),                   //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_014_out_0_error),                  //                .error
		.rdata_fifo_src_ready    (fifo_source_10_in_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (fifo_source_10_in_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (fifo_source_10_in_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) fifo_source_10_in_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                      //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),         // clk_reset.reset
		.in_data           (fifo_source_10_in_agent_rf_source_data),             //        in.data
		.in_valid          (fifo_source_10_in_agent_rf_source_valid),            //          .valid
		.in_ready          (fifo_source_10_in_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (fifo_source_10_in_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (fifo_source_10_in_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (fifo_source_10_in_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (fifo_source_10_in_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (fifo_source_10_in_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (fifo_source_10_in_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (fifo_source_10_in_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                              // (terminated)
		.csr_read          (1'b0),                                               // (terminated)
		.csr_write         (1'b0),                                               // (terminated)
		.csr_readdata      (),                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),               // (terminated)
		.almost_full_data  (),                                                   // (terminated)
		.almost_empty_data (),                                                   // (terminated)
		.in_empty          (1'b0),                                               // (terminated)
		.out_empty         (),                                                   // (terminated)
		.in_error          (1'b0),                                               // (terminated)
		.out_error         (),                                                   // (terminated)
		.in_channel        (1'b0),                                               // (terminated)
		.out_channel       ()                                                    // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) fifo_sink_10_in_csr_agent (
		.clk                     (clk_0_clk_clk),                                        //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),           //       clk_reset.reset
		.m0_address              (fifo_sink_10_in_csr_agent_m0_address),                 //              m0.address
		.m0_burstcount           (fifo_sink_10_in_csr_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (fifo_sink_10_in_csr_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (fifo_sink_10_in_csr_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (fifo_sink_10_in_csr_agent_m0_lock),                    //                .lock
		.m0_readdata             (fifo_sink_10_in_csr_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (fifo_sink_10_in_csr_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (fifo_sink_10_in_csr_agent_m0_read),                    //                .read
		.m0_waitrequest          (fifo_sink_10_in_csr_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (fifo_sink_10_in_csr_agent_m0_writedata),               //                .writedata
		.m0_write                (fifo_sink_10_in_csr_agent_m0_write),                   //                .write
		.rp_endofpacket          (fifo_sink_10_in_csr_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (fifo_sink_10_in_csr_agent_rp_ready),                   //                .ready
		.rp_valid                (fifo_sink_10_in_csr_agent_rp_valid),                   //                .valid
		.rp_data                 (fifo_sink_10_in_csr_agent_rp_data),                    //                .data
		.rp_startofpacket        (fifo_sink_10_in_csr_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_015_src_ready),                                //              cp.ready
		.cp_valid                (cmd_mux_015_src_valid),                                //                .valid
		.cp_data                 (cmd_mux_015_src_data),                                 //                .data
		.cp_startofpacket        (cmd_mux_015_src_startofpacket),                        //                .startofpacket
		.cp_endofpacket          (cmd_mux_015_src_endofpacket),                          //                .endofpacket
		.cp_channel              (cmd_mux_015_src_channel),                              //                .channel
		.rf_sink_ready           (fifo_sink_10_in_csr_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (fifo_sink_10_in_csr_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (fifo_sink_10_in_csr_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (fifo_sink_10_in_csr_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (fifo_sink_10_in_csr_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (fifo_sink_10_in_csr_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (fifo_sink_10_in_csr_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (fifo_sink_10_in_csr_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (fifo_sink_10_in_csr_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (fifo_sink_10_in_csr_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_015_out_0_ready),                    // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_015_out_0_valid),                    //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_015_out_0_data),                     //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_015_out_0_error),                    //                .error
		.rdata_fifo_src_ready    (fifo_sink_10_in_csr_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (fifo_sink_10_in_csr_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (fifo_sink_10_in_csr_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) fifo_sink_10_in_csr_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                        //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),           // clk_reset.reset
		.in_data           (fifo_sink_10_in_csr_agent_rf_source_data),             //        in.data
		.in_valid          (fifo_sink_10_in_csr_agent_rf_source_valid),            //          .valid
		.in_ready          (fifo_sink_10_in_csr_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (fifo_sink_10_in_csr_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (fifo_sink_10_in_csr_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (fifo_sink_10_in_csr_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (fifo_sink_10_in_csr_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (fifo_sink_10_in_csr_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (fifo_sink_10_in_csr_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (fifo_sink_10_in_csr_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                // (terminated)
		.csr_read          (1'b0),                                                 // (terminated)
		.csr_write         (1'b0),                                                 // (terminated)
		.csr_readdata      (),                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                 // (terminated)
		.almost_full_data  (),                                                     // (terminated)
		.almost_empty_data (),                                                     // (terminated)
		.in_empty          (1'b0),                                                 // (terminated)
		.out_empty         (),                                                     // (terminated)
		.in_error          (1'b0),                                                 // (terminated)
		.out_error         (),                                                     // (terminated)
		.in_channel        (1'b0),                                                 // (terminated)
		.out_channel       ()                                                      // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) fifo_source_10_in_csr_agent (
		.clk                     (clk_0_clk_clk),                                          //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),             //       clk_reset.reset
		.m0_address              (fifo_source_10_in_csr_agent_m0_address),                 //              m0.address
		.m0_burstcount           (fifo_source_10_in_csr_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (fifo_source_10_in_csr_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (fifo_source_10_in_csr_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (fifo_source_10_in_csr_agent_m0_lock),                    //                .lock
		.m0_readdata             (fifo_source_10_in_csr_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (fifo_source_10_in_csr_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (fifo_source_10_in_csr_agent_m0_read),                    //                .read
		.m0_waitrequest          (fifo_source_10_in_csr_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (fifo_source_10_in_csr_agent_m0_writedata),               //                .writedata
		.m0_write                (fifo_source_10_in_csr_agent_m0_write),                   //                .write
		.rp_endofpacket          (fifo_source_10_in_csr_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (fifo_source_10_in_csr_agent_rp_ready),                   //                .ready
		.rp_valid                (fifo_source_10_in_csr_agent_rp_valid),                   //                .valid
		.rp_data                 (fifo_source_10_in_csr_agent_rp_data),                    //                .data
		.rp_startofpacket        (fifo_source_10_in_csr_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_016_src_ready),                                  //              cp.ready
		.cp_valid                (cmd_mux_016_src_valid),                                  //                .valid
		.cp_data                 (cmd_mux_016_src_data),                                   //                .data
		.cp_startofpacket        (cmd_mux_016_src_startofpacket),                          //                .startofpacket
		.cp_endofpacket          (cmd_mux_016_src_endofpacket),                            //                .endofpacket
		.cp_channel              (cmd_mux_016_src_channel),                                //                .channel
		.rf_sink_ready           (fifo_source_10_in_csr_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (fifo_source_10_in_csr_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (fifo_source_10_in_csr_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (fifo_source_10_in_csr_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (fifo_source_10_in_csr_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (fifo_source_10_in_csr_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (fifo_source_10_in_csr_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (fifo_source_10_in_csr_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (fifo_source_10_in_csr_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (fifo_source_10_in_csr_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_016_out_0_ready),                      // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_016_out_0_valid),                      //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_016_out_0_data),                       //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_016_out_0_error),                      //                .error
		.rdata_fifo_src_ready    (fifo_source_10_in_csr_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (fifo_source_10_in_csr_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (fifo_source_10_in_csr_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) fifo_source_10_in_csr_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                          //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),             // clk_reset.reset
		.in_data           (fifo_source_10_in_csr_agent_rf_source_data),             //        in.data
		.in_valid          (fifo_source_10_in_csr_agent_rf_source_valid),            //          .valid
		.in_ready          (fifo_source_10_in_csr_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (fifo_source_10_in_csr_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (fifo_source_10_in_csr_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (fifo_source_10_in_csr_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (fifo_source_10_in_csr_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (fifo_source_10_in_csr_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (fifo_source_10_in_csr_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (fifo_source_10_in_csr_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) fifo_sink_10_out_agent (
		.clk                     (clk_0_clk_clk),                                     //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),        //       clk_reset.reset
		.m0_address              (fifo_sink_10_out_agent_m0_address),                 //              m0.address
		.m0_burstcount           (fifo_sink_10_out_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (fifo_sink_10_out_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (fifo_sink_10_out_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (fifo_sink_10_out_agent_m0_lock),                    //                .lock
		.m0_readdata             (fifo_sink_10_out_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (fifo_sink_10_out_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (fifo_sink_10_out_agent_m0_read),                    //                .read
		.m0_waitrequest          (fifo_sink_10_out_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (fifo_sink_10_out_agent_m0_writedata),               //                .writedata
		.m0_write                (fifo_sink_10_out_agent_m0_write),                   //                .write
		.rp_endofpacket          (fifo_sink_10_out_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (fifo_sink_10_out_agent_rp_ready),                   //                .ready
		.rp_valid                (fifo_sink_10_out_agent_rp_valid),                   //                .valid
		.rp_data                 (fifo_sink_10_out_agent_rp_data),                    //                .data
		.rp_startofpacket        (fifo_sink_10_out_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_017_src_ready),                             //              cp.ready
		.cp_valid                (cmd_mux_017_src_valid),                             //                .valid
		.cp_data                 (cmd_mux_017_src_data),                              //                .data
		.cp_startofpacket        (cmd_mux_017_src_startofpacket),                     //                .startofpacket
		.cp_endofpacket          (cmd_mux_017_src_endofpacket),                       //                .endofpacket
		.cp_channel              (cmd_mux_017_src_channel),                           //                .channel
		.rf_sink_ready           (fifo_sink_10_out_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (fifo_sink_10_out_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (fifo_sink_10_out_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (fifo_sink_10_out_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (fifo_sink_10_out_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (fifo_sink_10_out_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (fifo_sink_10_out_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (fifo_sink_10_out_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (fifo_sink_10_out_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (fifo_sink_10_out_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_017_out_0_ready),                 // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_017_out_0_valid),                 //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_017_out_0_data),                  //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_017_out_0_error),                 //                .error
		.rdata_fifo_src_ready    (fifo_sink_10_out_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (fifo_sink_10_out_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (fifo_sink_10_out_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                             //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                               //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) fifo_sink_10_out_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                     //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),        // clk_reset.reset
		.in_data           (fifo_sink_10_out_agent_rf_source_data),             //        in.data
		.in_valid          (fifo_sink_10_out_agent_rf_source_valid),            //          .valid
		.in_ready          (fifo_sink_10_out_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (fifo_sink_10_out_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (fifo_sink_10_out_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (fifo_sink_10_out_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (fifo_sink_10_out_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (fifo_sink_10_out_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (fifo_sink_10_out_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (fifo_sink_10_out_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                             // (terminated)
		.csr_read          (1'b0),                                              // (terminated)
		.csr_write         (1'b0),                                              // (terminated)
		.csr_readdata      (),                                                  // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),              // (terminated)
		.almost_full_data  (),                                                  // (terminated)
		.almost_empty_data (),                                                  // (terminated)
		.in_empty          (1'b0),                                              // (terminated)
		.out_empty         (),                                                  // (terminated)
		.in_error          (1'b0),                                              // (terminated)
		.out_error         (),                                                  // (terminated)
		.in_channel        (1'b0),                                              // (terminated)
		.out_channel       ()                                                   // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) data_mem_10_s1_agent (
		.clk                     (clk_0_clk_clk),                                   //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),      //       clk_reset.reset
		.m0_address              (data_mem_10_s1_agent_m0_address),                 //              m0.address
		.m0_burstcount           (data_mem_10_s1_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (data_mem_10_s1_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (data_mem_10_s1_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (data_mem_10_s1_agent_m0_lock),                    //                .lock
		.m0_readdata             (data_mem_10_s1_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (data_mem_10_s1_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (data_mem_10_s1_agent_m0_read),                    //                .read
		.m0_waitrequest          (data_mem_10_s1_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (data_mem_10_s1_agent_m0_writedata),               //                .writedata
		.m0_write                (data_mem_10_s1_agent_m0_write),                   //                .write
		.rp_endofpacket          (data_mem_10_s1_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (data_mem_10_s1_agent_rp_ready),                   //                .ready
		.rp_valid                (data_mem_10_s1_agent_rp_valid),                   //                .valid
		.rp_data                 (data_mem_10_s1_agent_rp_data),                    //                .data
		.rp_startofpacket        (data_mem_10_s1_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_018_src_ready),                           //              cp.ready
		.cp_valid                (cmd_mux_018_src_valid),                           //                .valid
		.cp_data                 (cmd_mux_018_src_data),                            //                .data
		.cp_startofpacket        (cmd_mux_018_src_startofpacket),                   //                .startofpacket
		.cp_endofpacket          (cmd_mux_018_src_endofpacket),                     //                .endofpacket
		.cp_channel              (cmd_mux_018_src_channel),                         //                .channel
		.rf_sink_ready           (data_mem_10_s1_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (data_mem_10_s1_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (data_mem_10_s1_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (data_mem_10_s1_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (data_mem_10_s1_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (data_mem_10_s1_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (data_mem_10_s1_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (data_mem_10_s1_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (data_mem_10_s1_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (data_mem_10_s1_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_018_out_0_ready),               // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_018_out_0_valid),               //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_018_out_0_data),                //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_018_out_0_error),               //                .error
		.rdata_fifo_src_ready    (data_mem_10_s1_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (data_mem_10_s1_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (data_mem_10_s1_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                           //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) data_mem_10_s1_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                   //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),      // clk_reset.reset
		.in_data           (data_mem_10_s1_agent_rf_source_data),             //        in.data
		.in_valid          (data_mem_10_s1_agent_rf_source_valid),            //          .valid
		.in_ready          (data_mem_10_s1_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (data_mem_10_s1_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (data_mem_10_s1_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (data_mem_10_s1_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (data_mem_10_s1_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (data_mem_10_s1_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (data_mem_10_s1_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (data_mem_10_s1_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                           // (terminated)
		.csr_read          (1'b0),                                            // (terminated)
		.csr_write         (1'b0),                                            // (terminated)
		.csr_readdata      (),                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),            // (terminated)
		.almost_full_data  (),                                                // (terminated)
		.almost_empty_data (),                                                // (terminated)
		.in_empty          (1'b0),                                            // (terminated)
		.out_empty         (),                                                // (terminated)
		.in_error          (1'b0),                                            // (terminated)
		.out_error         (),                                                // (terminated)
		.in_channel        (1'b0),                                            // (terminated)
		.out_channel       ()                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) nios2_01_debug_mem_slave_agent (
		.clk                     (clk_0_clk_clk),                                             //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),                //       clk_reset.reset
		.m0_address              (nios2_01_debug_mem_slave_agent_m0_address),                 //              m0.address
		.m0_burstcount           (nios2_01_debug_mem_slave_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (nios2_01_debug_mem_slave_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (nios2_01_debug_mem_slave_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (nios2_01_debug_mem_slave_agent_m0_lock),                    //                .lock
		.m0_readdata             (nios2_01_debug_mem_slave_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (nios2_01_debug_mem_slave_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (nios2_01_debug_mem_slave_agent_m0_read),                    //                .read
		.m0_waitrequest          (nios2_01_debug_mem_slave_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (nios2_01_debug_mem_slave_agent_m0_writedata),               //                .writedata
		.m0_write                (nios2_01_debug_mem_slave_agent_m0_write),                   //                .write
		.rp_endofpacket          (nios2_01_debug_mem_slave_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (nios2_01_debug_mem_slave_agent_rp_ready),                   //                .ready
		.rp_valid                (nios2_01_debug_mem_slave_agent_rp_valid),                   //                .valid
		.rp_data                 (nios2_01_debug_mem_slave_agent_rp_data),                    //                .data
		.rp_startofpacket        (nios2_01_debug_mem_slave_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_019_src_ready),                                     //              cp.ready
		.cp_valid                (cmd_mux_019_src_valid),                                     //                .valid
		.cp_data                 (cmd_mux_019_src_data),                                      //                .data
		.cp_startofpacket        (cmd_mux_019_src_startofpacket),                             //                .startofpacket
		.cp_endofpacket          (cmd_mux_019_src_endofpacket),                               //                .endofpacket
		.cp_channel              (cmd_mux_019_src_channel),                                   //                .channel
		.rf_sink_ready           (nios2_01_debug_mem_slave_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (nios2_01_debug_mem_slave_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (nios2_01_debug_mem_slave_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (nios2_01_debug_mem_slave_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (nios2_01_debug_mem_slave_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (nios2_01_debug_mem_slave_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (nios2_01_debug_mem_slave_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (nios2_01_debug_mem_slave_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (nios2_01_debug_mem_slave_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (nios2_01_debug_mem_slave_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_019_out_0_ready),                         // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_019_out_0_valid),                         //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_019_out_0_data),                          //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_019_out_0_error),                         //                .error
		.rdata_fifo_src_ready    (nios2_01_debug_mem_slave_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (nios2_01_debug_mem_slave_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (nios2_01_debug_mem_slave_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                     //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                       //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) nios2_01_debug_mem_slave_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                             //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.in_data           (nios2_01_debug_mem_slave_agent_rf_source_data),             //        in.data
		.in_valid          (nios2_01_debug_mem_slave_agent_rf_source_valid),            //          .valid
		.in_ready          (nios2_01_debug_mem_slave_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (nios2_01_debug_mem_slave_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (nios2_01_debug_mem_slave_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (nios2_01_debug_mem_slave_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (nios2_01_debug_mem_slave_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (nios2_01_debug_mem_slave_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (nios2_01_debug_mem_slave_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (nios2_01_debug_mem_slave_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                     // (terminated)
		.csr_read          (1'b0),                                                      // (terminated)
		.csr_write         (1'b0),                                                      // (terminated)
		.csr_readdata      (),                                                          // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                      // (terminated)
		.almost_full_data  (),                                                          // (terminated)
		.almost_empty_data (),                                                          // (terminated)
		.in_empty          (1'b0),                                                      // (terminated)
		.out_empty         (),                                                          // (terminated)
		.in_error          (1'b0),                                                      // (terminated)
		.out_error         (),                                                          // (terminated)
		.in_channel        (1'b0),                                                      // (terminated)
		.out_channel       ()                                                           // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) fifo_source_01_in_agent (
		.clk                     (clk_0_clk_clk),                                      //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),         //       clk_reset.reset
		.m0_address              (fifo_source_01_in_agent_m0_address),                 //              m0.address
		.m0_burstcount           (fifo_source_01_in_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (fifo_source_01_in_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (fifo_source_01_in_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (fifo_source_01_in_agent_m0_lock),                    //                .lock
		.m0_readdata             (fifo_source_01_in_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (fifo_source_01_in_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (fifo_source_01_in_agent_m0_read),                    //                .read
		.m0_waitrequest          (fifo_source_01_in_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (fifo_source_01_in_agent_m0_writedata),               //                .writedata
		.m0_write                (fifo_source_01_in_agent_m0_write),                   //                .write
		.rp_endofpacket          (fifo_source_01_in_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (fifo_source_01_in_agent_rp_ready),                   //                .ready
		.rp_valid                (fifo_source_01_in_agent_rp_valid),                   //                .valid
		.rp_data                 (fifo_source_01_in_agent_rp_data),                    //                .data
		.rp_startofpacket        (fifo_source_01_in_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_020_src_ready),                              //              cp.ready
		.cp_valid                (cmd_mux_020_src_valid),                              //                .valid
		.cp_data                 (cmd_mux_020_src_data),                               //                .data
		.cp_startofpacket        (cmd_mux_020_src_startofpacket),                      //                .startofpacket
		.cp_endofpacket          (cmd_mux_020_src_endofpacket),                        //                .endofpacket
		.cp_channel              (cmd_mux_020_src_channel),                            //                .channel
		.rf_sink_ready           (fifo_source_01_in_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (fifo_source_01_in_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (fifo_source_01_in_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (fifo_source_01_in_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (fifo_source_01_in_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (fifo_source_01_in_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (fifo_source_01_in_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (fifo_source_01_in_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (fifo_source_01_in_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (fifo_source_01_in_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_020_out_0_ready),                  // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_020_out_0_valid),                  //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_020_out_0_data),                   //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_020_out_0_error),                  //                .error
		.rdata_fifo_src_ready    (fifo_source_01_in_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (fifo_source_01_in_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (fifo_source_01_in_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) fifo_source_01_in_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                      //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),         // clk_reset.reset
		.in_data           (fifo_source_01_in_agent_rf_source_data),             //        in.data
		.in_valid          (fifo_source_01_in_agent_rf_source_valid),            //          .valid
		.in_ready          (fifo_source_01_in_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (fifo_source_01_in_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (fifo_source_01_in_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (fifo_source_01_in_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (fifo_source_01_in_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (fifo_source_01_in_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (fifo_source_01_in_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (fifo_source_01_in_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                              // (terminated)
		.csr_read          (1'b0),                                               // (terminated)
		.csr_write         (1'b0),                                               // (terminated)
		.csr_readdata      (),                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),               // (terminated)
		.almost_full_data  (),                                                   // (terminated)
		.almost_empty_data (),                                                   // (terminated)
		.in_empty          (1'b0),                                               // (terminated)
		.out_empty         (),                                                   // (terminated)
		.in_error          (1'b0),                                               // (terminated)
		.out_error         (),                                                   // (terminated)
		.in_channel        (1'b0),                                               // (terminated)
		.out_channel       ()                                                    // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) fifo_sink_01_in_csr_agent (
		.clk                     (clk_0_clk_clk),                                        //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),           //       clk_reset.reset
		.m0_address              (fifo_sink_01_in_csr_agent_m0_address),                 //              m0.address
		.m0_burstcount           (fifo_sink_01_in_csr_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (fifo_sink_01_in_csr_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (fifo_sink_01_in_csr_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (fifo_sink_01_in_csr_agent_m0_lock),                    //                .lock
		.m0_readdata             (fifo_sink_01_in_csr_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (fifo_sink_01_in_csr_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (fifo_sink_01_in_csr_agent_m0_read),                    //                .read
		.m0_waitrequest          (fifo_sink_01_in_csr_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (fifo_sink_01_in_csr_agent_m0_writedata),               //                .writedata
		.m0_write                (fifo_sink_01_in_csr_agent_m0_write),                   //                .write
		.rp_endofpacket          (fifo_sink_01_in_csr_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (fifo_sink_01_in_csr_agent_rp_ready),                   //                .ready
		.rp_valid                (fifo_sink_01_in_csr_agent_rp_valid),                   //                .valid
		.rp_data                 (fifo_sink_01_in_csr_agent_rp_data),                    //                .data
		.rp_startofpacket        (fifo_sink_01_in_csr_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_021_src_ready),                                //              cp.ready
		.cp_valid                (cmd_mux_021_src_valid),                                //                .valid
		.cp_data                 (cmd_mux_021_src_data),                                 //                .data
		.cp_startofpacket        (cmd_mux_021_src_startofpacket),                        //                .startofpacket
		.cp_endofpacket          (cmd_mux_021_src_endofpacket),                          //                .endofpacket
		.cp_channel              (cmd_mux_021_src_channel),                              //                .channel
		.rf_sink_ready           (fifo_sink_01_in_csr_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (fifo_sink_01_in_csr_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (fifo_sink_01_in_csr_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (fifo_sink_01_in_csr_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (fifo_sink_01_in_csr_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (fifo_sink_01_in_csr_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (fifo_sink_01_in_csr_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (fifo_sink_01_in_csr_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (fifo_sink_01_in_csr_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (fifo_sink_01_in_csr_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_021_out_0_ready),                    // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_021_out_0_valid),                    //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_021_out_0_data),                     //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_021_out_0_error),                    //                .error
		.rdata_fifo_src_ready    (fifo_sink_01_in_csr_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (fifo_sink_01_in_csr_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (fifo_sink_01_in_csr_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) fifo_sink_01_in_csr_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                        //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),           // clk_reset.reset
		.in_data           (fifo_sink_01_in_csr_agent_rf_source_data),             //        in.data
		.in_valid          (fifo_sink_01_in_csr_agent_rf_source_valid),            //          .valid
		.in_ready          (fifo_sink_01_in_csr_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (fifo_sink_01_in_csr_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (fifo_sink_01_in_csr_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (fifo_sink_01_in_csr_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (fifo_sink_01_in_csr_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (fifo_sink_01_in_csr_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (fifo_sink_01_in_csr_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (fifo_sink_01_in_csr_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                // (terminated)
		.csr_read          (1'b0),                                                 // (terminated)
		.csr_write         (1'b0),                                                 // (terminated)
		.csr_readdata      (),                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                 // (terminated)
		.almost_full_data  (),                                                     // (terminated)
		.almost_empty_data (),                                                     // (terminated)
		.in_empty          (1'b0),                                                 // (terminated)
		.out_empty         (),                                                     // (terminated)
		.in_error          (1'b0),                                                 // (terminated)
		.out_error         (),                                                     // (terminated)
		.in_channel        (1'b0),                                                 // (terminated)
		.out_channel       ()                                                      // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) fifo_source_01_in_csr_agent (
		.clk                     (clk_0_clk_clk),                                          //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),             //       clk_reset.reset
		.m0_address              (fifo_source_01_in_csr_agent_m0_address),                 //              m0.address
		.m0_burstcount           (fifo_source_01_in_csr_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (fifo_source_01_in_csr_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (fifo_source_01_in_csr_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (fifo_source_01_in_csr_agent_m0_lock),                    //                .lock
		.m0_readdata             (fifo_source_01_in_csr_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (fifo_source_01_in_csr_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (fifo_source_01_in_csr_agent_m0_read),                    //                .read
		.m0_waitrequest          (fifo_source_01_in_csr_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (fifo_source_01_in_csr_agent_m0_writedata),               //                .writedata
		.m0_write                (fifo_source_01_in_csr_agent_m0_write),                   //                .write
		.rp_endofpacket          (fifo_source_01_in_csr_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (fifo_source_01_in_csr_agent_rp_ready),                   //                .ready
		.rp_valid                (fifo_source_01_in_csr_agent_rp_valid),                   //                .valid
		.rp_data                 (fifo_source_01_in_csr_agent_rp_data),                    //                .data
		.rp_startofpacket        (fifo_source_01_in_csr_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_022_src_ready),                                  //              cp.ready
		.cp_valid                (cmd_mux_022_src_valid),                                  //                .valid
		.cp_data                 (cmd_mux_022_src_data),                                   //                .data
		.cp_startofpacket        (cmd_mux_022_src_startofpacket),                          //                .startofpacket
		.cp_endofpacket          (cmd_mux_022_src_endofpacket),                            //                .endofpacket
		.cp_channel              (cmd_mux_022_src_channel),                                //                .channel
		.rf_sink_ready           (fifo_source_01_in_csr_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (fifo_source_01_in_csr_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (fifo_source_01_in_csr_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (fifo_source_01_in_csr_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (fifo_source_01_in_csr_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (fifo_source_01_in_csr_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (fifo_source_01_in_csr_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (fifo_source_01_in_csr_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (fifo_source_01_in_csr_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (fifo_source_01_in_csr_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_022_out_0_ready),                      // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_022_out_0_valid),                      //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_022_out_0_data),                       //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_022_out_0_error),                      //                .error
		.rdata_fifo_src_ready    (fifo_source_01_in_csr_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (fifo_source_01_in_csr_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (fifo_source_01_in_csr_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) fifo_source_01_in_csr_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                          //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),             // clk_reset.reset
		.in_data           (fifo_source_01_in_csr_agent_rf_source_data),             //        in.data
		.in_valid          (fifo_source_01_in_csr_agent_rf_source_valid),            //          .valid
		.in_ready          (fifo_source_01_in_csr_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (fifo_source_01_in_csr_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (fifo_source_01_in_csr_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (fifo_source_01_in_csr_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (fifo_source_01_in_csr_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (fifo_source_01_in_csr_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (fifo_source_01_in_csr_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (fifo_source_01_in_csr_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) fifo_sink_01_out_agent (
		.clk                     (clk_0_clk_clk),                                     //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),        //       clk_reset.reset
		.m0_address              (fifo_sink_01_out_agent_m0_address),                 //              m0.address
		.m0_burstcount           (fifo_sink_01_out_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (fifo_sink_01_out_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (fifo_sink_01_out_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (fifo_sink_01_out_agent_m0_lock),                    //                .lock
		.m0_readdata             (fifo_sink_01_out_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (fifo_sink_01_out_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (fifo_sink_01_out_agent_m0_read),                    //                .read
		.m0_waitrequest          (fifo_sink_01_out_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (fifo_sink_01_out_agent_m0_writedata),               //                .writedata
		.m0_write                (fifo_sink_01_out_agent_m0_write),                   //                .write
		.rp_endofpacket          (fifo_sink_01_out_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (fifo_sink_01_out_agent_rp_ready),                   //                .ready
		.rp_valid                (fifo_sink_01_out_agent_rp_valid),                   //                .valid
		.rp_data                 (fifo_sink_01_out_agent_rp_data),                    //                .data
		.rp_startofpacket        (fifo_sink_01_out_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_023_src_ready),                             //              cp.ready
		.cp_valid                (cmd_mux_023_src_valid),                             //                .valid
		.cp_data                 (cmd_mux_023_src_data),                              //                .data
		.cp_startofpacket        (cmd_mux_023_src_startofpacket),                     //                .startofpacket
		.cp_endofpacket          (cmd_mux_023_src_endofpacket),                       //                .endofpacket
		.cp_channel              (cmd_mux_023_src_channel),                           //                .channel
		.rf_sink_ready           (fifo_sink_01_out_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (fifo_sink_01_out_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (fifo_sink_01_out_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (fifo_sink_01_out_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (fifo_sink_01_out_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (fifo_sink_01_out_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (fifo_sink_01_out_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (fifo_sink_01_out_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (fifo_sink_01_out_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (fifo_sink_01_out_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_023_out_0_ready),                 // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_023_out_0_valid),                 //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_023_out_0_data),                  //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_023_out_0_error),                 //                .error
		.rdata_fifo_src_ready    (fifo_sink_01_out_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (fifo_sink_01_out_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (fifo_sink_01_out_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                             //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                               //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) fifo_sink_01_out_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                     //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),        // clk_reset.reset
		.in_data           (fifo_sink_01_out_agent_rf_source_data),             //        in.data
		.in_valid          (fifo_sink_01_out_agent_rf_source_valid),            //          .valid
		.in_ready          (fifo_sink_01_out_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (fifo_sink_01_out_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (fifo_sink_01_out_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (fifo_sink_01_out_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (fifo_sink_01_out_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (fifo_sink_01_out_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (fifo_sink_01_out_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (fifo_sink_01_out_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                             // (terminated)
		.csr_read          (1'b0),                                              // (terminated)
		.csr_write         (1'b0),                                              // (terminated)
		.csr_readdata      (),                                                  // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),              // (terminated)
		.almost_full_data  (),                                                  // (terminated)
		.almost_empty_data (),                                                  // (terminated)
		.in_empty          (1'b0),                                              // (terminated)
		.out_empty         (),                                                  // (terminated)
		.in_error          (1'b0),                                              // (terminated)
		.out_error         (),                                                  // (terminated)
		.in_channel        (1'b0),                                              // (terminated)
		.out_channel       ()                                                   // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (95),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_TRANS_LOCK            (56),
		.PKT_BEGIN_BURST           (71),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (25),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) data_mem_01_s1_agent (
		.clk                     (clk_0_clk_clk),                                   //             clk.clk
		.reset                   (nios2_00_reset_reset_bridge_in_reset_reset),      //       clk_reset.reset
		.m0_address              (data_mem_01_s1_agent_m0_address),                 //              m0.address
		.m0_burstcount           (data_mem_01_s1_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (data_mem_01_s1_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (data_mem_01_s1_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (data_mem_01_s1_agent_m0_lock),                    //                .lock
		.m0_readdata             (data_mem_01_s1_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (data_mem_01_s1_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (data_mem_01_s1_agent_m0_read),                    //                .read
		.m0_waitrequest          (data_mem_01_s1_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (data_mem_01_s1_agent_m0_writedata),               //                .writedata
		.m0_write                (data_mem_01_s1_agent_m0_write),                   //                .write
		.rp_endofpacket          (data_mem_01_s1_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (data_mem_01_s1_agent_rp_ready),                   //                .ready
		.rp_valid                (data_mem_01_s1_agent_rp_valid),                   //                .valid
		.rp_data                 (data_mem_01_s1_agent_rp_data),                    //                .data
		.rp_startofpacket        (data_mem_01_s1_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_024_src_ready),                           //              cp.ready
		.cp_valid                (cmd_mux_024_src_valid),                           //                .valid
		.cp_data                 (cmd_mux_024_src_data),                            //                .data
		.cp_startofpacket        (cmd_mux_024_src_startofpacket),                   //                .startofpacket
		.cp_endofpacket          (cmd_mux_024_src_endofpacket),                     //                .endofpacket
		.cp_channel              (cmd_mux_024_src_channel),                         //                .channel
		.rf_sink_ready           (data_mem_01_s1_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (data_mem_01_s1_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (data_mem_01_s1_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (data_mem_01_s1_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (data_mem_01_s1_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (data_mem_01_s1_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (data_mem_01_s1_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (data_mem_01_s1_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (data_mem_01_s1_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (data_mem_01_s1_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_024_out_0_ready),               // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_024_out_0_valid),               //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_024_out_0_data),                //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_024_out_0_error),               //                .error
		.rdata_fifo_src_ready    (data_mem_01_s1_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (data_mem_01_s1_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (data_mem_01_s1_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                           //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) data_mem_01_s1_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                   //       clk.clk
		.reset             (nios2_00_reset_reset_bridge_in_reset_reset),      // clk_reset.reset
		.in_data           (data_mem_01_s1_agent_rf_source_data),             //        in.data
		.in_valid          (data_mem_01_s1_agent_rf_source_valid),            //          .valid
		.in_ready          (data_mem_01_s1_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (data_mem_01_s1_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (data_mem_01_s1_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (data_mem_01_s1_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (data_mem_01_s1_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (data_mem_01_s1_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (data_mem_01_s1_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (data_mem_01_s1_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                           // (terminated)
		.csr_read          (1'b0),                                            // (terminated)
		.csr_write         (1'b0),                                            // (terminated)
		.csr_readdata      (),                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),            // (terminated)
		.almost_full_data  (),                                                // (terminated)
		.almost_empty_data (),                                                // (terminated)
		.in_empty          (1'b0),                                            // (terminated)
		.out_empty         (),                                                // (terminated)
		.in_error          (1'b0),                                            // (terminated)
		.out_error         (),                                                // (terminated)
		.in_channel        (1'b0),                                            // (terminated)
		.out_channel       ()                                                 // (terminated)
	);

	qsys_system_mm_interconnect_0_router router (
		.sink_ready         (nios2_00_data_master_agent_cp_ready),         //      sink.ready
		.sink_valid         (nios2_00_data_master_agent_cp_valid),         //          .valid
		.sink_data          (nios2_00_data_master_agent_cp_data),          //          .data
		.sink_startofpacket (nios2_00_data_master_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios2_00_data_master_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset),  // clk_reset.reset
		.src_ready          (router_src_ready),                            //       src.ready
		.src_valid          (router_src_valid),                            //          .valid
		.src_data           (router_src_data),                             //          .data
		.src_channel        (router_src_channel),                          //          .channel
		.src_startofpacket  (router_src_startofpacket),                    //          .startofpacket
		.src_endofpacket    (router_src_endofpacket)                       //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_001 router_001 (
		.sink_ready         (nios2_01_data_master_agent_cp_ready),         //      sink.ready
		.sink_valid         (nios2_01_data_master_agent_cp_valid),         //          .valid
		.sink_data          (nios2_01_data_master_agent_cp_data),          //          .data
		.sink_startofpacket (nios2_01_data_master_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios2_01_data_master_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset),  // clk_reset.reset
		.src_ready          (router_001_src_ready),                        //       src.ready
		.src_valid          (router_001_src_valid),                        //          .valid
		.src_data           (router_001_src_data),                         //          .data
		.src_channel        (router_001_src_channel),                      //          .channel
		.src_startofpacket  (router_001_src_startofpacket),                //          .startofpacket
		.src_endofpacket    (router_001_src_endofpacket)                   //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_002 router_002 (
		.sink_ready         (nios2_10_data_master_agent_cp_ready),         //      sink.ready
		.sink_valid         (nios2_10_data_master_agent_cp_valid),         //          .valid
		.sink_data          (nios2_10_data_master_agent_cp_data),          //          .data
		.sink_startofpacket (nios2_10_data_master_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios2_10_data_master_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset),  // clk_reset.reset
		.src_ready          (router_002_src_ready),                        //       src.ready
		.src_valid          (router_002_src_valid),                        //          .valid
		.src_data           (router_002_src_data),                         //          .data
		.src_channel        (router_002_src_channel),                      //          .channel
		.src_startofpacket  (router_002_src_startofpacket),                //          .startofpacket
		.src_endofpacket    (router_002_src_endofpacket)                   //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_003 router_003 (
		.sink_ready         (nios2_11_data_master_agent_cp_ready),         //      sink.ready
		.sink_valid         (nios2_11_data_master_agent_cp_valid),         //          .valid
		.sink_data          (nios2_11_data_master_agent_cp_data),          //          .data
		.sink_startofpacket (nios2_11_data_master_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios2_11_data_master_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset),  // clk_reset.reset
		.src_ready          (router_003_src_ready),                        //       src.ready
		.src_valid          (router_003_src_valid),                        //          .valid
		.src_data           (router_003_src_data),                         //          .data
		.src_channel        (router_003_src_channel),                      //          .channel
		.src_startofpacket  (router_003_src_startofpacket),                //          .startofpacket
		.src_endofpacket    (router_003_src_endofpacket)                   //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_004 router_004 (
		.sink_ready         (nios2_11_instruction_master_agent_cp_ready),         //      sink.ready
		.sink_valid         (nios2_11_instruction_master_agent_cp_valid),         //          .valid
		.sink_data          (nios2_11_instruction_master_agent_cp_data),          //          .data
		.sink_startofpacket (nios2_11_instruction_master_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios2_11_instruction_master_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset),         // clk_reset.reset
		.src_ready          (router_004_src_ready),                               //       src.ready
		.src_valid          (router_004_src_valid),                               //          .valid
		.src_data           (router_004_src_data),                                //          .data
		.src_channel        (router_004_src_channel),                             //          .channel
		.src_startofpacket  (router_004_src_startofpacket),                       //          .startofpacket
		.src_endofpacket    (router_004_src_endofpacket)                          //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_005 router_005 (
		.sink_ready         (nios2_10_instruction_master_agent_cp_ready),         //      sink.ready
		.sink_valid         (nios2_10_instruction_master_agent_cp_valid),         //          .valid
		.sink_data          (nios2_10_instruction_master_agent_cp_data),          //          .data
		.sink_startofpacket (nios2_10_instruction_master_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios2_10_instruction_master_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset),         // clk_reset.reset
		.src_ready          (router_005_src_ready),                               //       src.ready
		.src_valid          (router_005_src_valid),                               //          .valid
		.src_data           (router_005_src_data),                                //          .data
		.src_channel        (router_005_src_channel),                             //          .channel
		.src_startofpacket  (router_005_src_startofpacket),                       //          .startofpacket
		.src_endofpacket    (router_005_src_endofpacket)                          //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_006 router_006 (
		.sink_ready         (nios2_01_instruction_master_agent_cp_ready),         //      sink.ready
		.sink_valid         (nios2_01_instruction_master_agent_cp_valid),         //          .valid
		.sink_data          (nios2_01_instruction_master_agent_cp_data),          //          .data
		.sink_startofpacket (nios2_01_instruction_master_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios2_01_instruction_master_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset),         // clk_reset.reset
		.src_ready          (router_006_src_ready),                               //       src.ready
		.src_valid          (router_006_src_valid),                               //          .valid
		.src_data           (router_006_src_data),                                //          .data
		.src_channel        (router_006_src_channel),                             //          .channel
		.src_startofpacket  (router_006_src_startofpacket),                       //          .startofpacket
		.src_endofpacket    (router_006_src_endofpacket)                          //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_007 router_007 (
		.sink_ready         (nios2_00_instruction_master_agent_cp_ready),         //      sink.ready
		.sink_valid         (nios2_00_instruction_master_agent_cp_valid),         //          .valid
		.sink_data          (nios2_00_instruction_master_agent_cp_data),          //          .data
		.sink_startofpacket (nios2_00_instruction_master_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios2_00_instruction_master_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                      //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset),         // clk_reset.reset
		.src_ready          (router_007_src_ready),                               //       src.ready
		.src_valid          (router_007_src_valid),                               //          .valid
		.src_data           (router_007_src_data),                                //          .data
		.src_channel        (router_007_src_channel),                             //          .channel
		.src_startofpacket  (router_007_src_startofpacket),                       //          .startofpacket
		.src_endofpacket    (router_007_src_endofpacket)                          //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_008 router_008 (
		.sink_ready         (jtag_uart_0_avalon_jtag_slave_agent_rp_ready),         //      sink.ready
		.sink_valid         (jtag_uart_0_avalon_jtag_slave_agent_rp_valid),         //          .valid
		.sink_data          (jtag_uart_0_avalon_jtag_slave_agent_rp_data),          //          .data
		.sink_startofpacket (jtag_uart_0_avalon_jtag_slave_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (jtag_uart_0_avalon_jtag_slave_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                        //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset),           // clk_reset.reset
		.src_ready          (router_008_src_ready),                                 //       src.ready
		.src_valid          (router_008_src_valid),                                 //          .valid
		.src_data           (router_008_src_data),                                  //          .data
		.src_channel        (router_008_src_channel),                               //          .channel
		.src_startofpacket  (router_008_src_startofpacket),                         //          .startofpacket
		.src_endofpacket    (router_008_src_endofpacket)                            //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_009 router_009 (
		.sink_ready         (nios2_00_debug_mem_slave_agent_rp_ready),         //      sink.ready
		.sink_valid         (nios2_00_debug_mem_slave_agent_rp_valid),         //          .valid
		.sink_data          (nios2_00_debug_mem_slave_agent_rp_data),          //          .data
		.sink_startofpacket (nios2_00_debug_mem_slave_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios2_00_debug_mem_slave_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                   //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset),      // clk_reset.reset
		.src_ready          (router_009_src_ready),                            //       src.ready
		.src_valid          (router_009_src_valid),                            //          .valid
		.src_data           (router_009_src_data),                             //          .data
		.src_channel        (router_009_src_channel),                          //          .channel
		.src_startofpacket  (router_009_src_startofpacket),                    //          .startofpacket
		.src_endofpacket    (router_009_src_endofpacket)                       //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_010 router_010 (
		.sink_ready         (fifo_source_00_in_agent_rp_ready),           //      sink.ready
		.sink_valid         (fifo_source_00_in_agent_rp_valid),           //          .valid
		.sink_data          (fifo_source_00_in_agent_rp_data),            //          .data
		.sink_startofpacket (fifo_source_00_in_agent_rp_startofpacket),   //          .startofpacket
		.sink_endofpacket   (fifo_source_00_in_agent_rp_endofpacket),     //          .endofpacket
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_010_src_ready),                       //       src.ready
		.src_valid          (router_010_src_valid),                       //          .valid
		.src_data           (router_010_src_data),                        //          .data
		.src_channel        (router_010_src_channel),                     //          .channel
		.src_startofpacket  (router_010_src_startofpacket),               //          .startofpacket
		.src_endofpacket    (router_010_src_endofpacket)                  //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_010 router_011 (
		.sink_ready         (fifo_sink_00_in_csr_agent_rp_ready),         //      sink.ready
		.sink_valid         (fifo_sink_00_in_csr_agent_rp_valid),         //          .valid
		.sink_data          (fifo_sink_00_in_csr_agent_rp_data),          //          .data
		.sink_startofpacket (fifo_sink_00_in_csr_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (fifo_sink_00_in_csr_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_011_src_ready),                       //       src.ready
		.src_valid          (router_011_src_valid),                       //          .valid
		.src_data           (router_011_src_data),                        //          .data
		.src_channel        (router_011_src_channel),                     //          .channel
		.src_startofpacket  (router_011_src_startofpacket),               //          .startofpacket
		.src_endofpacket    (router_011_src_endofpacket)                  //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_010 router_012 (
		.sink_ready         (fifo_source_00_in_csr_agent_rp_ready),         //      sink.ready
		.sink_valid         (fifo_source_00_in_csr_agent_rp_valid),         //          .valid
		.sink_data          (fifo_source_00_in_csr_agent_rp_data),          //          .data
		.sink_startofpacket (fifo_source_00_in_csr_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (fifo_source_00_in_csr_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset),   // clk_reset.reset
		.src_ready          (router_012_src_ready),                         //       src.ready
		.src_valid          (router_012_src_valid),                         //          .valid
		.src_data           (router_012_src_data),                          //          .data
		.src_channel        (router_012_src_channel),                       //          .channel
		.src_startofpacket  (router_012_src_startofpacket),                 //          .startofpacket
		.src_endofpacket    (router_012_src_endofpacket)                    //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_010 router_013 (
		.sink_ready         (fifo_sink_00_out_agent_rp_ready),            //      sink.ready
		.sink_valid         (fifo_sink_00_out_agent_rp_valid),            //          .valid
		.sink_data          (fifo_sink_00_out_agent_rp_data),             //          .data
		.sink_startofpacket (fifo_sink_00_out_agent_rp_startofpacket),    //          .startofpacket
		.sink_endofpacket   (fifo_sink_00_out_agent_rp_endofpacket),      //          .endofpacket
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_013_src_ready),                       //       src.ready
		.src_valid          (router_013_src_valid),                       //          .valid
		.src_data           (router_013_src_data),                        //          .data
		.src_channel        (router_013_src_channel),                     //          .channel
		.src_startofpacket  (router_013_src_startofpacket),               //          .startofpacket
		.src_endofpacket    (router_013_src_endofpacket)                  //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_009 router_014 (
		.sink_ready         (data_mem_00_s1_agent_rp_ready),              //      sink.ready
		.sink_valid         (data_mem_00_s1_agent_rp_valid),              //          .valid
		.sink_data          (data_mem_00_s1_agent_rp_data),               //          .data
		.sink_startofpacket (data_mem_00_s1_agent_rp_startofpacket),      //          .startofpacket
		.sink_endofpacket   (data_mem_00_s1_agent_rp_endofpacket),        //          .endofpacket
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_014_src_ready),                       //       src.ready
		.src_valid          (router_014_src_valid),                       //          .valid
		.src_data           (router_014_src_data),                        //          .data
		.src_channel        (router_014_src_channel),                     //          .channel
		.src_startofpacket  (router_014_src_startofpacket),               //          .startofpacket
		.src_endofpacket    (router_014_src_endofpacket)                  //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_015 router_015 (
		.sink_ready         (nios2_11_debug_mem_slave_agent_rp_ready),         //      sink.ready
		.sink_valid         (nios2_11_debug_mem_slave_agent_rp_valid),         //          .valid
		.sink_data          (nios2_11_debug_mem_slave_agent_rp_data),          //          .data
		.sink_startofpacket (nios2_11_debug_mem_slave_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios2_11_debug_mem_slave_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                   //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset),      // clk_reset.reset
		.src_ready          (router_015_src_ready),                            //       src.ready
		.src_valid          (router_015_src_valid),                            //          .valid
		.src_data           (router_015_src_data),                             //          .data
		.src_channel        (router_015_src_channel),                          //          .channel
		.src_startofpacket  (router_015_src_startofpacket),                    //          .startofpacket
		.src_endofpacket    (router_015_src_endofpacket)                       //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_016 router_016 (
		.sink_ready         (fifo_source_11_in_agent_rp_ready),           //      sink.ready
		.sink_valid         (fifo_source_11_in_agent_rp_valid),           //          .valid
		.sink_data          (fifo_source_11_in_agent_rp_data),            //          .data
		.sink_startofpacket (fifo_source_11_in_agent_rp_startofpacket),   //          .startofpacket
		.sink_endofpacket   (fifo_source_11_in_agent_rp_endofpacket),     //          .endofpacket
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_016_src_ready),                       //       src.ready
		.src_valid          (router_016_src_valid),                       //          .valid
		.src_data           (router_016_src_data),                        //          .data
		.src_channel        (router_016_src_channel),                     //          .channel
		.src_startofpacket  (router_016_src_startofpacket),               //          .startofpacket
		.src_endofpacket    (router_016_src_endofpacket)                  //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_016 router_017 (
		.sink_ready         (fifo_sink_11_in_csr_agent_rp_ready),         //      sink.ready
		.sink_valid         (fifo_sink_11_in_csr_agent_rp_valid),         //          .valid
		.sink_data          (fifo_sink_11_in_csr_agent_rp_data),          //          .data
		.sink_startofpacket (fifo_sink_11_in_csr_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (fifo_sink_11_in_csr_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_017_src_ready),                       //       src.ready
		.src_valid          (router_017_src_valid),                       //          .valid
		.src_data           (router_017_src_data),                        //          .data
		.src_channel        (router_017_src_channel),                     //          .channel
		.src_startofpacket  (router_017_src_startofpacket),               //          .startofpacket
		.src_endofpacket    (router_017_src_endofpacket)                  //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_016 router_018 (
		.sink_ready         (fifo_source_11_in_csr_agent_rp_ready),         //      sink.ready
		.sink_valid         (fifo_source_11_in_csr_agent_rp_valid),         //          .valid
		.sink_data          (fifo_source_11_in_csr_agent_rp_data),          //          .data
		.sink_startofpacket (fifo_source_11_in_csr_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (fifo_source_11_in_csr_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset),   // clk_reset.reset
		.src_ready          (router_018_src_ready),                         //       src.ready
		.src_valid          (router_018_src_valid),                         //          .valid
		.src_data           (router_018_src_data),                          //          .data
		.src_channel        (router_018_src_channel),                       //          .channel
		.src_startofpacket  (router_018_src_startofpacket),                 //          .startofpacket
		.src_endofpacket    (router_018_src_endofpacket)                    //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_016 router_019 (
		.sink_ready         (fifo_sink_11_out_agent_rp_ready),            //      sink.ready
		.sink_valid         (fifo_sink_11_out_agent_rp_valid),            //          .valid
		.sink_data          (fifo_sink_11_out_agent_rp_data),             //          .data
		.sink_startofpacket (fifo_sink_11_out_agent_rp_startofpacket),    //          .startofpacket
		.sink_endofpacket   (fifo_sink_11_out_agent_rp_endofpacket),      //          .endofpacket
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_019_src_ready),                       //       src.ready
		.src_valid          (router_019_src_valid),                       //          .valid
		.src_data           (router_019_src_data),                        //          .data
		.src_channel        (router_019_src_channel),                     //          .channel
		.src_startofpacket  (router_019_src_startofpacket),               //          .startofpacket
		.src_endofpacket    (router_019_src_endofpacket)                  //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_015 router_020 (
		.sink_ready         (data_mem_11_s1_agent_rp_ready),              //      sink.ready
		.sink_valid         (data_mem_11_s1_agent_rp_valid),              //          .valid
		.sink_data          (data_mem_11_s1_agent_rp_data),               //          .data
		.sink_startofpacket (data_mem_11_s1_agent_rp_startofpacket),      //          .startofpacket
		.sink_endofpacket   (data_mem_11_s1_agent_rp_endofpacket),        //          .endofpacket
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_020_src_ready),                       //       src.ready
		.src_valid          (router_020_src_valid),                       //          .valid
		.src_data           (router_020_src_data),                        //          .data
		.src_channel        (router_020_src_channel),                     //          .channel
		.src_startofpacket  (router_020_src_startofpacket),               //          .startofpacket
		.src_endofpacket    (router_020_src_endofpacket)                  //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_021 router_021 (
		.sink_ready         (nios2_10_debug_mem_slave_agent_rp_ready),         //      sink.ready
		.sink_valid         (nios2_10_debug_mem_slave_agent_rp_valid),         //          .valid
		.sink_data          (nios2_10_debug_mem_slave_agent_rp_data),          //          .data
		.sink_startofpacket (nios2_10_debug_mem_slave_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios2_10_debug_mem_slave_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                   //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset),      // clk_reset.reset
		.src_ready          (router_021_src_ready),                            //       src.ready
		.src_valid          (router_021_src_valid),                            //          .valid
		.src_data           (router_021_src_data),                             //          .data
		.src_channel        (router_021_src_channel),                          //          .channel
		.src_startofpacket  (router_021_src_startofpacket),                    //          .startofpacket
		.src_endofpacket    (router_021_src_endofpacket)                       //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_022 router_022 (
		.sink_ready         (fifo_source_10_in_agent_rp_ready),           //      sink.ready
		.sink_valid         (fifo_source_10_in_agent_rp_valid),           //          .valid
		.sink_data          (fifo_source_10_in_agent_rp_data),            //          .data
		.sink_startofpacket (fifo_source_10_in_agent_rp_startofpacket),   //          .startofpacket
		.sink_endofpacket   (fifo_source_10_in_agent_rp_endofpacket),     //          .endofpacket
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_022_src_ready),                       //       src.ready
		.src_valid          (router_022_src_valid),                       //          .valid
		.src_data           (router_022_src_data),                        //          .data
		.src_channel        (router_022_src_channel),                     //          .channel
		.src_startofpacket  (router_022_src_startofpacket),               //          .startofpacket
		.src_endofpacket    (router_022_src_endofpacket)                  //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_022 router_023 (
		.sink_ready         (fifo_sink_10_in_csr_agent_rp_ready),         //      sink.ready
		.sink_valid         (fifo_sink_10_in_csr_agent_rp_valid),         //          .valid
		.sink_data          (fifo_sink_10_in_csr_agent_rp_data),          //          .data
		.sink_startofpacket (fifo_sink_10_in_csr_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (fifo_sink_10_in_csr_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_023_src_ready),                       //       src.ready
		.src_valid          (router_023_src_valid),                       //          .valid
		.src_data           (router_023_src_data),                        //          .data
		.src_channel        (router_023_src_channel),                     //          .channel
		.src_startofpacket  (router_023_src_startofpacket),               //          .startofpacket
		.src_endofpacket    (router_023_src_endofpacket)                  //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_022 router_024 (
		.sink_ready         (fifo_source_10_in_csr_agent_rp_ready),         //      sink.ready
		.sink_valid         (fifo_source_10_in_csr_agent_rp_valid),         //          .valid
		.sink_data          (fifo_source_10_in_csr_agent_rp_data),          //          .data
		.sink_startofpacket (fifo_source_10_in_csr_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (fifo_source_10_in_csr_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset),   // clk_reset.reset
		.src_ready          (router_024_src_ready),                         //       src.ready
		.src_valid          (router_024_src_valid),                         //          .valid
		.src_data           (router_024_src_data),                          //          .data
		.src_channel        (router_024_src_channel),                       //          .channel
		.src_startofpacket  (router_024_src_startofpacket),                 //          .startofpacket
		.src_endofpacket    (router_024_src_endofpacket)                    //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_022 router_025 (
		.sink_ready         (fifo_sink_10_out_agent_rp_ready),            //      sink.ready
		.sink_valid         (fifo_sink_10_out_agent_rp_valid),            //          .valid
		.sink_data          (fifo_sink_10_out_agent_rp_data),             //          .data
		.sink_startofpacket (fifo_sink_10_out_agent_rp_startofpacket),    //          .startofpacket
		.sink_endofpacket   (fifo_sink_10_out_agent_rp_endofpacket),      //          .endofpacket
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_025_src_ready),                       //       src.ready
		.src_valid          (router_025_src_valid),                       //          .valid
		.src_data           (router_025_src_data),                        //          .data
		.src_channel        (router_025_src_channel),                     //          .channel
		.src_startofpacket  (router_025_src_startofpacket),               //          .startofpacket
		.src_endofpacket    (router_025_src_endofpacket)                  //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_021 router_026 (
		.sink_ready         (data_mem_10_s1_agent_rp_ready),              //      sink.ready
		.sink_valid         (data_mem_10_s1_agent_rp_valid),              //          .valid
		.sink_data          (data_mem_10_s1_agent_rp_data),               //          .data
		.sink_startofpacket (data_mem_10_s1_agent_rp_startofpacket),      //          .startofpacket
		.sink_endofpacket   (data_mem_10_s1_agent_rp_endofpacket),        //          .endofpacket
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_026_src_ready),                       //       src.ready
		.src_valid          (router_026_src_valid),                       //          .valid
		.src_data           (router_026_src_data),                        //          .data
		.src_channel        (router_026_src_channel),                     //          .channel
		.src_startofpacket  (router_026_src_startofpacket),               //          .startofpacket
		.src_endofpacket    (router_026_src_endofpacket)                  //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_027 router_027 (
		.sink_ready         (nios2_01_debug_mem_slave_agent_rp_ready),         //      sink.ready
		.sink_valid         (nios2_01_debug_mem_slave_agent_rp_valid),         //          .valid
		.sink_data          (nios2_01_debug_mem_slave_agent_rp_data),          //          .data
		.sink_startofpacket (nios2_01_debug_mem_slave_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios2_01_debug_mem_slave_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                   //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset),      // clk_reset.reset
		.src_ready          (router_027_src_ready),                            //       src.ready
		.src_valid          (router_027_src_valid),                            //          .valid
		.src_data           (router_027_src_data),                             //          .data
		.src_channel        (router_027_src_channel),                          //          .channel
		.src_startofpacket  (router_027_src_startofpacket),                    //          .startofpacket
		.src_endofpacket    (router_027_src_endofpacket)                       //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_028 router_028 (
		.sink_ready         (fifo_source_01_in_agent_rp_ready),           //      sink.ready
		.sink_valid         (fifo_source_01_in_agent_rp_valid),           //          .valid
		.sink_data          (fifo_source_01_in_agent_rp_data),            //          .data
		.sink_startofpacket (fifo_source_01_in_agent_rp_startofpacket),   //          .startofpacket
		.sink_endofpacket   (fifo_source_01_in_agent_rp_endofpacket),     //          .endofpacket
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_028_src_ready),                       //       src.ready
		.src_valid          (router_028_src_valid),                       //          .valid
		.src_data           (router_028_src_data),                        //          .data
		.src_channel        (router_028_src_channel),                     //          .channel
		.src_startofpacket  (router_028_src_startofpacket),               //          .startofpacket
		.src_endofpacket    (router_028_src_endofpacket)                  //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_028 router_029 (
		.sink_ready         (fifo_sink_01_in_csr_agent_rp_ready),         //      sink.ready
		.sink_valid         (fifo_sink_01_in_csr_agent_rp_valid),         //          .valid
		.sink_data          (fifo_sink_01_in_csr_agent_rp_data),          //          .data
		.sink_startofpacket (fifo_sink_01_in_csr_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (fifo_sink_01_in_csr_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_029_src_ready),                       //       src.ready
		.src_valid          (router_029_src_valid),                       //          .valid
		.src_data           (router_029_src_data),                        //          .data
		.src_channel        (router_029_src_channel),                     //          .channel
		.src_startofpacket  (router_029_src_startofpacket),               //          .startofpacket
		.src_endofpacket    (router_029_src_endofpacket)                  //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_028 router_030 (
		.sink_ready         (fifo_source_01_in_csr_agent_rp_ready),         //      sink.ready
		.sink_valid         (fifo_source_01_in_csr_agent_rp_valid),         //          .valid
		.sink_data          (fifo_source_01_in_csr_agent_rp_data),          //          .data
		.sink_startofpacket (fifo_source_01_in_csr_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (fifo_source_01_in_csr_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset),   // clk_reset.reset
		.src_ready          (router_030_src_ready),                         //       src.ready
		.src_valid          (router_030_src_valid),                         //          .valid
		.src_data           (router_030_src_data),                          //          .data
		.src_channel        (router_030_src_channel),                       //          .channel
		.src_startofpacket  (router_030_src_startofpacket),                 //          .startofpacket
		.src_endofpacket    (router_030_src_endofpacket)                    //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_028 router_031 (
		.sink_ready         (fifo_sink_01_out_agent_rp_ready),            //      sink.ready
		.sink_valid         (fifo_sink_01_out_agent_rp_valid),            //          .valid
		.sink_data          (fifo_sink_01_out_agent_rp_data),             //          .data
		.sink_startofpacket (fifo_sink_01_out_agent_rp_startofpacket),    //          .startofpacket
		.sink_endofpacket   (fifo_sink_01_out_agent_rp_endofpacket),      //          .endofpacket
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_031_src_ready),                       //       src.ready
		.src_valid          (router_031_src_valid),                       //          .valid
		.src_data           (router_031_src_data),                        //          .data
		.src_channel        (router_031_src_channel),                     //          .channel
		.src_startofpacket  (router_031_src_startofpacket),               //          .startofpacket
		.src_endofpacket    (router_031_src_endofpacket)                  //          .endofpacket
	);

	qsys_system_mm_interconnect_0_router_027 router_032 (
		.sink_ready         (data_mem_01_s1_agent_rp_ready),              //      sink.ready
		.sink_valid         (data_mem_01_s1_agent_rp_valid),              //          .valid
		.sink_data          (data_mem_01_s1_agent_rp_data),               //          .data
		.sink_startofpacket (data_mem_01_s1_agent_rp_startofpacket),      //          .startofpacket
		.sink_endofpacket   (data_mem_01_s1_agent_rp_endofpacket),        //          .endofpacket
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_032_src_ready),                       //       src.ready
		.src_valid          (router_032_src_valid),                       //          .valid
		.src_data           (router_032_src_data),                        //          .data
		.src_channel        (router_032_src_channel),                     //          .channel
		.src_startofpacket  (router_032_src_startofpacket),               //          .startofpacket
		.src_endofpacket    (router_032_src_endofpacket)                  //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_demux cmd_demux (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_src_ready),                           //      sink.ready
		.sink_channel       (router_src_channel),                         //          .channel
		.sink_data          (router_src_data),                            //          .data
		.sink_startofpacket (router_src_startofpacket),                   //          .startofpacket
		.sink_endofpacket   (router_src_endofpacket),                     //          .endofpacket
		.sink_valid         (router_src_valid),                           //          .valid
		.src0_ready         (cmd_demux_src0_ready),                       //      src0.ready
		.src0_valid         (cmd_demux_src0_valid),                       //          .valid
		.src0_data          (cmd_demux_src0_data),                        //          .data
		.src0_channel       (cmd_demux_src0_channel),                     //          .channel
		.src0_startofpacket (cmd_demux_src0_startofpacket),               //          .startofpacket
		.src0_endofpacket   (cmd_demux_src0_endofpacket),                 //          .endofpacket
		.src1_ready         (cmd_demux_src1_ready),                       //      src1.ready
		.src1_valid         (cmd_demux_src1_valid),                       //          .valid
		.src1_data          (cmd_demux_src1_data),                        //          .data
		.src1_channel       (cmd_demux_src1_channel),                     //          .channel
		.src1_startofpacket (cmd_demux_src1_startofpacket),               //          .startofpacket
		.src1_endofpacket   (cmd_demux_src1_endofpacket),                 //          .endofpacket
		.src2_ready         (cmd_demux_src2_ready),                       //      src2.ready
		.src2_valid         (cmd_demux_src2_valid),                       //          .valid
		.src2_data          (cmd_demux_src2_data),                        //          .data
		.src2_channel       (cmd_demux_src2_channel),                     //          .channel
		.src2_startofpacket (cmd_demux_src2_startofpacket),               //          .startofpacket
		.src2_endofpacket   (cmd_demux_src2_endofpacket),                 //          .endofpacket
		.src3_ready         (cmd_demux_src3_ready),                       //      src3.ready
		.src3_valid         (cmd_demux_src3_valid),                       //          .valid
		.src3_data          (cmd_demux_src3_data),                        //          .data
		.src3_channel       (cmd_demux_src3_channel),                     //          .channel
		.src3_startofpacket (cmd_demux_src3_startofpacket),               //          .startofpacket
		.src3_endofpacket   (cmd_demux_src3_endofpacket),                 //          .endofpacket
		.src4_ready         (cmd_demux_src4_ready),                       //      src4.ready
		.src4_valid         (cmd_demux_src4_valid),                       //          .valid
		.src4_data          (cmd_demux_src4_data),                        //          .data
		.src4_channel       (cmd_demux_src4_channel),                     //          .channel
		.src4_startofpacket (cmd_demux_src4_startofpacket),               //          .startofpacket
		.src4_endofpacket   (cmd_demux_src4_endofpacket),                 //          .endofpacket
		.src5_ready         (cmd_demux_src5_ready),                       //      src5.ready
		.src5_valid         (cmd_demux_src5_valid),                       //          .valid
		.src5_data          (cmd_demux_src5_data),                        //          .data
		.src5_channel       (cmd_demux_src5_channel),                     //          .channel
		.src5_startofpacket (cmd_demux_src5_startofpacket),               //          .startofpacket
		.src5_endofpacket   (cmd_demux_src5_endofpacket),                 //          .endofpacket
		.src6_ready         (cmd_demux_src6_ready),                       //      src6.ready
		.src6_valid         (cmd_demux_src6_valid),                       //          .valid
		.src6_data          (cmd_demux_src6_data),                        //          .data
		.src6_channel       (cmd_demux_src6_channel),                     //          .channel
		.src6_startofpacket (cmd_demux_src6_startofpacket),               //          .startofpacket
		.src6_endofpacket   (cmd_demux_src6_endofpacket)                  //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_demux cmd_demux_001 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_001_src_ready),                       //      sink.ready
		.sink_channel       (router_001_src_channel),                     //          .channel
		.sink_data          (router_001_src_data),                        //          .data
		.sink_startofpacket (router_001_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_001_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_001_src_valid),                       //          .valid
		.src0_ready         (cmd_demux_001_src0_ready),                   //      src0.ready
		.src0_valid         (cmd_demux_001_src0_valid),                   //          .valid
		.src0_data          (cmd_demux_001_src0_data),                    //          .data
		.src0_channel       (cmd_demux_001_src0_channel),                 //          .channel
		.src0_startofpacket (cmd_demux_001_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (cmd_demux_001_src0_endofpacket),             //          .endofpacket
		.src1_ready         (cmd_demux_001_src1_ready),                   //      src1.ready
		.src1_valid         (cmd_demux_001_src1_valid),                   //          .valid
		.src1_data          (cmd_demux_001_src1_data),                    //          .data
		.src1_channel       (cmd_demux_001_src1_channel),                 //          .channel
		.src1_startofpacket (cmd_demux_001_src1_startofpacket),           //          .startofpacket
		.src1_endofpacket   (cmd_demux_001_src1_endofpacket),             //          .endofpacket
		.src2_ready         (cmd_demux_001_src2_ready),                   //      src2.ready
		.src2_valid         (cmd_demux_001_src2_valid),                   //          .valid
		.src2_data          (cmd_demux_001_src2_data),                    //          .data
		.src2_channel       (cmd_demux_001_src2_channel),                 //          .channel
		.src2_startofpacket (cmd_demux_001_src2_startofpacket),           //          .startofpacket
		.src2_endofpacket   (cmd_demux_001_src2_endofpacket),             //          .endofpacket
		.src3_ready         (cmd_demux_001_src3_ready),                   //      src3.ready
		.src3_valid         (cmd_demux_001_src3_valid),                   //          .valid
		.src3_data          (cmd_demux_001_src3_data),                    //          .data
		.src3_channel       (cmd_demux_001_src3_channel),                 //          .channel
		.src3_startofpacket (cmd_demux_001_src3_startofpacket),           //          .startofpacket
		.src3_endofpacket   (cmd_demux_001_src3_endofpacket),             //          .endofpacket
		.src4_ready         (cmd_demux_001_src4_ready),                   //      src4.ready
		.src4_valid         (cmd_demux_001_src4_valid),                   //          .valid
		.src4_data          (cmd_demux_001_src4_data),                    //          .data
		.src4_channel       (cmd_demux_001_src4_channel),                 //          .channel
		.src4_startofpacket (cmd_demux_001_src4_startofpacket),           //          .startofpacket
		.src4_endofpacket   (cmd_demux_001_src4_endofpacket),             //          .endofpacket
		.src5_ready         (cmd_demux_001_src5_ready),                   //      src5.ready
		.src5_valid         (cmd_demux_001_src5_valid),                   //          .valid
		.src5_data          (cmd_demux_001_src5_data),                    //          .data
		.src5_channel       (cmd_demux_001_src5_channel),                 //          .channel
		.src5_startofpacket (cmd_demux_001_src5_startofpacket),           //          .startofpacket
		.src5_endofpacket   (cmd_demux_001_src5_endofpacket),             //          .endofpacket
		.src6_ready         (cmd_demux_001_src6_ready),                   //      src6.ready
		.src6_valid         (cmd_demux_001_src6_valid),                   //          .valid
		.src6_data          (cmd_demux_001_src6_data),                    //          .data
		.src6_channel       (cmd_demux_001_src6_channel),                 //          .channel
		.src6_startofpacket (cmd_demux_001_src6_startofpacket),           //          .startofpacket
		.src6_endofpacket   (cmd_demux_001_src6_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_demux cmd_demux_002 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_002_src_ready),                       //      sink.ready
		.sink_channel       (router_002_src_channel),                     //          .channel
		.sink_data          (router_002_src_data),                        //          .data
		.sink_startofpacket (router_002_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_002_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_002_src_valid),                       //          .valid
		.src0_ready         (cmd_demux_002_src0_ready),                   //      src0.ready
		.src0_valid         (cmd_demux_002_src0_valid),                   //          .valid
		.src0_data          (cmd_demux_002_src0_data),                    //          .data
		.src0_channel       (cmd_demux_002_src0_channel),                 //          .channel
		.src0_startofpacket (cmd_demux_002_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (cmd_demux_002_src0_endofpacket),             //          .endofpacket
		.src1_ready         (cmd_demux_002_src1_ready),                   //      src1.ready
		.src1_valid         (cmd_demux_002_src1_valid),                   //          .valid
		.src1_data          (cmd_demux_002_src1_data),                    //          .data
		.src1_channel       (cmd_demux_002_src1_channel),                 //          .channel
		.src1_startofpacket (cmd_demux_002_src1_startofpacket),           //          .startofpacket
		.src1_endofpacket   (cmd_demux_002_src1_endofpacket),             //          .endofpacket
		.src2_ready         (cmd_demux_002_src2_ready),                   //      src2.ready
		.src2_valid         (cmd_demux_002_src2_valid),                   //          .valid
		.src2_data          (cmd_demux_002_src2_data),                    //          .data
		.src2_channel       (cmd_demux_002_src2_channel),                 //          .channel
		.src2_startofpacket (cmd_demux_002_src2_startofpacket),           //          .startofpacket
		.src2_endofpacket   (cmd_demux_002_src2_endofpacket),             //          .endofpacket
		.src3_ready         (cmd_demux_002_src3_ready),                   //      src3.ready
		.src3_valid         (cmd_demux_002_src3_valid),                   //          .valid
		.src3_data          (cmd_demux_002_src3_data),                    //          .data
		.src3_channel       (cmd_demux_002_src3_channel),                 //          .channel
		.src3_startofpacket (cmd_demux_002_src3_startofpacket),           //          .startofpacket
		.src3_endofpacket   (cmd_demux_002_src3_endofpacket),             //          .endofpacket
		.src4_ready         (cmd_demux_002_src4_ready),                   //      src4.ready
		.src4_valid         (cmd_demux_002_src4_valid),                   //          .valid
		.src4_data          (cmd_demux_002_src4_data),                    //          .data
		.src4_channel       (cmd_demux_002_src4_channel),                 //          .channel
		.src4_startofpacket (cmd_demux_002_src4_startofpacket),           //          .startofpacket
		.src4_endofpacket   (cmd_demux_002_src4_endofpacket),             //          .endofpacket
		.src5_ready         (cmd_demux_002_src5_ready),                   //      src5.ready
		.src5_valid         (cmd_demux_002_src5_valid),                   //          .valid
		.src5_data          (cmd_demux_002_src5_data),                    //          .data
		.src5_channel       (cmd_demux_002_src5_channel),                 //          .channel
		.src5_startofpacket (cmd_demux_002_src5_startofpacket),           //          .startofpacket
		.src5_endofpacket   (cmd_demux_002_src5_endofpacket),             //          .endofpacket
		.src6_ready         (cmd_demux_002_src6_ready),                   //      src6.ready
		.src6_valid         (cmd_demux_002_src6_valid),                   //          .valid
		.src6_data          (cmd_demux_002_src6_data),                    //          .data
		.src6_channel       (cmd_demux_002_src6_channel),                 //          .channel
		.src6_startofpacket (cmd_demux_002_src6_startofpacket),           //          .startofpacket
		.src6_endofpacket   (cmd_demux_002_src6_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_demux cmd_demux_003 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_003_src_ready),                       //      sink.ready
		.sink_channel       (router_003_src_channel),                     //          .channel
		.sink_data          (router_003_src_data),                        //          .data
		.sink_startofpacket (router_003_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_003_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_003_src_valid),                       //          .valid
		.src0_ready         (cmd_demux_003_src0_ready),                   //      src0.ready
		.src0_valid         (cmd_demux_003_src0_valid),                   //          .valid
		.src0_data          (cmd_demux_003_src0_data),                    //          .data
		.src0_channel       (cmd_demux_003_src0_channel),                 //          .channel
		.src0_startofpacket (cmd_demux_003_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (cmd_demux_003_src0_endofpacket),             //          .endofpacket
		.src1_ready         (cmd_demux_003_src1_ready),                   //      src1.ready
		.src1_valid         (cmd_demux_003_src1_valid),                   //          .valid
		.src1_data          (cmd_demux_003_src1_data),                    //          .data
		.src1_channel       (cmd_demux_003_src1_channel),                 //          .channel
		.src1_startofpacket (cmd_demux_003_src1_startofpacket),           //          .startofpacket
		.src1_endofpacket   (cmd_demux_003_src1_endofpacket),             //          .endofpacket
		.src2_ready         (cmd_demux_003_src2_ready),                   //      src2.ready
		.src2_valid         (cmd_demux_003_src2_valid),                   //          .valid
		.src2_data          (cmd_demux_003_src2_data),                    //          .data
		.src2_channel       (cmd_demux_003_src2_channel),                 //          .channel
		.src2_startofpacket (cmd_demux_003_src2_startofpacket),           //          .startofpacket
		.src2_endofpacket   (cmd_demux_003_src2_endofpacket),             //          .endofpacket
		.src3_ready         (cmd_demux_003_src3_ready),                   //      src3.ready
		.src3_valid         (cmd_demux_003_src3_valid),                   //          .valid
		.src3_data          (cmd_demux_003_src3_data),                    //          .data
		.src3_channel       (cmd_demux_003_src3_channel),                 //          .channel
		.src3_startofpacket (cmd_demux_003_src3_startofpacket),           //          .startofpacket
		.src3_endofpacket   (cmd_demux_003_src3_endofpacket),             //          .endofpacket
		.src4_ready         (cmd_demux_003_src4_ready),                   //      src4.ready
		.src4_valid         (cmd_demux_003_src4_valid),                   //          .valid
		.src4_data          (cmd_demux_003_src4_data),                    //          .data
		.src4_channel       (cmd_demux_003_src4_channel),                 //          .channel
		.src4_startofpacket (cmd_demux_003_src4_startofpacket),           //          .startofpacket
		.src4_endofpacket   (cmd_demux_003_src4_endofpacket),             //          .endofpacket
		.src5_ready         (cmd_demux_003_src5_ready),                   //      src5.ready
		.src5_valid         (cmd_demux_003_src5_valid),                   //          .valid
		.src5_data          (cmd_demux_003_src5_data),                    //          .data
		.src5_channel       (cmd_demux_003_src5_channel),                 //          .channel
		.src5_startofpacket (cmd_demux_003_src5_startofpacket),           //          .startofpacket
		.src5_endofpacket   (cmd_demux_003_src5_endofpacket),             //          .endofpacket
		.src6_ready         (cmd_demux_003_src6_ready),                   //      src6.ready
		.src6_valid         (cmd_demux_003_src6_valid),                   //          .valid
		.src6_data          (cmd_demux_003_src6_data),                    //          .data
		.src6_channel       (cmd_demux_003_src6_channel),                 //          .channel
		.src6_startofpacket (cmd_demux_003_src6_startofpacket),           //          .startofpacket
		.src6_endofpacket   (cmd_demux_003_src6_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_demux_004 cmd_demux_004 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_004_src_ready),                       //      sink.ready
		.sink_channel       (router_004_src_channel),                     //          .channel
		.sink_data          (router_004_src_data),                        //          .data
		.sink_startofpacket (router_004_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_004_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_004_src_valid),                       //          .valid
		.src0_ready         (cmd_demux_004_src0_ready),                   //      src0.ready
		.src0_valid         (cmd_demux_004_src0_valid),                   //          .valid
		.src0_data          (cmd_demux_004_src0_data),                    //          .data
		.src0_channel       (cmd_demux_004_src0_channel),                 //          .channel
		.src0_startofpacket (cmd_demux_004_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (cmd_demux_004_src0_endofpacket),             //          .endofpacket
		.src1_ready         (cmd_demux_004_src1_ready),                   //      src1.ready
		.src1_valid         (cmd_demux_004_src1_valid),                   //          .valid
		.src1_data          (cmd_demux_004_src1_data),                    //          .data
		.src1_channel       (cmd_demux_004_src1_channel),                 //          .channel
		.src1_startofpacket (cmd_demux_004_src1_startofpacket),           //          .startofpacket
		.src1_endofpacket   (cmd_demux_004_src1_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_demux_004 cmd_demux_005 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_005_src_ready),                       //      sink.ready
		.sink_channel       (router_005_src_channel),                     //          .channel
		.sink_data          (router_005_src_data),                        //          .data
		.sink_startofpacket (router_005_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_005_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_005_src_valid),                       //          .valid
		.src0_ready         (cmd_demux_005_src0_ready),                   //      src0.ready
		.src0_valid         (cmd_demux_005_src0_valid),                   //          .valid
		.src0_data          (cmd_demux_005_src0_data),                    //          .data
		.src0_channel       (cmd_demux_005_src0_channel),                 //          .channel
		.src0_startofpacket (cmd_demux_005_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (cmd_demux_005_src0_endofpacket),             //          .endofpacket
		.src1_ready         (cmd_demux_005_src1_ready),                   //      src1.ready
		.src1_valid         (cmd_demux_005_src1_valid),                   //          .valid
		.src1_data          (cmd_demux_005_src1_data),                    //          .data
		.src1_channel       (cmd_demux_005_src1_channel),                 //          .channel
		.src1_startofpacket (cmd_demux_005_src1_startofpacket),           //          .startofpacket
		.src1_endofpacket   (cmd_demux_005_src1_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_demux_004 cmd_demux_006 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_006_src_ready),                       //      sink.ready
		.sink_channel       (router_006_src_channel),                     //          .channel
		.sink_data          (router_006_src_data),                        //          .data
		.sink_startofpacket (router_006_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_006_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_006_src_valid),                       //          .valid
		.src0_ready         (cmd_demux_006_src0_ready),                   //      src0.ready
		.src0_valid         (cmd_demux_006_src0_valid),                   //          .valid
		.src0_data          (cmd_demux_006_src0_data),                    //          .data
		.src0_channel       (cmd_demux_006_src0_channel),                 //          .channel
		.src0_startofpacket (cmd_demux_006_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (cmd_demux_006_src0_endofpacket),             //          .endofpacket
		.src1_ready         (cmd_demux_006_src1_ready),                   //      src1.ready
		.src1_valid         (cmd_demux_006_src1_valid),                   //          .valid
		.src1_data          (cmd_demux_006_src1_data),                    //          .data
		.src1_channel       (cmd_demux_006_src1_channel),                 //          .channel
		.src1_startofpacket (cmd_demux_006_src1_startofpacket),           //          .startofpacket
		.src1_endofpacket   (cmd_demux_006_src1_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_demux_004 cmd_demux_007 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_007_src_ready),                       //      sink.ready
		.sink_channel       (router_007_src_channel),                     //          .channel
		.sink_data          (router_007_src_data),                        //          .data
		.sink_startofpacket (router_007_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_007_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_007_src_valid),                       //          .valid
		.src0_ready         (cmd_demux_007_src0_ready),                   //      src0.ready
		.src0_valid         (cmd_demux_007_src0_valid),                   //          .valid
		.src0_data          (cmd_demux_007_src0_data),                    //          .data
		.src0_channel       (cmd_demux_007_src0_channel),                 //          .channel
		.src0_startofpacket (cmd_demux_007_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (cmd_demux_007_src0_endofpacket),             //          .endofpacket
		.src1_ready         (cmd_demux_007_src1_ready),                   //      src1.ready
		.src1_valid         (cmd_demux_007_src1_valid),                   //          .valid
		.src1_data          (cmd_demux_007_src1_data),                    //          .data
		.src1_channel       (cmd_demux_007_src1_channel),                 //          .channel
		.src1_startofpacket (cmd_demux_007_src1_startofpacket),           //          .startofpacket
		.src1_endofpacket   (cmd_demux_007_src1_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux cmd_mux (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_src_ready),                          //       src.ready
		.src_valid           (cmd_mux_src_valid),                          //          .valid
		.src_data            (cmd_mux_src_data),                           //          .data
		.src_channel         (cmd_mux_src_channel),                        //          .channel
		.src_startofpacket   (cmd_mux_src_startofpacket),                  //          .startofpacket
		.src_endofpacket     (cmd_mux_src_endofpacket),                    //          .endofpacket
		.sink0_ready         (cmd_demux_src0_ready),                       //     sink0.ready
		.sink0_valid         (cmd_demux_src0_valid),                       //          .valid
		.sink0_channel       (cmd_demux_src0_channel),                     //          .channel
		.sink0_data          (cmd_demux_src0_data),                        //          .data
		.sink0_startofpacket (cmd_demux_src0_startofpacket),               //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src0_endofpacket),                 //          .endofpacket
		.sink1_ready         (cmd_demux_001_src0_ready),                   //     sink1.ready
		.sink1_valid         (cmd_demux_001_src0_valid),                   //          .valid
		.sink1_channel       (cmd_demux_001_src0_channel),                 //          .channel
		.sink1_data          (cmd_demux_001_src0_data),                    //          .data
		.sink1_startofpacket (cmd_demux_001_src0_startofpacket),           //          .startofpacket
		.sink1_endofpacket   (cmd_demux_001_src0_endofpacket),             //          .endofpacket
		.sink2_ready         (cmd_demux_002_src0_ready),                   //     sink2.ready
		.sink2_valid         (cmd_demux_002_src0_valid),                   //          .valid
		.sink2_channel       (cmd_demux_002_src0_channel),                 //          .channel
		.sink2_data          (cmd_demux_002_src0_data),                    //          .data
		.sink2_startofpacket (cmd_demux_002_src0_startofpacket),           //          .startofpacket
		.sink2_endofpacket   (cmd_demux_002_src0_endofpacket),             //          .endofpacket
		.sink3_ready         (cmd_demux_003_src0_ready),                   //     sink3.ready
		.sink3_valid         (cmd_demux_003_src0_valid),                   //          .valid
		.sink3_channel       (cmd_demux_003_src0_channel),                 //          .channel
		.sink3_data          (cmd_demux_003_src0_data),                    //          .data
		.sink3_startofpacket (cmd_demux_003_src0_startofpacket),           //          .startofpacket
		.sink3_endofpacket   (cmd_demux_003_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_001 cmd_mux_001 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_001_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_001_src_valid),                      //          .valid
		.src_data            (cmd_mux_001_src_data),                       //          .data
		.src_channel         (cmd_mux_001_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_001_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_001_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_src1_ready),                       //     sink0.ready
		.sink0_valid         (cmd_demux_src1_valid),                       //          .valid
		.sink0_channel       (cmd_demux_src1_channel),                     //          .channel
		.sink0_data          (cmd_demux_src1_data),                        //          .data
		.sink0_startofpacket (cmd_demux_src1_startofpacket),               //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src1_endofpacket),                 //          .endofpacket
		.sink1_ready         (cmd_demux_007_src0_ready),                   //     sink1.ready
		.sink1_valid         (cmd_demux_007_src0_valid),                   //          .valid
		.sink1_channel       (cmd_demux_007_src0_channel),                 //          .channel
		.sink1_data          (cmd_demux_007_src0_data),                    //          .data
		.sink1_startofpacket (cmd_demux_007_src0_startofpacket),           //          .startofpacket
		.sink1_endofpacket   (cmd_demux_007_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_002 cmd_mux_002 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_002_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_002_src_valid),                      //          .valid
		.src_data            (cmd_mux_002_src_data),                       //          .data
		.src_channel         (cmd_mux_002_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_002_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_002_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_src2_ready),                       //     sink0.ready
		.sink0_valid         (cmd_demux_src2_valid),                       //          .valid
		.sink0_channel       (cmd_demux_src2_channel),                     //          .channel
		.sink0_data          (cmd_demux_src2_data),                        //          .data
		.sink0_startofpacket (cmd_demux_src2_startofpacket),               //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src2_endofpacket)                  //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_002 cmd_mux_003 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_003_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_003_src_valid),                      //          .valid
		.src_data            (cmd_mux_003_src_data),                       //          .data
		.src_channel         (cmd_mux_003_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_003_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_003_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_src3_ready),                       //     sink0.ready
		.sink0_valid         (cmd_demux_src3_valid),                       //          .valid
		.sink0_channel       (cmd_demux_src3_channel),                     //          .channel
		.sink0_data          (cmd_demux_src3_data),                        //          .data
		.sink0_startofpacket (cmd_demux_src3_startofpacket),               //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src3_endofpacket)                  //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_002 cmd_mux_004 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_004_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_004_src_valid),                      //          .valid
		.src_data            (cmd_mux_004_src_data),                       //          .data
		.src_channel         (cmd_mux_004_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_004_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_004_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_src4_ready),                       //     sink0.ready
		.sink0_valid         (cmd_demux_src4_valid),                       //          .valid
		.sink0_channel       (cmd_demux_src4_channel),                     //          .channel
		.sink0_data          (cmd_demux_src4_data),                        //          .data
		.sink0_startofpacket (cmd_demux_src4_startofpacket),               //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src4_endofpacket)                  //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_002 cmd_mux_005 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_005_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_005_src_valid),                      //          .valid
		.src_data            (cmd_mux_005_src_data),                       //          .data
		.src_channel         (cmd_mux_005_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_005_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_005_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_src5_ready),                       //     sink0.ready
		.sink0_valid         (cmd_demux_src5_valid),                       //          .valid
		.sink0_channel       (cmd_demux_src5_channel),                     //          .channel
		.sink0_data          (cmd_demux_src5_data),                        //          .data
		.sink0_startofpacket (cmd_demux_src5_startofpacket),               //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src5_endofpacket)                  //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_001 cmd_mux_006 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_006_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_006_src_valid),                      //          .valid
		.src_data            (cmd_mux_006_src_data),                       //          .data
		.src_channel         (cmd_mux_006_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_006_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_006_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_src6_ready),                       //     sink0.ready
		.sink0_valid         (cmd_demux_src6_valid),                       //          .valid
		.sink0_channel       (cmd_demux_src6_channel),                     //          .channel
		.sink0_data          (cmd_demux_src6_data),                        //          .data
		.sink0_startofpacket (cmd_demux_src6_startofpacket),               //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src6_endofpacket),                 //          .endofpacket
		.sink1_ready         (cmd_demux_007_src1_ready),                   //     sink1.ready
		.sink1_valid         (cmd_demux_007_src1_valid),                   //          .valid
		.sink1_channel       (cmd_demux_007_src1_channel),                 //          .channel
		.sink1_data          (cmd_demux_007_src1_data),                    //          .data
		.sink1_startofpacket (cmd_demux_007_src1_startofpacket),           //          .startofpacket
		.sink1_endofpacket   (cmd_demux_007_src1_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_001 cmd_mux_007 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_007_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_007_src_valid),                      //          .valid
		.src_data            (cmd_mux_007_src_data),                       //          .data
		.src_channel         (cmd_mux_007_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_007_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_007_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_003_src1_ready),                   //     sink0.ready
		.sink0_valid         (cmd_demux_003_src1_valid),                   //          .valid
		.sink0_channel       (cmd_demux_003_src1_channel),                 //          .channel
		.sink0_data          (cmd_demux_003_src1_data),                    //          .data
		.sink0_startofpacket (cmd_demux_003_src1_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (cmd_demux_003_src1_endofpacket),             //          .endofpacket
		.sink1_ready         (cmd_demux_004_src0_ready),                   //     sink1.ready
		.sink1_valid         (cmd_demux_004_src0_valid),                   //          .valid
		.sink1_channel       (cmd_demux_004_src0_channel),                 //          .channel
		.sink1_data          (cmd_demux_004_src0_data),                    //          .data
		.sink1_startofpacket (cmd_demux_004_src0_startofpacket),           //          .startofpacket
		.sink1_endofpacket   (cmd_demux_004_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_002 cmd_mux_008 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_008_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_008_src_valid),                      //          .valid
		.src_data            (cmd_mux_008_src_data),                       //          .data
		.src_channel         (cmd_mux_008_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_008_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_008_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_003_src2_ready),                   //     sink0.ready
		.sink0_valid         (cmd_demux_003_src2_valid),                   //          .valid
		.sink0_channel       (cmd_demux_003_src2_channel),                 //          .channel
		.sink0_data          (cmd_demux_003_src2_data),                    //          .data
		.sink0_startofpacket (cmd_demux_003_src2_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (cmd_demux_003_src2_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_002 cmd_mux_009 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_009_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_009_src_valid),                      //          .valid
		.src_data            (cmd_mux_009_src_data),                       //          .data
		.src_channel         (cmd_mux_009_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_009_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_009_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_003_src3_ready),                   //     sink0.ready
		.sink0_valid         (cmd_demux_003_src3_valid),                   //          .valid
		.sink0_channel       (cmd_demux_003_src3_channel),                 //          .channel
		.sink0_data          (cmd_demux_003_src3_data),                    //          .data
		.sink0_startofpacket (cmd_demux_003_src3_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (cmd_demux_003_src3_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_002 cmd_mux_010 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_010_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_010_src_valid),                      //          .valid
		.src_data            (cmd_mux_010_src_data),                       //          .data
		.src_channel         (cmd_mux_010_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_010_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_010_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_003_src4_ready),                   //     sink0.ready
		.sink0_valid         (cmd_demux_003_src4_valid),                   //          .valid
		.sink0_channel       (cmd_demux_003_src4_channel),                 //          .channel
		.sink0_data          (cmd_demux_003_src4_data),                    //          .data
		.sink0_startofpacket (cmd_demux_003_src4_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (cmd_demux_003_src4_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_002 cmd_mux_011 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_011_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_011_src_valid),                      //          .valid
		.src_data            (cmd_mux_011_src_data),                       //          .data
		.src_channel         (cmd_mux_011_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_011_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_011_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_003_src5_ready),                   //     sink0.ready
		.sink0_valid         (cmd_demux_003_src5_valid),                   //          .valid
		.sink0_channel       (cmd_demux_003_src5_channel),                 //          .channel
		.sink0_data          (cmd_demux_003_src5_data),                    //          .data
		.sink0_startofpacket (cmd_demux_003_src5_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (cmd_demux_003_src5_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_001 cmd_mux_012 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_012_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_012_src_valid),                      //          .valid
		.src_data            (cmd_mux_012_src_data),                       //          .data
		.src_channel         (cmd_mux_012_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_012_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_012_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_003_src6_ready),                   //     sink0.ready
		.sink0_valid         (cmd_demux_003_src6_valid),                   //          .valid
		.sink0_channel       (cmd_demux_003_src6_channel),                 //          .channel
		.sink0_data          (cmd_demux_003_src6_data),                    //          .data
		.sink0_startofpacket (cmd_demux_003_src6_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (cmd_demux_003_src6_endofpacket),             //          .endofpacket
		.sink1_ready         (cmd_demux_004_src1_ready),                   //     sink1.ready
		.sink1_valid         (cmd_demux_004_src1_valid),                   //          .valid
		.sink1_channel       (cmd_demux_004_src1_channel),                 //          .channel
		.sink1_data          (cmd_demux_004_src1_data),                    //          .data
		.sink1_startofpacket (cmd_demux_004_src1_startofpacket),           //          .startofpacket
		.sink1_endofpacket   (cmd_demux_004_src1_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_001 cmd_mux_013 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_013_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_013_src_valid),                      //          .valid
		.src_data            (cmd_mux_013_src_data),                       //          .data
		.src_channel         (cmd_mux_013_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_013_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_013_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_002_src1_ready),                   //     sink0.ready
		.sink0_valid         (cmd_demux_002_src1_valid),                   //          .valid
		.sink0_channel       (cmd_demux_002_src1_channel),                 //          .channel
		.sink0_data          (cmd_demux_002_src1_data),                    //          .data
		.sink0_startofpacket (cmd_demux_002_src1_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (cmd_demux_002_src1_endofpacket),             //          .endofpacket
		.sink1_ready         (cmd_demux_005_src0_ready),                   //     sink1.ready
		.sink1_valid         (cmd_demux_005_src0_valid),                   //          .valid
		.sink1_channel       (cmd_demux_005_src0_channel),                 //          .channel
		.sink1_data          (cmd_demux_005_src0_data),                    //          .data
		.sink1_startofpacket (cmd_demux_005_src0_startofpacket),           //          .startofpacket
		.sink1_endofpacket   (cmd_demux_005_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_002 cmd_mux_014 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_014_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_014_src_valid),                      //          .valid
		.src_data            (cmd_mux_014_src_data),                       //          .data
		.src_channel         (cmd_mux_014_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_014_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_014_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_002_src2_ready),                   //     sink0.ready
		.sink0_valid         (cmd_demux_002_src2_valid),                   //          .valid
		.sink0_channel       (cmd_demux_002_src2_channel),                 //          .channel
		.sink0_data          (cmd_demux_002_src2_data),                    //          .data
		.sink0_startofpacket (cmd_demux_002_src2_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (cmd_demux_002_src2_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_002 cmd_mux_015 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_015_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_015_src_valid),                      //          .valid
		.src_data            (cmd_mux_015_src_data),                       //          .data
		.src_channel         (cmd_mux_015_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_015_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_015_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_002_src3_ready),                   //     sink0.ready
		.sink0_valid         (cmd_demux_002_src3_valid),                   //          .valid
		.sink0_channel       (cmd_demux_002_src3_channel),                 //          .channel
		.sink0_data          (cmd_demux_002_src3_data),                    //          .data
		.sink0_startofpacket (cmd_demux_002_src3_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (cmd_demux_002_src3_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_002 cmd_mux_016 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_016_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_016_src_valid),                      //          .valid
		.src_data            (cmd_mux_016_src_data),                       //          .data
		.src_channel         (cmd_mux_016_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_016_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_016_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_002_src4_ready),                   //     sink0.ready
		.sink0_valid         (cmd_demux_002_src4_valid),                   //          .valid
		.sink0_channel       (cmd_demux_002_src4_channel),                 //          .channel
		.sink0_data          (cmd_demux_002_src4_data),                    //          .data
		.sink0_startofpacket (cmd_demux_002_src4_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (cmd_demux_002_src4_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_002 cmd_mux_017 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_017_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_017_src_valid),                      //          .valid
		.src_data            (cmd_mux_017_src_data),                       //          .data
		.src_channel         (cmd_mux_017_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_017_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_017_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_002_src5_ready),                   //     sink0.ready
		.sink0_valid         (cmd_demux_002_src5_valid),                   //          .valid
		.sink0_channel       (cmd_demux_002_src5_channel),                 //          .channel
		.sink0_data          (cmd_demux_002_src5_data),                    //          .data
		.sink0_startofpacket (cmd_demux_002_src5_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (cmd_demux_002_src5_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_001 cmd_mux_018 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_018_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_018_src_valid),                      //          .valid
		.src_data            (cmd_mux_018_src_data),                       //          .data
		.src_channel         (cmd_mux_018_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_018_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_018_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_002_src6_ready),                   //     sink0.ready
		.sink0_valid         (cmd_demux_002_src6_valid),                   //          .valid
		.sink0_channel       (cmd_demux_002_src6_channel),                 //          .channel
		.sink0_data          (cmd_demux_002_src6_data),                    //          .data
		.sink0_startofpacket (cmd_demux_002_src6_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (cmd_demux_002_src6_endofpacket),             //          .endofpacket
		.sink1_ready         (cmd_demux_005_src1_ready),                   //     sink1.ready
		.sink1_valid         (cmd_demux_005_src1_valid),                   //          .valid
		.sink1_channel       (cmd_demux_005_src1_channel),                 //          .channel
		.sink1_data          (cmd_demux_005_src1_data),                    //          .data
		.sink1_startofpacket (cmd_demux_005_src1_startofpacket),           //          .startofpacket
		.sink1_endofpacket   (cmd_demux_005_src1_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_001 cmd_mux_019 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_019_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_019_src_valid),                      //          .valid
		.src_data            (cmd_mux_019_src_data),                       //          .data
		.src_channel         (cmd_mux_019_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_019_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_019_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_001_src1_ready),                   //     sink0.ready
		.sink0_valid         (cmd_demux_001_src1_valid),                   //          .valid
		.sink0_channel       (cmd_demux_001_src1_channel),                 //          .channel
		.sink0_data          (cmd_demux_001_src1_data),                    //          .data
		.sink0_startofpacket (cmd_demux_001_src1_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (cmd_demux_001_src1_endofpacket),             //          .endofpacket
		.sink1_ready         (cmd_demux_006_src0_ready),                   //     sink1.ready
		.sink1_valid         (cmd_demux_006_src0_valid),                   //          .valid
		.sink1_channel       (cmd_demux_006_src0_channel),                 //          .channel
		.sink1_data          (cmd_demux_006_src0_data),                    //          .data
		.sink1_startofpacket (cmd_demux_006_src0_startofpacket),           //          .startofpacket
		.sink1_endofpacket   (cmd_demux_006_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_002 cmd_mux_020 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_020_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_020_src_valid),                      //          .valid
		.src_data            (cmd_mux_020_src_data),                       //          .data
		.src_channel         (cmd_mux_020_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_020_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_020_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_001_src2_ready),                   //     sink0.ready
		.sink0_valid         (cmd_demux_001_src2_valid),                   //          .valid
		.sink0_channel       (cmd_demux_001_src2_channel),                 //          .channel
		.sink0_data          (cmd_demux_001_src2_data),                    //          .data
		.sink0_startofpacket (cmd_demux_001_src2_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (cmd_demux_001_src2_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_002 cmd_mux_021 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_021_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_021_src_valid),                      //          .valid
		.src_data            (cmd_mux_021_src_data),                       //          .data
		.src_channel         (cmd_mux_021_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_021_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_021_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_001_src3_ready),                   //     sink0.ready
		.sink0_valid         (cmd_demux_001_src3_valid),                   //          .valid
		.sink0_channel       (cmd_demux_001_src3_channel),                 //          .channel
		.sink0_data          (cmd_demux_001_src3_data),                    //          .data
		.sink0_startofpacket (cmd_demux_001_src3_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (cmd_demux_001_src3_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_002 cmd_mux_022 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_022_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_022_src_valid),                      //          .valid
		.src_data            (cmd_mux_022_src_data),                       //          .data
		.src_channel         (cmd_mux_022_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_022_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_022_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_001_src4_ready),                   //     sink0.ready
		.sink0_valid         (cmd_demux_001_src4_valid),                   //          .valid
		.sink0_channel       (cmd_demux_001_src4_channel),                 //          .channel
		.sink0_data          (cmd_demux_001_src4_data),                    //          .data
		.sink0_startofpacket (cmd_demux_001_src4_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (cmd_demux_001_src4_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_002 cmd_mux_023 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_023_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_023_src_valid),                      //          .valid
		.src_data            (cmd_mux_023_src_data),                       //          .data
		.src_channel         (cmd_mux_023_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_023_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_023_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_001_src5_ready),                   //     sink0.ready
		.sink0_valid         (cmd_demux_001_src5_valid),                   //          .valid
		.sink0_channel       (cmd_demux_001_src5_channel),                 //          .channel
		.sink0_data          (cmd_demux_001_src5_data),                    //          .data
		.sink0_startofpacket (cmd_demux_001_src5_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (cmd_demux_001_src5_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_mux_001 cmd_mux_024 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_024_src_ready),                      //       src.ready
		.src_valid           (cmd_mux_024_src_valid),                      //          .valid
		.src_data            (cmd_mux_024_src_data),                       //          .data
		.src_channel         (cmd_mux_024_src_channel),                    //          .channel
		.src_startofpacket   (cmd_mux_024_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_mux_024_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_demux_001_src6_ready),                   //     sink0.ready
		.sink0_valid         (cmd_demux_001_src6_valid),                   //          .valid
		.sink0_channel       (cmd_demux_001_src6_channel),                 //          .channel
		.sink0_data          (cmd_demux_001_src6_data),                    //          .data
		.sink0_startofpacket (cmd_demux_001_src6_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (cmd_demux_001_src6_endofpacket),             //          .endofpacket
		.sink1_ready         (cmd_demux_006_src1_ready),                   //     sink1.ready
		.sink1_valid         (cmd_demux_006_src1_valid),                   //          .valid
		.sink1_channel       (cmd_demux_006_src1_channel),                 //          .channel
		.sink1_data          (cmd_demux_006_src1_data),                    //          .data
		.sink1_startofpacket (cmd_demux_006_src1_startofpacket),           //          .startofpacket
		.sink1_endofpacket   (cmd_demux_006_src1_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_demux rsp_demux (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_008_src_ready),                       //      sink.ready
		.sink_channel       (router_008_src_channel),                     //          .channel
		.sink_data          (router_008_src_data),                        //          .data
		.sink_startofpacket (router_008_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_008_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_008_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_src0_ready),                       //      src0.ready
		.src0_valid         (rsp_demux_src0_valid),                       //          .valid
		.src0_data          (rsp_demux_src0_data),                        //          .data
		.src0_channel       (rsp_demux_src0_channel),                     //          .channel
		.src0_startofpacket (rsp_demux_src0_startofpacket),               //          .startofpacket
		.src0_endofpacket   (rsp_demux_src0_endofpacket),                 //          .endofpacket
		.src1_ready         (rsp_demux_src1_ready),                       //      src1.ready
		.src1_valid         (rsp_demux_src1_valid),                       //          .valid
		.src1_data          (rsp_demux_src1_data),                        //          .data
		.src1_channel       (rsp_demux_src1_channel),                     //          .channel
		.src1_startofpacket (rsp_demux_src1_startofpacket),               //          .startofpacket
		.src1_endofpacket   (rsp_demux_src1_endofpacket),                 //          .endofpacket
		.src2_ready         (rsp_demux_src2_ready),                       //      src2.ready
		.src2_valid         (rsp_demux_src2_valid),                       //          .valid
		.src2_data          (rsp_demux_src2_data),                        //          .data
		.src2_channel       (rsp_demux_src2_channel),                     //          .channel
		.src2_startofpacket (rsp_demux_src2_startofpacket),               //          .startofpacket
		.src2_endofpacket   (rsp_demux_src2_endofpacket),                 //          .endofpacket
		.src3_ready         (rsp_demux_src3_ready),                       //      src3.ready
		.src3_valid         (rsp_demux_src3_valid),                       //          .valid
		.src3_data          (rsp_demux_src3_data),                        //          .data
		.src3_channel       (rsp_demux_src3_channel),                     //          .channel
		.src3_startofpacket (rsp_demux_src3_startofpacket),               //          .startofpacket
		.src3_endofpacket   (rsp_demux_src3_endofpacket)                  //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_demux_004 rsp_demux_001 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_009_src_ready),                       //      sink.ready
		.sink_channel       (router_009_src_channel),                     //          .channel
		.sink_data          (router_009_src_data),                        //          .data
		.sink_startofpacket (router_009_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_009_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_009_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_001_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_001_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_001_src0_data),                    //          .data
		.src0_channel       (rsp_demux_001_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_001_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_001_src0_endofpacket),             //          .endofpacket
		.src1_ready         (rsp_demux_001_src1_ready),                   //      src1.ready
		.src1_valid         (rsp_demux_001_src1_valid),                   //          .valid
		.src1_data          (rsp_demux_001_src1_data),                    //          .data
		.src1_channel       (rsp_demux_001_src1_channel),                 //          .channel
		.src1_startofpacket (rsp_demux_001_src1_startofpacket),           //          .startofpacket
		.src1_endofpacket   (rsp_demux_001_src1_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_demux_002 rsp_demux_002 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_010_src_ready),                       //      sink.ready
		.sink_channel       (router_010_src_channel),                     //          .channel
		.sink_data          (router_010_src_data),                        //          .data
		.sink_startofpacket (router_010_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_010_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_010_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_002_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_002_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_002_src0_data),                    //          .data
		.src0_channel       (rsp_demux_002_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_002_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_002_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_demux_002 rsp_demux_003 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_011_src_ready),                       //      sink.ready
		.sink_channel       (router_011_src_channel),                     //          .channel
		.sink_data          (router_011_src_data),                        //          .data
		.sink_startofpacket (router_011_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_011_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_011_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_003_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_003_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_003_src0_data),                    //          .data
		.src0_channel       (rsp_demux_003_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_003_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_003_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_demux_002 rsp_demux_004 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_012_src_ready),                       //      sink.ready
		.sink_channel       (router_012_src_channel),                     //          .channel
		.sink_data          (router_012_src_data),                        //          .data
		.sink_startofpacket (router_012_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_012_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_012_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_004_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_004_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_004_src0_data),                    //          .data
		.src0_channel       (rsp_demux_004_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_004_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_004_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_demux_002 rsp_demux_005 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_013_src_ready),                       //      sink.ready
		.sink_channel       (router_013_src_channel),                     //          .channel
		.sink_data          (router_013_src_data),                        //          .data
		.sink_startofpacket (router_013_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_013_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_013_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_005_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_005_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_005_src0_data),                    //          .data
		.src0_channel       (rsp_demux_005_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_005_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_005_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_demux_004 rsp_demux_006 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_014_src_ready),                       //      sink.ready
		.sink_channel       (router_014_src_channel),                     //          .channel
		.sink_data          (router_014_src_data),                        //          .data
		.sink_startofpacket (router_014_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_014_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_014_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_006_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_006_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_006_src0_data),                    //          .data
		.src0_channel       (rsp_demux_006_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_006_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_006_src0_endofpacket),             //          .endofpacket
		.src1_ready         (rsp_demux_006_src1_ready),                   //      src1.ready
		.src1_valid         (rsp_demux_006_src1_valid),                   //          .valid
		.src1_data          (rsp_demux_006_src1_data),                    //          .data
		.src1_channel       (rsp_demux_006_src1_channel),                 //          .channel
		.src1_startofpacket (rsp_demux_006_src1_startofpacket),           //          .startofpacket
		.src1_endofpacket   (rsp_demux_006_src1_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_demux_004 rsp_demux_007 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_015_src_ready),                       //      sink.ready
		.sink_channel       (router_015_src_channel),                     //          .channel
		.sink_data          (router_015_src_data),                        //          .data
		.sink_startofpacket (router_015_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_015_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_015_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_007_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_007_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_007_src0_data),                    //          .data
		.src0_channel       (rsp_demux_007_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_007_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_007_src0_endofpacket),             //          .endofpacket
		.src1_ready         (rsp_demux_007_src1_ready),                   //      src1.ready
		.src1_valid         (rsp_demux_007_src1_valid),                   //          .valid
		.src1_data          (rsp_demux_007_src1_data),                    //          .data
		.src1_channel       (rsp_demux_007_src1_channel),                 //          .channel
		.src1_startofpacket (rsp_demux_007_src1_startofpacket),           //          .startofpacket
		.src1_endofpacket   (rsp_demux_007_src1_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_demux_002 rsp_demux_008 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_016_src_ready),                       //      sink.ready
		.sink_channel       (router_016_src_channel),                     //          .channel
		.sink_data          (router_016_src_data),                        //          .data
		.sink_startofpacket (router_016_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_016_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_016_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_008_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_008_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_008_src0_data),                    //          .data
		.src0_channel       (rsp_demux_008_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_008_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_008_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_demux_002 rsp_demux_009 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_017_src_ready),                       //      sink.ready
		.sink_channel       (router_017_src_channel),                     //          .channel
		.sink_data          (router_017_src_data),                        //          .data
		.sink_startofpacket (router_017_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_017_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_017_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_009_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_009_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_009_src0_data),                    //          .data
		.src0_channel       (rsp_demux_009_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_009_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_009_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_demux_002 rsp_demux_010 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_018_src_ready),                       //      sink.ready
		.sink_channel       (router_018_src_channel),                     //          .channel
		.sink_data          (router_018_src_data),                        //          .data
		.sink_startofpacket (router_018_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_018_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_018_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_010_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_010_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_010_src0_data),                    //          .data
		.src0_channel       (rsp_demux_010_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_010_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_010_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_demux_002 rsp_demux_011 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_019_src_ready),                       //      sink.ready
		.sink_channel       (router_019_src_channel),                     //          .channel
		.sink_data          (router_019_src_data),                        //          .data
		.sink_startofpacket (router_019_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_019_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_019_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_011_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_011_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_011_src0_data),                    //          .data
		.src0_channel       (rsp_demux_011_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_011_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_011_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_demux_004 rsp_demux_012 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_020_src_ready),                       //      sink.ready
		.sink_channel       (router_020_src_channel),                     //          .channel
		.sink_data          (router_020_src_data),                        //          .data
		.sink_startofpacket (router_020_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_020_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_020_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_012_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_012_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_012_src0_data),                    //          .data
		.src0_channel       (rsp_demux_012_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_012_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_012_src0_endofpacket),             //          .endofpacket
		.src1_ready         (rsp_demux_012_src1_ready),                   //      src1.ready
		.src1_valid         (rsp_demux_012_src1_valid),                   //          .valid
		.src1_data          (rsp_demux_012_src1_data),                    //          .data
		.src1_channel       (rsp_demux_012_src1_channel),                 //          .channel
		.src1_startofpacket (rsp_demux_012_src1_startofpacket),           //          .startofpacket
		.src1_endofpacket   (rsp_demux_012_src1_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_demux_004 rsp_demux_013 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_021_src_ready),                       //      sink.ready
		.sink_channel       (router_021_src_channel),                     //          .channel
		.sink_data          (router_021_src_data),                        //          .data
		.sink_startofpacket (router_021_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_021_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_021_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_013_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_013_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_013_src0_data),                    //          .data
		.src0_channel       (rsp_demux_013_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_013_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_013_src0_endofpacket),             //          .endofpacket
		.src1_ready         (rsp_demux_013_src1_ready),                   //      src1.ready
		.src1_valid         (rsp_demux_013_src1_valid),                   //          .valid
		.src1_data          (rsp_demux_013_src1_data),                    //          .data
		.src1_channel       (rsp_demux_013_src1_channel),                 //          .channel
		.src1_startofpacket (rsp_demux_013_src1_startofpacket),           //          .startofpacket
		.src1_endofpacket   (rsp_demux_013_src1_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_demux_002 rsp_demux_014 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_022_src_ready),                       //      sink.ready
		.sink_channel       (router_022_src_channel),                     //          .channel
		.sink_data          (router_022_src_data),                        //          .data
		.sink_startofpacket (router_022_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_022_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_022_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_014_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_014_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_014_src0_data),                    //          .data
		.src0_channel       (rsp_demux_014_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_014_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_014_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_demux_002 rsp_demux_015 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_023_src_ready),                       //      sink.ready
		.sink_channel       (router_023_src_channel),                     //          .channel
		.sink_data          (router_023_src_data),                        //          .data
		.sink_startofpacket (router_023_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_023_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_023_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_015_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_015_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_015_src0_data),                    //          .data
		.src0_channel       (rsp_demux_015_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_015_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_015_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_demux_002 rsp_demux_016 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_024_src_ready),                       //      sink.ready
		.sink_channel       (router_024_src_channel),                     //          .channel
		.sink_data          (router_024_src_data),                        //          .data
		.sink_startofpacket (router_024_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_024_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_024_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_016_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_016_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_016_src0_data),                    //          .data
		.src0_channel       (rsp_demux_016_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_016_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_016_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_demux_002 rsp_demux_017 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_025_src_ready),                       //      sink.ready
		.sink_channel       (router_025_src_channel),                     //          .channel
		.sink_data          (router_025_src_data),                        //          .data
		.sink_startofpacket (router_025_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_025_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_025_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_017_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_017_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_017_src0_data),                    //          .data
		.src0_channel       (rsp_demux_017_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_017_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_017_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_demux_004 rsp_demux_018 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_026_src_ready),                       //      sink.ready
		.sink_channel       (router_026_src_channel),                     //          .channel
		.sink_data          (router_026_src_data),                        //          .data
		.sink_startofpacket (router_026_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_026_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_026_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_018_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_018_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_018_src0_data),                    //          .data
		.src0_channel       (rsp_demux_018_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_018_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_018_src0_endofpacket),             //          .endofpacket
		.src1_ready         (rsp_demux_018_src1_ready),                   //      src1.ready
		.src1_valid         (rsp_demux_018_src1_valid),                   //          .valid
		.src1_data          (rsp_demux_018_src1_data),                    //          .data
		.src1_channel       (rsp_demux_018_src1_channel),                 //          .channel
		.src1_startofpacket (rsp_demux_018_src1_startofpacket),           //          .startofpacket
		.src1_endofpacket   (rsp_demux_018_src1_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_demux_004 rsp_demux_019 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_027_src_ready),                       //      sink.ready
		.sink_channel       (router_027_src_channel),                     //          .channel
		.sink_data          (router_027_src_data),                        //          .data
		.sink_startofpacket (router_027_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_027_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_027_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_019_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_019_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_019_src0_data),                    //          .data
		.src0_channel       (rsp_demux_019_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_019_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_019_src0_endofpacket),             //          .endofpacket
		.src1_ready         (rsp_demux_019_src1_ready),                   //      src1.ready
		.src1_valid         (rsp_demux_019_src1_valid),                   //          .valid
		.src1_data          (rsp_demux_019_src1_data),                    //          .data
		.src1_channel       (rsp_demux_019_src1_channel),                 //          .channel
		.src1_startofpacket (rsp_demux_019_src1_startofpacket),           //          .startofpacket
		.src1_endofpacket   (rsp_demux_019_src1_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_demux_002 rsp_demux_020 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_028_src_ready),                       //      sink.ready
		.sink_channel       (router_028_src_channel),                     //          .channel
		.sink_data          (router_028_src_data),                        //          .data
		.sink_startofpacket (router_028_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_028_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_028_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_020_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_020_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_020_src0_data),                    //          .data
		.src0_channel       (rsp_demux_020_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_020_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_020_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_demux_002 rsp_demux_021 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_029_src_ready),                       //      sink.ready
		.sink_channel       (router_029_src_channel),                     //          .channel
		.sink_data          (router_029_src_data),                        //          .data
		.sink_startofpacket (router_029_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_029_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_029_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_021_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_021_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_021_src0_data),                    //          .data
		.src0_channel       (rsp_demux_021_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_021_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_021_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_demux_002 rsp_demux_022 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_030_src_ready),                       //      sink.ready
		.sink_channel       (router_030_src_channel),                     //          .channel
		.sink_data          (router_030_src_data),                        //          .data
		.sink_startofpacket (router_030_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_030_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_030_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_022_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_022_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_022_src0_data),                    //          .data
		.src0_channel       (rsp_demux_022_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_022_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_022_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_demux_002 rsp_demux_023 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_031_src_ready),                       //      sink.ready
		.sink_channel       (router_031_src_channel),                     //          .channel
		.sink_data          (router_031_src_data),                        //          .data
		.sink_startofpacket (router_031_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_031_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_031_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_023_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_023_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_023_src0_data),                    //          .data
		.src0_channel       (rsp_demux_023_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_023_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_023_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_cmd_demux_004 rsp_demux_024 (
		.clk                (clk_0_clk_clk),                              //       clk.clk
		.reset              (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_032_src_ready),                       //      sink.ready
		.sink_channel       (router_032_src_channel),                     //          .channel
		.sink_data          (router_032_src_data),                        //          .data
		.sink_startofpacket (router_032_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (router_032_src_endofpacket),                 //          .endofpacket
		.sink_valid         (router_032_src_valid),                       //          .valid
		.src0_ready         (rsp_demux_024_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_demux_024_src0_valid),                   //          .valid
		.src0_data          (rsp_demux_024_src0_data),                    //          .data
		.src0_channel       (rsp_demux_024_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_demux_024_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_demux_024_src0_endofpacket),             //          .endofpacket
		.src1_ready         (rsp_demux_024_src1_ready),                   //      src1.ready
		.src1_valid         (rsp_demux_024_src1_valid),                   //          .valid
		.src1_data          (rsp_demux_024_src1_data),                    //          .data
		.src1_channel       (rsp_demux_024_src1_channel),                 //          .channel
		.src1_startofpacket (rsp_demux_024_src1_startofpacket),           //          .startofpacket
		.src1_endofpacket   (rsp_demux_024_src1_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_mux rsp_mux (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_src_ready),                          //       src.ready
		.src_valid           (rsp_mux_src_valid),                          //          .valid
		.src_data            (rsp_mux_src_data),                           //          .data
		.src_channel         (rsp_mux_src_channel),                        //          .channel
		.src_startofpacket   (rsp_mux_src_startofpacket),                  //          .startofpacket
		.src_endofpacket     (rsp_mux_src_endofpacket),                    //          .endofpacket
		.sink0_ready         (rsp_demux_src0_ready),                       //     sink0.ready
		.sink0_valid         (rsp_demux_src0_valid),                       //          .valid
		.sink0_channel       (rsp_demux_src0_channel),                     //          .channel
		.sink0_data          (rsp_demux_src0_data),                        //          .data
		.sink0_startofpacket (rsp_demux_src0_startofpacket),               //          .startofpacket
		.sink0_endofpacket   (rsp_demux_src0_endofpacket),                 //          .endofpacket
		.sink1_ready         (rsp_demux_001_src0_ready),                   //     sink1.ready
		.sink1_valid         (rsp_demux_001_src0_valid),                   //          .valid
		.sink1_channel       (rsp_demux_001_src0_channel),                 //          .channel
		.sink1_data          (rsp_demux_001_src0_data),                    //          .data
		.sink1_startofpacket (rsp_demux_001_src0_startofpacket),           //          .startofpacket
		.sink1_endofpacket   (rsp_demux_001_src0_endofpacket),             //          .endofpacket
		.sink2_ready         (rsp_demux_002_src0_ready),                   //     sink2.ready
		.sink2_valid         (rsp_demux_002_src0_valid),                   //          .valid
		.sink2_channel       (rsp_demux_002_src0_channel),                 //          .channel
		.sink2_data          (rsp_demux_002_src0_data),                    //          .data
		.sink2_startofpacket (rsp_demux_002_src0_startofpacket),           //          .startofpacket
		.sink2_endofpacket   (rsp_demux_002_src0_endofpacket),             //          .endofpacket
		.sink3_ready         (rsp_demux_003_src0_ready),                   //     sink3.ready
		.sink3_valid         (rsp_demux_003_src0_valid),                   //          .valid
		.sink3_channel       (rsp_demux_003_src0_channel),                 //          .channel
		.sink3_data          (rsp_demux_003_src0_data),                    //          .data
		.sink3_startofpacket (rsp_demux_003_src0_startofpacket),           //          .startofpacket
		.sink3_endofpacket   (rsp_demux_003_src0_endofpacket),             //          .endofpacket
		.sink4_ready         (rsp_demux_004_src0_ready),                   //     sink4.ready
		.sink4_valid         (rsp_demux_004_src0_valid),                   //          .valid
		.sink4_channel       (rsp_demux_004_src0_channel),                 //          .channel
		.sink4_data          (rsp_demux_004_src0_data),                    //          .data
		.sink4_startofpacket (rsp_demux_004_src0_startofpacket),           //          .startofpacket
		.sink4_endofpacket   (rsp_demux_004_src0_endofpacket),             //          .endofpacket
		.sink5_ready         (rsp_demux_005_src0_ready),                   //     sink5.ready
		.sink5_valid         (rsp_demux_005_src0_valid),                   //          .valid
		.sink5_channel       (rsp_demux_005_src0_channel),                 //          .channel
		.sink5_data          (rsp_demux_005_src0_data),                    //          .data
		.sink5_startofpacket (rsp_demux_005_src0_startofpacket),           //          .startofpacket
		.sink5_endofpacket   (rsp_demux_005_src0_endofpacket),             //          .endofpacket
		.sink6_ready         (rsp_demux_006_src0_ready),                   //     sink6.ready
		.sink6_valid         (rsp_demux_006_src0_valid),                   //          .valid
		.sink6_channel       (rsp_demux_006_src0_channel),                 //          .channel
		.sink6_data          (rsp_demux_006_src0_data),                    //          .data
		.sink6_startofpacket (rsp_demux_006_src0_startofpacket),           //          .startofpacket
		.sink6_endofpacket   (rsp_demux_006_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_mux rsp_mux_001 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_001_src_ready),                      //       src.ready
		.src_valid           (rsp_mux_001_src_valid),                      //          .valid
		.src_data            (rsp_mux_001_src_data),                       //          .data
		.src_channel         (rsp_mux_001_src_channel),                    //          .channel
		.src_startofpacket   (rsp_mux_001_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (rsp_mux_001_src_endofpacket),                //          .endofpacket
		.sink0_ready         (rsp_demux_src1_ready),                       //     sink0.ready
		.sink0_valid         (rsp_demux_src1_valid),                       //          .valid
		.sink0_channel       (rsp_demux_src1_channel),                     //          .channel
		.sink0_data          (rsp_demux_src1_data),                        //          .data
		.sink0_startofpacket (rsp_demux_src1_startofpacket),               //          .startofpacket
		.sink0_endofpacket   (rsp_demux_src1_endofpacket),                 //          .endofpacket
		.sink1_ready         (rsp_demux_019_src0_ready),                   //     sink1.ready
		.sink1_valid         (rsp_demux_019_src0_valid),                   //          .valid
		.sink1_channel       (rsp_demux_019_src0_channel),                 //          .channel
		.sink1_data          (rsp_demux_019_src0_data),                    //          .data
		.sink1_startofpacket (rsp_demux_019_src0_startofpacket),           //          .startofpacket
		.sink1_endofpacket   (rsp_demux_019_src0_endofpacket),             //          .endofpacket
		.sink2_ready         (rsp_demux_020_src0_ready),                   //     sink2.ready
		.sink2_valid         (rsp_demux_020_src0_valid),                   //          .valid
		.sink2_channel       (rsp_demux_020_src0_channel),                 //          .channel
		.sink2_data          (rsp_demux_020_src0_data),                    //          .data
		.sink2_startofpacket (rsp_demux_020_src0_startofpacket),           //          .startofpacket
		.sink2_endofpacket   (rsp_demux_020_src0_endofpacket),             //          .endofpacket
		.sink3_ready         (rsp_demux_021_src0_ready),                   //     sink3.ready
		.sink3_valid         (rsp_demux_021_src0_valid),                   //          .valid
		.sink3_channel       (rsp_demux_021_src0_channel),                 //          .channel
		.sink3_data          (rsp_demux_021_src0_data),                    //          .data
		.sink3_startofpacket (rsp_demux_021_src0_startofpacket),           //          .startofpacket
		.sink3_endofpacket   (rsp_demux_021_src0_endofpacket),             //          .endofpacket
		.sink4_ready         (rsp_demux_022_src0_ready),                   //     sink4.ready
		.sink4_valid         (rsp_demux_022_src0_valid),                   //          .valid
		.sink4_channel       (rsp_demux_022_src0_channel),                 //          .channel
		.sink4_data          (rsp_demux_022_src0_data),                    //          .data
		.sink4_startofpacket (rsp_demux_022_src0_startofpacket),           //          .startofpacket
		.sink4_endofpacket   (rsp_demux_022_src0_endofpacket),             //          .endofpacket
		.sink5_ready         (rsp_demux_023_src0_ready),                   //     sink5.ready
		.sink5_valid         (rsp_demux_023_src0_valid),                   //          .valid
		.sink5_channel       (rsp_demux_023_src0_channel),                 //          .channel
		.sink5_data          (rsp_demux_023_src0_data),                    //          .data
		.sink5_startofpacket (rsp_demux_023_src0_startofpacket),           //          .startofpacket
		.sink5_endofpacket   (rsp_demux_023_src0_endofpacket),             //          .endofpacket
		.sink6_ready         (rsp_demux_024_src0_ready),                   //     sink6.ready
		.sink6_valid         (rsp_demux_024_src0_valid),                   //          .valid
		.sink6_channel       (rsp_demux_024_src0_channel),                 //          .channel
		.sink6_data          (rsp_demux_024_src0_data),                    //          .data
		.sink6_startofpacket (rsp_demux_024_src0_startofpacket),           //          .startofpacket
		.sink6_endofpacket   (rsp_demux_024_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_mux rsp_mux_002 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_002_src_ready),                      //       src.ready
		.src_valid           (rsp_mux_002_src_valid),                      //          .valid
		.src_data            (rsp_mux_002_src_data),                       //          .data
		.src_channel         (rsp_mux_002_src_channel),                    //          .channel
		.src_startofpacket   (rsp_mux_002_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (rsp_mux_002_src_endofpacket),                //          .endofpacket
		.sink0_ready         (rsp_demux_src2_ready),                       //     sink0.ready
		.sink0_valid         (rsp_demux_src2_valid),                       //          .valid
		.sink0_channel       (rsp_demux_src2_channel),                     //          .channel
		.sink0_data          (rsp_demux_src2_data),                        //          .data
		.sink0_startofpacket (rsp_demux_src2_startofpacket),               //          .startofpacket
		.sink0_endofpacket   (rsp_demux_src2_endofpacket),                 //          .endofpacket
		.sink1_ready         (rsp_demux_013_src0_ready),                   //     sink1.ready
		.sink1_valid         (rsp_demux_013_src0_valid),                   //          .valid
		.sink1_channel       (rsp_demux_013_src0_channel),                 //          .channel
		.sink1_data          (rsp_demux_013_src0_data),                    //          .data
		.sink1_startofpacket (rsp_demux_013_src0_startofpacket),           //          .startofpacket
		.sink1_endofpacket   (rsp_demux_013_src0_endofpacket),             //          .endofpacket
		.sink2_ready         (rsp_demux_014_src0_ready),                   //     sink2.ready
		.sink2_valid         (rsp_demux_014_src0_valid),                   //          .valid
		.sink2_channel       (rsp_demux_014_src0_channel),                 //          .channel
		.sink2_data          (rsp_demux_014_src0_data),                    //          .data
		.sink2_startofpacket (rsp_demux_014_src0_startofpacket),           //          .startofpacket
		.sink2_endofpacket   (rsp_demux_014_src0_endofpacket),             //          .endofpacket
		.sink3_ready         (rsp_demux_015_src0_ready),                   //     sink3.ready
		.sink3_valid         (rsp_demux_015_src0_valid),                   //          .valid
		.sink3_channel       (rsp_demux_015_src0_channel),                 //          .channel
		.sink3_data          (rsp_demux_015_src0_data),                    //          .data
		.sink3_startofpacket (rsp_demux_015_src0_startofpacket),           //          .startofpacket
		.sink3_endofpacket   (rsp_demux_015_src0_endofpacket),             //          .endofpacket
		.sink4_ready         (rsp_demux_016_src0_ready),                   //     sink4.ready
		.sink4_valid         (rsp_demux_016_src0_valid),                   //          .valid
		.sink4_channel       (rsp_demux_016_src0_channel),                 //          .channel
		.sink4_data          (rsp_demux_016_src0_data),                    //          .data
		.sink4_startofpacket (rsp_demux_016_src0_startofpacket),           //          .startofpacket
		.sink4_endofpacket   (rsp_demux_016_src0_endofpacket),             //          .endofpacket
		.sink5_ready         (rsp_demux_017_src0_ready),                   //     sink5.ready
		.sink5_valid         (rsp_demux_017_src0_valid),                   //          .valid
		.sink5_channel       (rsp_demux_017_src0_channel),                 //          .channel
		.sink5_data          (rsp_demux_017_src0_data),                    //          .data
		.sink5_startofpacket (rsp_demux_017_src0_startofpacket),           //          .startofpacket
		.sink5_endofpacket   (rsp_demux_017_src0_endofpacket),             //          .endofpacket
		.sink6_ready         (rsp_demux_018_src0_ready),                   //     sink6.ready
		.sink6_valid         (rsp_demux_018_src0_valid),                   //          .valid
		.sink6_channel       (rsp_demux_018_src0_channel),                 //          .channel
		.sink6_data          (rsp_demux_018_src0_data),                    //          .data
		.sink6_startofpacket (rsp_demux_018_src0_startofpacket),           //          .startofpacket
		.sink6_endofpacket   (rsp_demux_018_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_mux rsp_mux_003 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_003_src_ready),                      //       src.ready
		.src_valid           (rsp_mux_003_src_valid),                      //          .valid
		.src_data            (rsp_mux_003_src_data),                       //          .data
		.src_channel         (rsp_mux_003_src_channel),                    //          .channel
		.src_startofpacket   (rsp_mux_003_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (rsp_mux_003_src_endofpacket),                //          .endofpacket
		.sink0_ready         (rsp_demux_src3_ready),                       //     sink0.ready
		.sink0_valid         (rsp_demux_src3_valid),                       //          .valid
		.sink0_channel       (rsp_demux_src3_channel),                     //          .channel
		.sink0_data          (rsp_demux_src3_data),                        //          .data
		.sink0_startofpacket (rsp_demux_src3_startofpacket),               //          .startofpacket
		.sink0_endofpacket   (rsp_demux_src3_endofpacket),                 //          .endofpacket
		.sink1_ready         (rsp_demux_007_src0_ready),                   //     sink1.ready
		.sink1_valid         (rsp_demux_007_src0_valid),                   //          .valid
		.sink1_channel       (rsp_demux_007_src0_channel),                 //          .channel
		.sink1_data          (rsp_demux_007_src0_data),                    //          .data
		.sink1_startofpacket (rsp_demux_007_src0_startofpacket),           //          .startofpacket
		.sink1_endofpacket   (rsp_demux_007_src0_endofpacket),             //          .endofpacket
		.sink2_ready         (rsp_demux_008_src0_ready),                   //     sink2.ready
		.sink2_valid         (rsp_demux_008_src0_valid),                   //          .valid
		.sink2_channel       (rsp_demux_008_src0_channel),                 //          .channel
		.sink2_data          (rsp_demux_008_src0_data),                    //          .data
		.sink2_startofpacket (rsp_demux_008_src0_startofpacket),           //          .startofpacket
		.sink2_endofpacket   (rsp_demux_008_src0_endofpacket),             //          .endofpacket
		.sink3_ready         (rsp_demux_009_src0_ready),                   //     sink3.ready
		.sink3_valid         (rsp_demux_009_src0_valid),                   //          .valid
		.sink3_channel       (rsp_demux_009_src0_channel),                 //          .channel
		.sink3_data          (rsp_demux_009_src0_data),                    //          .data
		.sink3_startofpacket (rsp_demux_009_src0_startofpacket),           //          .startofpacket
		.sink3_endofpacket   (rsp_demux_009_src0_endofpacket),             //          .endofpacket
		.sink4_ready         (rsp_demux_010_src0_ready),                   //     sink4.ready
		.sink4_valid         (rsp_demux_010_src0_valid),                   //          .valid
		.sink4_channel       (rsp_demux_010_src0_channel),                 //          .channel
		.sink4_data          (rsp_demux_010_src0_data),                    //          .data
		.sink4_startofpacket (rsp_demux_010_src0_startofpacket),           //          .startofpacket
		.sink4_endofpacket   (rsp_demux_010_src0_endofpacket),             //          .endofpacket
		.sink5_ready         (rsp_demux_011_src0_ready),                   //     sink5.ready
		.sink5_valid         (rsp_demux_011_src0_valid),                   //          .valid
		.sink5_channel       (rsp_demux_011_src0_channel),                 //          .channel
		.sink5_data          (rsp_demux_011_src0_data),                    //          .data
		.sink5_startofpacket (rsp_demux_011_src0_startofpacket),           //          .startofpacket
		.sink5_endofpacket   (rsp_demux_011_src0_endofpacket),             //          .endofpacket
		.sink6_ready         (rsp_demux_012_src0_ready),                   //     sink6.ready
		.sink6_valid         (rsp_demux_012_src0_valid),                   //          .valid
		.sink6_channel       (rsp_demux_012_src0_channel),                 //          .channel
		.sink6_data          (rsp_demux_012_src0_data),                    //          .data
		.sink6_startofpacket (rsp_demux_012_src0_startofpacket),           //          .startofpacket
		.sink6_endofpacket   (rsp_demux_012_src0_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_mux_004 rsp_mux_004 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_004_src_ready),                      //       src.ready
		.src_valid           (rsp_mux_004_src_valid),                      //          .valid
		.src_data            (rsp_mux_004_src_data),                       //          .data
		.src_channel         (rsp_mux_004_src_channel),                    //          .channel
		.src_startofpacket   (rsp_mux_004_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (rsp_mux_004_src_endofpacket),                //          .endofpacket
		.sink0_ready         (rsp_demux_007_src1_ready),                   //     sink0.ready
		.sink0_valid         (rsp_demux_007_src1_valid),                   //          .valid
		.sink0_channel       (rsp_demux_007_src1_channel),                 //          .channel
		.sink0_data          (rsp_demux_007_src1_data),                    //          .data
		.sink0_startofpacket (rsp_demux_007_src1_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (rsp_demux_007_src1_endofpacket),             //          .endofpacket
		.sink1_ready         (rsp_demux_012_src1_ready),                   //     sink1.ready
		.sink1_valid         (rsp_demux_012_src1_valid),                   //          .valid
		.sink1_channel       (rsp_demux_012_src1_channel),                 //          .channel
		.sink1_data          (rsp_demux_012_src1_data),                    //          .data
		.sink1_startofpacket (rsp_demux_012_src1_startofpacket),           //          .startofpacket
		.sink1_endofpacket   (rsp_demux_012_src1_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_mux_004 rsp_mux_005 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_005_src_ready),                      //       src.ready
		.src_valid           (rsp_mux_005_src_valid),                      //          .valid
		.src_data            (rsp_mux_005_src_data),                       //          .data
		.src_channel         (rsp_mux_005_src_channel),                    //          .channel
		.src_startofpacket   (rsp_mux_005_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (rsp_mux_005_src_endofpacket),                //          .endofpacket
		.sink0_ready         (rsp_demux_013_src1_ready),                   //     sink0.ready
		.sink0_valid         (rsp_demux_013_src1_valid),                   //          .valid
		.sink0_channel       (rsp_demux_013_src1_channel),                 //          .channel
		.sink0_data          (rsp_demux_013_src1_data),                    //          .data
		.sink0_startofpacket (rsp_demux_013_src1_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (rsp_demux_013_src1_endofpacket),             //          .endofpacket
		.sink1_ready         (rsp_demux_018_src1_ready),                   //     sink1.ready
		.sink1_valid         (rsp_demux_018_src1_valid),                   //          .valid
		.sink1_channel       (rsp_demux_018_src1_channel),                 //          .channel
		.sink1_data          (rsp_demux_018_src1_data),                    //          .data
		.sink1_startofpacket (rsp_demux_018_src1_startofpacket),           //          .startofpacket
		.sink1_endofpacket   (rsp_demux_018_src1_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_mux_004 rsp_mux_006 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_006_src_ready),                      //       src.ready
		.src_valid           (rsp_mux_006_src_valid),                      //          .valid
		.src_data            (rsp_mux_006_src_data),                       //          .data
		.src_channel         (rsp_mux_006_src_channel),                    //          .channel
		.src_startofpacket   (rsp_mux_006_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (rsp_mux_006_src_endofpacket),                //          .endofpacket
		.sink0_ready         (rsp_demux_019_src1_ready),                   //     sink0.ready
		.sink0_valid         (rsp_demux_019_src1_valid),                   //          .valid
		.sink0_channel       (rsp_demux_019_src1_channel),                 //          .channel
		.sink0_data          (rsp_demux_019_src1_data),                    //          .data
		.sink0_startofpacket (rsp_demux_019_src1_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (rsp_demux_019_src1_endofpacket),             //          .endofpacket
		.sink1_ready         (rsp_demux_024_src1_ready),                   //     sink1.ready
		.sink1_valid         (rsp_demux_024_src1_valid),                   //          .valid
		.sink1_channel       (rsp_demux_024_src1_channel),                 //          .channel
		.sink1_data          (rsp_demux_024_src1_data),                    //          .data
		.sink1_startofpacket (rsp_demux_024_src1_startofpacket),           //          .startofpacket
		.sink1_endofpacket   (rsp_demux_024_src1_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_rsp_mux_004 rsp_mux_007 (
		.clk                 (clk_0_clk_clk),                              //       clk.clk
		.reset               (nios2_00_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_007_src_ready),                      //       src.ready
		.src_valid           (rsp_mux_007_src_valid),                      //          .valid
		.src_data            (rsp_mux_007_src_data),                       //          .data
		.src_channel         (rsp_mux_007_src_channel),                    //          .channel
		.src_startofpacket   (rsp_mux_007_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (rsp_mux_007_src_endofpacket),                //          .endofpacket
		.sink0_ready         (rsp_demux_001_src1_ready),                   //     sink0.ready
		.sink0_valid         (rsp_demux_001_src1_valid),                   //          .valid
		.sink0_channel       (rsp_demux_001_src1_channel),                 //          .channel
		.sink0_data          (rsp_demux_001_src1_data),                    //          .data
		.sink0_startofpacket (rsp_demux_001_src1_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (rsp_demux_001_src1_endofpacket),             //          .endofpacket
		.sink1_ready         (rsp_demux_006_src1_ready),                   //     sink1.ready
		.sink1_valid         (rsp_demux_006_src1_valid),                   //          .valid
		.sink1_channel       (rsp_demux_006_src1_channel),                 //          .channel
		.sink1_data          (rsp_demux_006_src1_data),                    //          .data
		.sink1_startofpacket (rsp_demux_006_src1_startofpacket),           //          .startofpacket
		.sink1_endofpacket   (rsp_demux_006_src1_endofpacket)              //          .endofpacket
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter (
		.in_clk_0_clk   (clk_0_clk_clk),                                            // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset),               // in_rst_0.reset
		.in_0_data      (jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_out_0_data),                             //    out_0.data
		.out_0_valid    (avalon_st_adapter_out_0_valid),                            //         .valid
		.out_0_ready    (avalon_st_adapter_out_0_ready),                            //         .ready
		.out_0_error    (avalon_st_adapter_out_0_error)                             //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_001 (
		.in_clk_0_clk   (clk_0_clk_clk),                                       // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset),          // in_rst_0.reset
		.in_0_data      (nios2_00_debug_mem_slave_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (nios2_00_debug_mem_slave_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (nios2_00_debug_mem_slave_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_001_out_0_data),                    //    out_0.data
		.out_0_valid    (avalon_st_adapter_001_out_0_valid),                   //         .valid
		.out_0_ready    (avalon_st_adapter_001_out_0_ready),                   //         .ready
		.out_0_error    (avalon_st_adapter_001_out_0_error)                    //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_002 (
		.in_clk_0_clk   (clk_0_clk_clk),                                // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset),   // in_rst_0.reset
		.in_0_data      (fifo_source_00_in_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (fifo_source_00_in_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (fifo_source_00_in_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_002_out_0_data),             //    out_0.data
		.out_0_valid    (avalon_st_adapter_002_out_0_valid),            //         .valid
		.out_0_ready    (avalon_st_adapter_002_out_0_ready),            //         .ready
		.out_0_error    (avalon_st_adapter_002_out_0_error)             //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_003 (
		.in_clk_0_clk   (clk_0_clk_clk),                                  // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset),     // in_rst_0.reset
		.in_0_data      (fifo_sink_00_in_csr_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (fifo_sink_00_in_csr_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (fifo_sink_00_in_csr_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_003_out_0_data),               //    out_0.data
		.out_0_valid    (avalon_st_adapter_003_out_0_valid),              //         .valid
		.out_0_ready    (avalon_st_adapter_003_out_0_ready),              //         .ready
		.out_0_error    (avalon_st_adapter_003_out_0_error)               //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_004 (
		.in_clk_0_clk   (clk_0_clk_clk),                                    // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset),       // in_rst_0.reset
		.in_0_data      (fifo_source_00_in_csr_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (fifo_source_00_in_csr_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (fifo_source_00_in_csr_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_004_out_0_data),                 //    out_0.data
		.out_0_valid    (avalon_st_adapter_004_out_0_valid),                //         .valid
		.out_0_ready    (avalon_st_adapter_004_out_0_ready),                //         .ready
		.out_0_error    (avalon_st_adapter_004_out_0_error)                 //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_005 (
		.in_clk_0_clk   (clk_0_clk_clk),                               // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset),  // in_rst_0.reset
		.in_0_data      (fifo_sink_00_out_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (fifo_sink_00_out_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (fifo_sink_00_out_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_005_out_0_data),            //    out_0.data
		.out_0_valid    (avalon_st_adapter_005_out_0_valid),           //         .valid
		.out_0_ready    (avalon_st_adapter_005_out_0_ready),           //         .ready
		.out_0_error    (avalon_st_adapter_005_out_0_error)            //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_006 (
		.in_clk_0_clk   (clk_0_clk_clk),                              // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (data_mem_00_s1_agent_rdata_fifo_src_data),   //     in_0.data
		.in_0_valid     (data_mem_00_s1_agent_rdata_fifo_src_valid),  //         .valid
		.in_0_ready     (data_mem_00_s1_agent_rdata_fifo_src_ready),  //         .ready
		.out_0_data     (avalon_st_adapter_006_out_0_data),           //    out_0.data
		.out_0_valid    (avalon_st_adapter_006_out_0_valid),          //         .valid
		.out_0_ready    (avalon_st_adapter_006_out_0_ready),          //         .ready
		.out_0_error    (avalon_st_adapter_006_out_0_error)           //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_007 (
		.in_clk_0_clk   (clk_0_clk_clk),                                       // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset),          // in_rst_0.reset
		.in_0_data      (nios2_11_debug_mem_slave_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (nios2_11_debug_mem_slave_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (nios2_11_debug_mem_slave_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_007_out_0_data),                    //    out_0.data
		.out_0_valid    (avalon_st_adapter_007_out_0_valid),                   //         .valid
		.out_0_ready    (avalon_st_adapter_007_out_0_ready),                   //         .ready
		.out_0_error    (avalon_st_adapter_007_out_0_error)                    //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_008 (
		.in_clk_0_clk   (clk_0_clk_clk),                                // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset),   // in_rst_0.reset
		.in_0_data      (fifo_source_11_in_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (fifo_source_11_in_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (fifo_source_11_in_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_008_out_0_data),             //    out_0.data
		.out_0_valid    (avalon_st_adapter_008_out_0_valid),            //         .valid
		.out_0_ready    (avalon_st_adapter_008_out_0_ready),            //         .ready
		.out_0_error    (avalon_st_adapter_008_out_0_error)             //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_009 (
		.in_clk_0_clk   (clk_0_clk_clk),                                  // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset),     // in_rst_0.reset
		.in_0_data      (fifo_sink_11_in_csr_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (fifo_sink_11_in_csr_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (fifo_sink_11_in_csr_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_009_out_0_data),               //    out_0.data
		.out_0_valid    (avalon_st_adapter_009_out_0_valid),              //         .valid
		.out_0_ready    (avalon_st_adapter_009_out_0_ready),              //         .ready
		.out_0_error    (avalon_st_adapter_009_out_0_error)               //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_010 (
		.in_clk_0_clk   (clk_0_clk_clk),                                    // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset),       // in_rst_0.reset
		.in_0_data      (fifo_source_11_in_csr_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (fifo_source_11_in_csr_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (fifo_source_11_in_csr_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_010_out_0_data),                 //    out_0.data
		.out_0_valid    (avalon_st_adapter_010_out_0_valid),                //         .valid
		.out_0_ready    (avalon_st_adapter_010_out_0_ready),                //         .ready
		.out_0_error    (avalon_st_adapter_010_out_0_error)                 //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_011 (
		.in_clk_0_clk   (clk_0_clk_clk),                               // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset),  // in_rst_0.reset
		.in_0_data      (fifo_sink_11_out_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (fifo_sink_11_out_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (fifo_sink_11_out_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_011_out_0_data),            //    out_0.data
		.out_0_valid    (avalon_st_adapter_011_out_0_valid),           //         .valid
		.out_0_ready    (avalon_st_adapter_011_out_0_ready),           //         .ready
		.out_0_error    (avalon_st_adapter_011_out_0_error)            //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_012 (
		.in_clk_0_clk   (clk_0_clk_clk),                              // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (data_mem_11_s1_agent_rdata_fifo_src_data),   //     in_0.data
		.in_0_valid     (data_mem_11_s1_agent_rdata_fifo_src_valid),  //         .valid
		.in_0_ready     (data_mem_11_s1_agent_rdata_fifo_src_ready),  //         .ready
		.out_0_data     (avalon_st_adapter_012_out_0_data),           //    out_0.data
		.out_0_valid    (avalon_st_adapter_012_out_0_valid),          //         .valid
		.out_0_ready    (avalon_st_adapter_012_out_0_ready),          //         .ready
		.out_0_error    (avalon_st_adapter_012_out_0_error)           //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_013 (
		.in_clk_0_clk   (clk_0_clk_clk),                                       // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset),          // in_rst_0.reset
		.in_0_data      (nios2_10_debug_mem_slave_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (nios2_10_debug_mem_slave_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (nios2_10_debug_mem_slave_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_013_out_0_data),                    //    out_0.data
		.out_0_valid    (avalon_st_adapter_013_out_0_valid),                   //         .valid
		.out_0_ready    (avalon_st_adapter_013_out_0_ready),                   //         .ready
		.out_0_error    (avalon_st_adapter_013_out_0_error)                    //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_014 (
		.in_clk_0_clk   (clk_0_clk_clk),                                // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset),   // in_rst_0.reset
		.in_0_data      (fifo_source_10_in_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (fifo_source_10_in_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (fifo_source_10_in_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_014_out_0_data),             //    out_0.data
		.out_0_valid    (avalon_st_adapter_014_out_0_valid),            //         .valid
		.out_0_ready    (avalon_st_adapter_014_out_0_ready),            //         .ready
		.out_0_error    (avalon_st_adapter_014_out_0_error)             //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_015 (
		.in_clk_0_clk   (clk_0_clk_clk),                                  // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset),     // in_rst_0.reset
		.in_0_data      (fifo_sink_10_in_csr_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (fifo_sink_10_in_csr_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (fifo_sink_10_in_csr_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_015_out_0_data),               //    out_0.data
		.out_0_valid    (avalon_st_adapter_015_out_0_valid),              //         .valid
		.out_0_ready    (avalon_st_adapter_015_out_0_ready),              //         .ready
		.out_0_error    (avalon_st_adapter_015_out_0_error)               //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_016 (
		.in_clk_0_clk   (clk_0_clk_clk),                                    // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset),       // in_rst_0.reset
		.in_0_data      (fifo_source_10_in_csr_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (fifo_source_10_in_csr_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (fifo_source_10_in_csr_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_016_out_0_data),                 //    out_0.data
		.out_0_valid    (avalon_st_adapter_016_out_0_valid),                //         .valid
		.out_0_ready    (avalon_st_adapter_016_out_0_ready),                //         .ready
		.out_0_error    (avalon_st_adapter_016_out_0_error)                 //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_017 (
		.in_clk_0_clk   (clk_0_clk_clk),                               // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset),  // in_rst_0.reset
		.in_0_data      (fifo_sink_10_out_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (fifo_sink_10_out_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (fifo_sink_10_out_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_017_out_0_data),            //    out_0.data
		.out_0_valid    (avalon_st_adapter_017_out_0_valid),           //         .valid
		.out_0_ready    (avalon_st_adapter_017_out_0_ready),           //         .ready
		.out_0_error    (avalon_st_adapter_017_out_0_error)            //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_018 (
		.in_clk_0_clk   (clk_0_clk_clk),                              // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (data_mem_10_s1_agent_rdata_fifo_src_data),   //     in_0.data
		.in_0_valid     (data_mem_10_s1_agent_rdata_fifo_src_valid),  //         .valid
		.in_0_ready     (data_mem_10_s1_agent_rdata_fifo_src_ready),  //         .ready
		.out_0_data     (avalon_st_adapter_018_out_0_data),           //    out_0.data
		.out_0_valid    (avalon_st_adapter_018_out_0_valid),          //         .valid
		.out_0_ready    (avalon_st_adapter_018_out_0_ready),          //         .ready
		.out_0_error    (avalon_st_adapter_018_out_0_error)           //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_019 (
		.in_clk_0_clk   (clk_0_clk_clk),                                       // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset),          // in_rst_0.reset
		.in_0_data      (nios2_01_debug_mem_slave_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (nios2_01_debug_mem_slave_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (nios2_01_debug_mem_slave_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_019_out_0_data),                    //    out_0.data
		.out_0_valid    (avalon_st_adapter_019_out_0_valid),                   //         .valid
		.out_0_ready    (avalon_st_adapter_019_out_0_ready),                   //         .ready
		.out_0_error    (avalon_st_adapter_019_out_0_error)                    //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_020 (
		.in_clk_0_clk   (clk_0_clk_clk),                                // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset),   // in_rst_0.reset
		.in_0_data      (fifo_source_01_in_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (fifo_source_01_in_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (fifo_source_01_in_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_020_out_0_data),             //    out_0.data
		.out_0_valid    (avalon_st_adapter_020_out_0_valid),            //         .valid
		.out_0_ready    (avalon_st_adapter_020_out_0_ready),            //         .ready
		.out_0_error    (avalon_st_adapter_020_out_0_error)             //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_021 (
		.in_clk_0_clk   (clk_0_clk_clk),                                  // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset),     // in_rst_0.reset
		.in_0_data      (fifo_sink_01_in_csr_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (fifo_sink_01_in_csr_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (fifo_sink_01_in_csr_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_021_out_0_data),               //    out_0.data
		.out_0_valid    (avalon_st_adapter_021_out_0_valid),              //         .valid
		.out_0_ready    (avalon_st_adapter_021_out_0_ready),              //         .ready
		.out_0_error    (avalon_st_adapter_021_out_0_error)               //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_022 (
		.in_clk_0_clk   (clk_0_clk_clk),                                    // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset),       // in_rst_0.reset
		.in_0_data      (fifo_source_01_in_csr_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (fifo_source_01_in_csr_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (fifo_source_01_in_csr_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_022_out_0_data),                 //    out_0.data
		.out_0_valid    (avalon_st_adapter_022_out_0_valid),                //         .valid
		.out_0_ready    (avalon_st_adapter_022_out_0_ready),                //         .ready
		.out_0_error    (avalon_st_adapter_022_out_0_error)                 //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_023 (
		.in_clk_0_clk   (clk_0_clk_clk),                               // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset),  // in_rst_0.reset
		.in_0_data      (fifo_sink_01_out_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (fifo_sink_01_out_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (fifo_sink_01_out_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_023_out_0_data),            //    out_0.data
		.out_0_valid    (avalon_st_adapter_023_out_0_valid),           //         .valid
		.out_0_ready    (avalon_st_adapter_023_out_0_ready),           //         .ready
		.out_0_error    (avalon_st_adapter_023_out_0_error)            //         .error
	);

	qsys_system_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_024 (
		.in_clk_0_clk   (clk_0_clk_clk),                              // in_clk_0.clk
		.in_rst_0_reset (nios2_00_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (data_mem_01_s1_agent_rdata_fifo_src_data),   //     in_0.data
		.in_0_valid     (data_mem_01_s1_agent_rdata_fifo_src_valid),  //         .valid
		.in_0_ready     (data_mem_01_s1_agent_rdata_fifo_src_ready),  //         .ready
		.out_0_data     (avalon_st_adapter_024_out_0_data),           //    out_0.data
		.out_0_valid    (avalon_st_adapter_024_out_0_valid),          //         .valid
		.out_0_ready    (avalon_st_adapter_024_out_0_ready),          //         .ready
		.out_0_error    (avalon_st_adapter_024_out_0_error)           //         .error
	);

endmodule
