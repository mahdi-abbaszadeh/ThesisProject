// adaptor2x2_mm_interconnect_3.v

// This file was auto-generated from altera_mm_interconnect_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 17.1 590

`timescale 1 ps / 1 ps
module adaptor2x2_mm_interconnect_3 (
		input  wire        clk_0_clk_clk,                                   //                                 clk_0_clk.clk
		input  wire        nios2_gen2_11_reset_reset_bridge_in_reset_reset, // nios2_gen2_11_reset_reset_bridge_in_reset.reset
		input  wire [13:0] nios2_gen2_11_data_master_address,               //                 nios2_gen2_11_data_master.address
		output wire        nios2_gen2_11_data_master_waitrequest,           //                                          .waitrequest
		input  wire [3:0]  nios2_gen2_11_data_master_byteenable,            //                                          .byteenable
		input  wire        nios2_gen2_11_data_master_read,                  //                                          .read
		output wire [31:0] nios2_gen2_11_data_master_readdata,              //                                          .readdata
		input  wire        nios2_gen2_11_data_master_write,                 //                                          .write
		input  wire [31:0] nios2_gen2_11_data_master_writedata,             //                                          .writedata
		input  wire        nios2_gen2_11_data_master_debugaccess,           //                                          .debugaccess
		input  wire [13:0] nios2_gen2_11_instruction_master_address,        //          nios2_gen2_11_instruction_master.address
		output wire        nios2_gen2_11_instruction_master_waitrequest,    //                                          .waitrequest
		input  wire        nios2_gen2_11_instruction_master_read,           //                                          .read
		output wire [31:0] nios2_gen2_11_instruction_master_readdata,       //                                          .readdata
		output wire        adaptor_2x2_0_Input_11_read,                     //                    adaptor_2x2_0_Input_11.read
		input  wire [7:0]  adaptor_2x2_0_Input_11_readdata,                 //                                          .readdata
		output wire        adaptor_2x2_0_Output_11_write,                   //                   adaptor_2x2_0_Output_11.write
		output wire [7:0]  adaptor_2x2_0_Output_11_writedata,               //                                          .writedata
		input  wire        adaptor_2x2_0_Output_11_waitrequest,             //                                          .waitrequest
		output wire [9:0]  Data_Memory_11_s1_address,                       //                         Data_Memory_11_s1.address
		output wire        Data_Memory_11_s1_write,                         //                                          .write
		input  wire [31:0] Data_Memory_11_s1_readdata,                      //                                          .readdata
		output wire [31:0] Data_Memory_11_s1_writedata,                     //                                          .writedata
		output wire [3:0]  Data_Memory_11_s1_byteenable,                    //                                          .byteenable
		output wire        Data_Memory_11_s1_chipselect,                    //                                          .chipselect
		output wire        Data_Memory_11_s1_clken,                         //                                          .clken
		output wire [9:0]  Instruction_Memory_11_s1_address,                //                  Instruction_Memory_11_s1.address
		output wire        Instruction_Memory_11_s1_write,                  //                                          .write
		input  wire [31:0] Instruction_Memory_11_s1_readdata,               //                                          .readdata
		output wire [31:0] Instruction_Memory_11_s1_writedata,              //                                          .writedata
		output wire [3:0]  Instruction_Memory_11_s1_byteenable,             //                                          .byteenable
		output wire        Instruction_Memory_11_s1_chipselect,             //                                          .chipselect
		output wire        Instruction_Memory_11_s1_clken,                  //                                          .clken
		output wire [0:0]  jtag_uart_11_avalon_jtag_slave_address,          //            jtag_uart_11_avalon_jtag_slave.address
		output wire        jtag_uart_11_avalon_jtag_slave_write,            //                                          .write
		output wire        jtag_uart_11_avalon_jtag_slave_read,             //                                          .read
		input  wire [31:0] jtag_uart_11_avalon_jtag_slave_readdata,         //                                          .readdata
		output wire [31:0] jtag_uart_11_avalon_jtag_slave_writedata,        //                                          .writedata
		input  wire        jtag_uart_11_avalon_jtag_slave_waitrequest,      //                                          .waitrequest
		output wire        jtag_uart_11_avalon_jtag_slave_chipselect,       //                                          .chipselect
		output wire [8:0]  nios2_gen2_11_debug_mem_slave_address,           //             nios2_gen2_11_debug_mem_slave.address
		output wire        nios2_gen2_11_debug_mem_slave_write,             //                                          .write
		output wire        nios2_gen2_11_debug_mem_slave_read,              //                                          .read
		input  wire [31:0] nios2_gen2_11_debug_mem_slave_readdata,          //                                          .readdata
		output wire [31:0] nios2_gen2_11_debug_mem_slave_writedata,         //                                          .writedata
		output wire [3:0]  nios2_gen2_11_debug_mem_slave_byteenable,        //                                          .byteenable
		input  wire        nios2_gen2_11_debug_mem_slave_waitrequest,       //                                          .waitrequest
		output wire        nios2_gen2_11_debug_mem_slave_debugaccess        //                                          .debugaccess
	);

	wire         nios2_gen2_11_data_master_translator_avalon_universal_master_0_waitrequest;          // nios2_gen2_11_data_master_agent:av_waitrequest -> nios2_gen2_11_data_master_translator:uav_waitrequest
	wire  [31:0] nios2_gen2_11_data_master_translator_avalon_universal_master_0_readdata;             // nios2_gen2_11_data_master_agent:av_readdata -> nios2_gen2_11_data_master_translator:uav_readdata
	wire         nios2_gen2_11_data_master_translator_avalon_universal_master_0_debugaccess;          // nios2_gen2_11_data_master_translator:uav_debugaccess -> nios2_gen2_11_data_master_agent:av_debugaccess
	wire  [13:0] nios2_gen2_11_data_master_translator_avalon_universal_master_0_address;              // nios2_gen2_11_data_master_translator:uav_address -> nios2_gen2_11_data_master_agent:av_address
	wire         nios2_gen2_11_data_master_translator_avalon_universal_master_0_read;                 // nios2_gen2_11_data_master_translator:uav_read -> nios2_gen2_11_data_master_agent:av_read
	wire   [3:0] nios2_gen2_11_data_master_translator_avalon_universal_master_0_byteenable;           // nios2_gen2_11_data_master_translator:uav_byteenable -> nios2_gen2_11_data_master_agent:av_byteenable
	wire         nios2_gen2_11_data_master_translator_avalon_universal_master_0_readdatavalid;        // nios2_gen2_11_data_master_agent:av_readdatavalid -> nios2_gen2_11_data_master_translator:uav_readdatavalid
	wire         nios2_gen2_11_data_master_translator_avalon_universal_master_0_lock;                 // nios2_gen2_11_data_master_translator:uav_lock -> nios2_gen2_11_data_master_agent:av_lock
	wire         nios2_gen2_11_data_master_translator_avalon_universal_master_0_write;                // nios2_gen2_11_data_master_translator:uav_write -> nios2_gen2_11_data_master_agent:av_write
	wire  [31:0] nios2_gen2_11_data_master_translator_avalon_universal_master_0_writedata;            // nios2_gen2_11_data_master_translator:uav_writedata -> nios2_gen2_11_data_master_agent:av_writedata
	wire   [2:0] nios2_gen2_11_data_master_translator_avalon_universal_master_0_burstcount;           // nios2_gen2_11_data_master_translator:uav_burstcount -> nios2_gen2_11_data_master_agent:av_burstcount
	wire         rsp_mux_src_valid;                                                                   // rsp_mux:src_valid -> nios2_gen2_11_data_master_agent:rp_valid
	wire  [89:0] rsp_mux_src_data;                                                                    // rsp_mux:src_data -> nios2_gen2_11_data_master_agent:rp_data
	wire         rsp_mux_src_ready;                                                                   // nios2_gen2_11_data_master_agent:rp_ready -> rsp_mux:src_ready
	wire   [5:0] rsp_mux_src_channel;                                                                 // rsp_mux:src_channel -> nios2_gen2_11_data_master_agent:rp_channel
	wire         rsp_mux_src_startofpacket;                                                           // rsp_mux:src_startofpacket -> nios2_gen2_11_data_master_agent:rp_startofpacket
	wire         rsp_mux_src_endofpacket;                                                             // rsp_mux:src_endofpacket -> nios2_gen2_11_data_master_agent:rp_endofpacket
	wire         nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_waitrequest;   // nios2_gen2_11_instruction_master_agent:av_waitrequest -> nios2_gen2_11_instruction_master_translator:uav_waitrequest
	wire  [31:0] nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_readdata;      // nios2_gen2_11_instruction_master_agent:av_readdata -> nios2_gen2_11_instruction_master_translator:uav_readdata
	wire         nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_debugaccess;   // nios2_gen2_11_instruction_master_translator:uav_debugaccess -> nios2_gen2_11_instruction_master_agent:av_debugaccess
	wire  [13:0] nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_address;       // nios2_gen2_11_instruction_master_translator:uav_address -> nios2_gen2_11_instruction_master_agent:av_address
	wire         nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_read;          // nios2_gen2_11_instruction_master_translator:uav_read -> nios2_gen2_11_instruction_master_agent:av_read
	wire   [3:0] nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_byteenable;    // nios2_gen2_11_instruction_master_translator:uav_byteenable -> nios2_gen2_11_instruction_master_agent:av_byteenable
	wire         nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_readdatavalid; // nios2_gen2_11_instruction_master_agent:av_readdatavalid -> nios2_gen2_11_instruction_master_translator:uav_readdatavalid
	wire         nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_lock;          // nios2_gen2_11_instruction_master_translator:uav_lock -> nios2_gen2_11_instruction_master_agent:av_lock
	wire         nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_write;         // nios2_gen2_11_instruction_master_translator:uav_write -> nios2_gen2_11_instruction_master_agent:av_write
	wire  [31:0] nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_writedata;     // nios2_gen2_11_instruction_master_translator:uav_writedata -> nios2_gen2_11_instruction_master_agent:av_writedata
	wire   [2:0] nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_burstcount;    // nios2_gen2_11_instruction_master_translator:uav_burstcount -> nios2_gen2_11_instruction_master_agent:av_burstcount
	wire         rsp_mux_001_src_valid;                                                               // rsp_mux_001:src_valid -> nios2_gen2_11_instruction_master_agent:rp_valid
	wire  [89:0] rsp_mux_001_src_data;                                                                // rsp_mux_001:src_data -> nios2_gen2_11_instruction_master_agent:rp_data
	wire         rsp_mux_001_src_ready;                                                               // nios2_gen2_11_instruction_master_agent:rp_ready -> rsp_mux_001:src_ready
	wire   [5:0] rsp_mux_001_src_channel;                                                             // rsp_mux_001:src_channel -> nios2_gen2_11_instruction_master_agent:rp_channel
	wire         rsp_mux_001_src_startofpacket;                                                       // rsp_mux_001:src_startofpacket -> nios2_gen2_11_instruction_master_agent:rp_startofpacket
	wire         rsp_mux_001_src_endofpacket;                                                         // rsp_mux_001:src_endofpacket -> nios2_gen2_11_instruction_master_agent:rp_endofpacket
	wire   [7:0] adaptor_2x2_0_input_11_agent_m0_readdata;                                            // adaptor_2x2_0_Input_11_translator:uav_readdata -> adaptor_2x2_0_Input_11_agent:m0_readdata
	wire         adaptor_2x2_0_input_11_agent_m0_waitrequest;                                         // adaptor_2x2_0_Input_11_translator:uav_waitrequest -> adaptor_2x2_0_Input_11_agent:m0_waitrequest
	wire         adaptor_2x2_0_input_11_agent_m0_debugaccess;                                         // adaptor_2x2_0_Input_11_agent:m0_debugaccess -> adaptor_2x2_0_Input_11_translator:uav_debugaccess
	wire  [13:0] adaptor_2x2_0_input_11_agent_m0_address;                                             // adaptor_2x2_0_Input_11_agent:m0_address -> adaptor_2x2_0_Input_11_translator:uav_address
	wire   [0:0] adaptor_2x2_0_input_11_agent_m0_byteenable;                                          // adaptor_2x2_0_Input_11_agent:m0_byteenable -> adaptor_2x2_0_Input_11_translator:uav_byteenable
	wire         adaptor_2x2_0_input_11_agent_m0_read;                                                // adaptor_2x2_0_Input_11_agent:m0_read -> adaptor_2x2_0_Input_11_translator:uav_read
	wire         adaptor_2x2_0_input_11_agent_m0_readdatavalid;                                       // adaptor_2x2_0_Input_11_translator:uav_readdatavalid -> adaptor_2x2_0_Input_11_agent:m0_readdatavalid
	wire         adaptor_2x2_0_input_11_agent_m0_lock;                                                // adaptor_2x2_0_Input_11_agent:m0_lock -> adaptor_2x2_0_Input_11_translator:uav_lock
	wire   [7:0] adaptor_2x2_0_input_11_agent_m0_writedata;                                           // adaptor_2x2_0_Input_11_agent:m0_writedata -> adaptor_2x2_0_Input_11_translator:uav_writedata
	wire         adaptor_2x2_0_input_11_agent_m0_write;                                               // adaptor_2x2_0_Input_11_agent:m0_write -> adaptor_2x2_0_Input_11_translator:uav_write
	wire   [0:0] adaptor_2x2_0_input_11_agent_m0_burstcount;                                          // adaptor_2x2_0_Input_11_agent:m0_burstcount -> adaptor_2x2_0_Input_11_translator:uav_burstcount
	wire         adaptor_2x2_0_input_11_agent_rf_source_valid;                                        // adaptor_2x2_0_Input_11_agent:rf_source_valid -> adaptor_2x2_0_Input_11_agent_rsp_fifo:in_valid
	wire  [63:0] adaptor_2x2_0_input_11_agent_rf_source_data;                                         // adaptor_2x2_0_Input_11_agent:rf_source_data -> adaptor_2x2_0_Input_11_agent_rsp_fifo:in_data
	wire         adaptor_2x2_0_input_11_agent_rf_source_ready;                                        // adaptor_2x2_0_Input_11_agent_rsp_fifo:in_ready -> adaptor_2x2_0_Input_11_agent:rf_source_ready
	wire         adaptor_2x2_0_input_11_agent_rf_source_startofpacket;                                // adaptor_2x2_0_Input_11_agent:rf_source_startofpacket -> adaptor_2x2_0_Input_11_agent_rsp_fifo:in_startofpacket
	wire         adaptor_2x2_0_input_11_agent_rf_source_endofpacket;                                  // adaptor_2x2_0_Input_11_agent:rf_source_endofpacket -> adaptor_2x2_0_Input_11_agent_rsp_fifo:in_endofpacket
	wire         adaptor_2x2_0_input_11_agent_rsp_fifo_out_valid;                                     // adaptor_2x2_0_Input_11_agent_rsp_fifo:out_valid -> adaptor_2x2_0_Input_11_agent:rf_sink_valid
	wire  [63:0] adaptor_2x2_0_input_11_agent_rsp_fifo_out_data;                                      // adaptor_2x2_0_Input_11_agent_rsp_fifo:out_data -> adaptor_2x2_0_Input_11_agent:rf_sink_data
	wire         adaptor_2x2_0_input_11_agent_rsp_fifo_out_ready;                                     // adaptor_2x2_0_Input_11_agent:rf_sink_ready -> adaptor_2x2_0_Input_11_agent_rsp_fifo:out_ready
	wire         adaptor_2x2_0_input_11_agent_rsp_fifo_out_startofpacket;                             // adaptor_2x2_0_Input_11_agent_rsp_fifo:out_startofpacket -> adaptor_2x2_0_Input_11_agent:rf_sink_startofpacket
	wire         adaptor_2x2_0_input_11_agent_rsp_fifo_out_endofpacket;                               // adaptor_2x2_0_Input_11_agent_rsp_fifo:out_endofpacket -> adaptor_2x2_0_Input_11_agent:rf_sink_endofpacket
	wire   [7:0] adaptor_2x2_0_output_11_agent_m0_readdata;                                           // adaptor_2x2_0_Output_11_translator:uav_readdata -> adaptor_2x2_0_Output_11_agent:m0_readdata
	wire         adaptor_2x2_0_output_11_agent_m0_waitrequest;                                        // adaptor_2x2_0_Output_11_translator:uav_waitrequest -> adaptor_2x2_0_Output_11_agent:m0_waitrequest
	wire         adaptor_2x2_0_output_11_agent_m0_debugaccess;                                        // adaptor_2x2_0_Output_11_agent:m0_debugaccess -> adaptor_2x2_0_Output_11_translator:uav_debugaccess
	wire  [13:0] adaptor_2x2_0_output_11_agent_m0_address;                                            // adaptor_2x2_0_Output_11_agent:m0_address -> adaptor_2x2_0_Output_11_translator:uav_address
	wire   [0:0] adaptor_2x2_0_output_11_agent_m0_byteenable;                                         // adaptor_2x2_0_Output_11_agent:m0_byteenable -> adaptor_2x2_0_Output_11_translator:uav_byteenable
	wire         adaptor_2x2_0_output_11_agent_m0_read;                                               // adaptor_2x2_0_Output_11_agent:m0_read -> adaptor_2x2_0_Output_11_translator:uav_read
	wire         adaptor_2x2_0_output_11_agent_m0_readdatavalid;                                      // adaptor_2x2_0_Output_11_translator:uav_readdatavalid -> adaptor_2x2_0_Output_11_agent:m0_readdatavalid
	wire         adaptor_2x2_0_output_11_agent_m0_lock;                                               // adaptor_2x2_0_Output_11_agent:m0_lock -> adaptor_2x2_0_Output_11_translator:uav_lock
	wire   [7:0] adaptor_2x2_0_output_11_agent_m0_writedata;                                          // adaptor_2x2_0_Output_11_agent:m0_writedata -> adaptor_2x2_0_Output_11_translator:uav_writedata
	wire         adaptor_2x2_0_output_11_agent_m0_write;                                              // adaptor_2x2_0_Output_11_agent:m0_write -> adaptor_2x2_0_Output_11_translator:uav_write
	wire   [0:0] adaptor_2x2_0_output_11_agent_m0_burstcount;                                         // adaptor_2x2_0_Output_11_agent:m0_burstcount -> adaptor_2x2_0_Output_11_translator:uav_burstcount
	wire         adaptor_2x2_0_output_11_agent_rf_source_valid;                                       // adaptor_2x2_0_Output_11_agent:rf_source_valid -> adaptor_2x2_0_Output_11_agent_rsp_fifo:in_valid
	wire  [63:0] adaptor_2x2_0_output_11_agent_rf_source_data;                                        // adaptor_2x2_0_Output_11_agent:rf_source_data -> adaptor_2x2_0_Output_11_agent_rsp_fifo:in_data
	wire         adaptor_2x2_0_output_11_agent_rf_source_ready;                                       // adaptor_2x2_0_Output_11_agent_rsp_fifo:in_ready -> adaptor_2x2_0_Output_11_agent:rf_source_ready
	wire         adaptor_2x2_0_output_11_agent_rf_source_startofpacket;                               // adaptor_2x2_0_Output_11_agent:rf_source_startofpacket -> adaptor_2x2_0_Output_11_agent_rsp_fifo:in_startofpacket
	wire         adaptor_2x2_0_output_11_agent_rf_source_endofpacket;                                 // adaptor_2x2_0_Output_11_agent:rf_source_endofpacket -> adaptor_2x2_0_Output_11_agent_rsp_fifo:in_endofpacket
	wire         adaptor_2x2_0_output_11_agent_rsp_fifo_out_valid;                                    // adaptor_2x2_0_Output_11_agent_rsp_fifo:out_valid -> adaptor_2x2_0_Output_11_agent:rf_sink_valid
	wire  [63:0] adaptor_2x2_0_output_11_agent_rsp_fifo_out_data;                                     // adaptor_2x2_0_Output_11_agent_rsp_fifo:out_data -> adaptor_2x2_0_Output_11_agent:rf_sink_data
	wire         adaptor_2x2_0_output_11_agent_rsp_fifo_out_ready;                                    // adaptor_2x2_0_Output_11_agent:rf_sink_ready -> adaptor_2x2_0_Output_11_agent_rsp_fifo:out_ready
	wire         adaptor_2x2_0_output_11_agent_rsp_fifo_out_startofpacket;                            // adaptor_2x2_0_Output_11_agent_rsp_fifo:out_startofpacket -> adaptor_2x2_0_Output_11_agent:rf_sink_startofpacket
	wire         adaptor_2x2_0_output_11_agent_rsp_fifo_out_endofpacket;                              // adaptor_2x2_0_Output_11_agent_rsp_fifo:out_endofpacket -> adaptor_2x2_0_Output_11_agent:rf_sink_endofpacket
	wire  [31:0] jtag_uart_11_avalon_jtag_slave_agent_m0_readdata;                                    // jtag_uart_11_avalon_jtag_slave_translator:uav_readdata -> jtag_uart_11_avalon_jtag_slave_agent:m0_readdata
	wire         jtag_uart_11_avalon_jtag_slave_agent_m0_waitrequest;                                 // jtag_uart_11_avalon_jtag_slave_translator:uav_waitrequest -> jtag_uart_11_avalon_jtag_slave_agent:m0_waitrequest
	wire         jtag_uart_11_avalon_jtag_slave_agent_m0_debugaccess;                                 // jtag_uart_11_avalon_jtag_slave_agent:m0_debugaccess -> jtag_uart_11_avalon_jtag_slave_translator:uav_debugaccess
	wire  [13:0] jtag_uart_11_avalon_jtag_slave_agent_m0_address;                                     // jtag_uart_11_avalon_jtag_slave_agent:m0_address -> jtag_uart_11_avalon_jtag_slave_translator:uav_address
	wire   [3:0] jtag_uart_11_avalon_jtag_slave_agent_m0_byteenable;                                  // jtag_uart_11_avalon_jtag_slave_agent:m0_byteenable -> jtag_uart_11_avalon_jtag_slave_translator:uav_byteenable
	wire         jtag_uart_11_avalon_jtag_slave_agent_m0_read;                                        // jtag_uart_11_avalon_jtag_slave_agent:m0_read -> jtag_uart_11_avalon_jtag_slave_translator:uav_read
	wire         jtag_uart_11_avalon_jtag_slave_agent_m0_readdatavalid;                               // jtag_uart_11_avalon_jtag_slave_translator:uav_readdatavalid -> jtag_uart_11_avalon_jtag_slave_agent:m0_readdatavalid
	wire         jtag_uart_11_avalon_jtag_slave_agent_m0_lock;                                        // jtag_uart_11_avalon_jtag_slave_agent:m0_lock -> jtag_uart_11_avalon_jtag_slave_translator:uav_lock
	wire  [31:0] jtag_uart_11_avalon_jtag_slave_agent_m0_writedata;                                   // jtag_uart_11_avalon_jtag_slave_agent:m0_writedata -> jtag_uart_11_avalon_jtag_slave_translator:uav_writedata
	wire         jtag_uart_11_avalon_jtag_slave_agent_m0_write;                                       // jtag_uart_11_avalon_jtag_slave_agent:m0_write -> jtag_uart_11_avalon_jtag_slave_translator:uav_write
	wire   [2:0] jtag_uart_11_avalon_jtag_slave_agent_m0_burstcount;                                  // jtag_uart_11_avalon_jtag_slave_agent:m0_burstcount -> jtag_uart_11_avalon_jtag_slave_translator:uav_burstcount
	wire         jtag_uart_11_avalon_jtag_slave_agent_rf_source_valid;                                // jtag_uart_11_avalon_jtag_slave_agent:rf_source_valid -> jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo:in_valid
	wire  [90:0] jtag_uart_11_avalon_jtag_slave_agent_rf_source_data;                                 // jtag_uart_11_avalon_jtag_slave_agent:rf_source_data -> jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo:in_data
	wire         jtag_uart_11_avalon_jtag_slave_agent_rf_source_ready;                                // jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo:in_ready -> jtag_uart_11_avalon_jtag_slave_agent:rf_source_ready
	wire         jtag_uart_11_avalon_jtag_slave_agent_rf_source_startofpacket;                        // jtag_uart_11_avalon_jtag_slave_agent:rf_source_startofpacket -> jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo:in_startofpacket
	wire         jtag_uart_11_avalon_jtag_slave_agent_rf_source_endofpacket;                          // jtag_uart_11_avalon_jtag_slave_agent:rf_source_endofpacket -> jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo:in_endofpacket
	wire         jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo_out_valid;                             // jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo:out_valid -> jtag_uart_11_avalon_jtag_slave_agent:rf_sink_valid
	wire  [90:0] jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo_out_data;                              // jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo:out_data -> jtag_uart_11_avalon_jtag_slave_agent:rf_sink_data
	wire         jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo_out_ready;                             // jtag_uart_11_avalon_jtag_slave_agent:rf_sink_ready -> jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo:out_ready
	wire         jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo_out_startofpacket;                     // jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo:out_startofpacket -> jtag_uart_11_avalon_jtag_slave_agent:rf_sink_startofpacket
	wire         jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo_out_endofpacket;                       // jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo:out_endofpacket -> jtag_uart_11_avalon_jtag_slave_agent:rf_sink_endofpacket
	wire         cmd_mux_002_src_valid;                                                               // cmd_mux_002:src_valid -> jtag_uart_11_avalon_jtag_slave_agent:cp_valid
	wire  [89:0] cmd_mux_002_src_data;                                                                // cmd_mux_002:src_data -> jtag_uart_11_avalon_jtag_slave_agent:cp_data
	wire         cmd_mux_002_src_ready;                                                               // jtag_uart_11_avalon_jtag_slave_agent:cp_ready -> cmd_mux_002:src_ready
	wire   [5:0] cmd_mux_002_src_channel;                                                             // cmd_mux_002:src_channel -> jtag_uart_11_avalon_jtag_slave_agent:cp_channel
	wire         cmd_mux_002_src_startofpacket;                                                       // cmd_mux_002:src_startofpacket -> jtag_uart_11_avalon_jtag_slave_agent:cp_startofpacket
	wire         cmd_mux_002_src_endofpacket;                                                         // cmd_mux_002:src_endofpacket -> jtag_uart_11_avalon_jtag_slave_agent:cp_endofpacket
	wire  [31:0] nios2_gen2_11_debug_mem_slave_agent_m0_readdata;                                     // nios2_gen2_11_debug_mem_slave_translator:uav_readdata -> nios2_gen2_11_debug_mem_slave_agent:m0_readdata
	wire         nios2_gen2_11_debug_mem_slave_agent_m0_waitrequest;                                  // nios2_gen2_11_debug_mem_slave_translator:uav_waitrequest -> nios2_gen2_11_debug_mem_slave_agent:m0_waitrequest
	wire         nios2_gen2_11_debug_mem_slave_agent_m0_debugaccess;                                  // nios2_gen2_11_debug_mem_slave_agent:m0_debugaccess -> nios2_gen2_11_debug_mem_slave_translator:uav_debugaccess
	wire  [13:0] nios2_gen2_11_debug_mem_slave_agent_m0_address;                                      // nios2_gen2_11_debug_mem_slave_agent:m0_address -> nios2_gen2_11_debug_mem_slave_translator:uav_address
	wire   [3:0] nios2_gen2_11_debug_mem_slave_agent_m0_byteenable;                                   // nios2_gen2_11_debug_mem_slave_agent:m0_byteenable -> nios2_gen2_11_debug_mem_slave_translator:uav_byteenable
	wire         nios2_gen2_11_debug_mem_slave_agent_m0_read;                                         // nios2_gen2_11_debug_mem_slave_agent:m0_read -> nios2_gen2_11_debug_mem_slave_translator:uav_read
	wire         nios2_gen2_11_debug_mem_slave_agent_m0_readdatavalid;                                // nios2_gen2_11_debug_mem_slave_translator:uav_readdatavalid -> nios2_gen2_11_debug_mem_slave_agent:m0_readdatavalid
	wire         nios2_gen2_11_debug_mem_slave_agent_m0_lock;                                         // nios2_gen2_11_debug_mem_slave_agent:m0_lock -> nios2_gen2_11_debug_mem_slave_translator:uav_lock
	wire  [31:0] nios2_gen2_11_debug_mem_slave_agent_m0_writedata;                                    // nios2_gen2_11_debug_mem_slave_agent:m0_writedata -> nios2_gen2_11_debug_mem_slave_translator:uav_writedata
	wire         nios2_gen2_11_debug_mem_slave_agent_m0_write;                                        // nios2_gen2_11_debug_mem_slave_agent:m0_write -> nios2_gen2_11_debug_mem_slave_translator:uav_write
	wire   [2:0] nios2_gen2_11_debug_mem_slave_agent_m0_burstcount;                                   // nios2_gen2_11_debug_mem_slave_agent:m0_burstcount -> nios2_gen2_11_debug_mem_slave_translator:uav_burstcount
	wire         nios2_gen2_11_debug_mem_slave_agent_rf_source_valid;                                 // nios2_gen2_11_debug_mem_slave_agent:rf_source_valid -> nios2_gen2_11_debug_mem_slave_agent_rsp_fifo:in_valid
	wire  [90:0] nios2_gen2_11_debug_mem_slave_agent_rf_source_data;                                  // nios2_gen2_11_debug_mem_slave_agent:rf_source_data -> nios2_gen2_11_debug_mem_slave_agent_rsp_fifo:in_data
	wire         nios2_gen2_11_debug_mem_slave_agent_rf_source_ready;                                 // nios2_gen2_11_debug_mem_slave_agent_rsp_fifo:in_ready -> nios2_gen2_11_debug_mem_slave_agent:rf_source_ready
	wire         nios2_gen2_11_debug_mem_slave_agent_rf_source_startofpacket;                         // nios2_gen2_11_debug_mem_slave_agent:rf_source_startofpacket -> nios2_gen2_11_debug_mem_slave_agent_rsp_fifo:in_startofpacket
	wire         nios2_gen2_11_debug_mem_slave_agent_rf_source_endofpacket;                           // nios2_gen2_11_debug_mem_slave_agent:rf_source_endofpacket -> nios2_gen2_11_debug_mem_slave_agent_rsp_fifo:in_endofpacket
	wire         nios2_gen2_11_debug_mem_slave_agent_rsp_fifo_out_valid;                              // nios2_gen2_11_debug_mem_slave_agent_rsp_fifo:out_valid -> nios2_gen2_11_debug_mem_slave_agent:rf_sink_valid
	wire  [90:0] nios2_gen2_11_debug_mem_slave_agent_rsp_fifo_out_data;                               // nios2_gen2_11_debug_mem_slave_agent_rsp_fifo:out_data -> nios2_gen2_11_debug_mem_slave_agent:rf_sink_data
	wire         nios2_gen2_11_debug_mem_slave_agent_rsp_fifo_out_ready;                              // nios2_gen2_11_debug_mem_slave_agent:rf_sink_ready -> nios2_gen2_11_debug_mem_slave_agent_rsp_fifo:out_ready
	wire         nios2_gen2_11_debug_mem_slave_agent_rsp_fifo_out_startofpacket;                      // nios2_gen2_11_debug_mem_slave_agent_rsp_fifo:out_startofpacket -> nios2_gen2_11_debug_mem_slave_agent:rf_sink_startofpacket
	wire         nios2_gen2_11_debug_mem_slave_agent_rsp_fifo_out_endofpacket;                        // nios2_gen2_11_debug_mem_slave_agent_rsp_fifo:out_endofpacket -> nios2_gen2_11_debug_mem_slave_agent:rf_sink_endofpacket
	wire         cmd_mux_003_src_valid;                                                               // cmd_mux_003:src_valid -> nios2_gen2_11_debug_mem_slave_agent:cp_valid
	wire  [89:0] cmd_mux_003_src_data;                                                                // cmd_mux_003:src_data -> nios2_gen2_11_debug_mem_slave_agent:cp_data
	wire         cmd_mux_003_src_ready;                                                               // nios2_gen2_11_debug_mem_slave_agent:cp_ready -> cmd_mux_003:src_ready
	wire   [5:0] cmd_mux_003_src_channel;                                                             // cmd_mux_003:src_channel -> nios2_gen2_11_debug_mem_slave_agent:cp_channel
	wire         cmd_mux_003_src_startofpacket;                                                       // cmd_mux_003:src_startofpacket -> nios2_gen2_11_debug_mem_slave_agent:cp_startofpacket
	wire         cmd_mux_003_src_endofpacket;                                                         // cmd_mux_003:src_endofpacket -> nios2_gen2_11_debug_mem_slave_agent:cp_endofpacket
	wire  [31:0] data_memory_11_s1_agent_m0_readdata;                                                 // Data_Memory_11_s1_translator:uav_readdata -> Data_Memory_11_s1_agent:m0_readdata
	wire         data_memory_11_s1_agent_m0_waitrequest;                                              // Data_Memory_11_s1_translator:uav_waitrequest -> Data_Memory_11_s1_agent:m0_waitrequest
	wire         data_memory_11_s1_agent_m0_debugaccess;                                              // Data_Memory_11_s1_agent:m0_debugaccess -> Data_Memory_11_s1_translator:uav_debugaccess
	wire  [13:0] data_memory_11_s1_agent_m0_address;                                                  // Data_Memory_11_s1_agent:m0_address -> Data_Memory_11_s1_translator:uav_address
	wire   [3:0] data_memory_11_s1_agent_m0_byteenable;                                               // Data_Memory_11_s1_agent:m0_byteenable -> Data_Memory_11_s1_translator:uav_byteenable
	wire         data_memory_11_s1_agent_m0_read;                                                     // Data_Memory_11_s1_agent:m0_read -> Data_Memory_11_s1_translator:uav_read
	wire         data_memory_11_s1_agent_m0_readdatavalid;                                            // Data_Memory_11_s1_translator:uav_readdatavalid -> Data_Memory_11_s1_agent:m0_readdatavalid
	wire         data_memory_11_s1_agent_m0_lock;                                                     // Data_Memory_11_s1_agent:m0_lock -> Data_Memory_11_s1_translator:uav_lock
	wire  [31:0] data_memory_11_s1_agent_m0_writedata;                                                // Data_Memory_11_s1_agent:m0_writedata -> Data_Memory_11_s1_translator:uav_writedata
	wire         data_memory_11_s1_agent_m0_write;                                                    // Data_Memory_11_s1_agent:m0_write -> Data_Memory_11_s1_translator:uav_write
	wire   [2:0] data_memory_11_s1_agent_m0_burstcount;                                               // Data_Memory_11_s1_agent:m0_burstcount -> Data_Memory_11_s1_translator:uav_burstcount
	wire         data_memory_11_s1_agent_rf_source_valid;                                             // Data_Memory_11_s1_agent:rf_source_valid -> Data_Memory_11_s1_agent_rsp_fifo:in_valid
	wire  [90:0] data_memory_11_s1_agent_rf_source_data;                                              // Data_Memory_11_s1_agent:rf_source_data -> Data_Memory_11_s1_agent_rsp_fifo:in_data
	wire         data_memory_11_s1_agent_rf_source_ready;                                             // Data_Memory_11_s1_agent_rsp_fifo:in_ready -> Data_Memory_11_s1_agent:rf_source_ready
	wire         data_memory_11_s1_agent_rf_source_startofpacket;                                     // Data_Memory_11_s1_agent:rf_source_startofpacket -> Data_Memory_11_s1_agent_rsp_fifo:in_startofpacket
	wire         data_memory_11_s1_agent_rf_source_endofpacket;                                       // Data_Memory_11_s1_agent:rf_source_endofpacket -> Data_Memory_11_s1_agent_rsp_fifo:in_endofpacket
	wire         data_memory_11_s1_agent_rsp_fifo_out_valid;                                          // Data_Memory_11_s1_agent_rsp_fifo:out_valid -> Data_Memory_11_s1_agent:rf_sink_valid
	wire  [90:0] data_memory_11_s1_agent_rsp_fifo_out_data;                                           // Data_Memory_11_s1_agent_rsp_fifo:out_data -> Data_Memory_11_s1_agent:rf_sink_data
	wire         data_memory_11_s1_agent_rsp_fifo_out_ready;                                          // Data_Memory_11_s1_agent:rf_sink_ready -> Data_Memory_11_s1_agent_rsp_fifo:out_ready
	wire         data_memory_11_s1_agent_rsp_fifo_out_startofpacket;                                  // Data_Memory_11_s1_agent_rsp_fifo:out_startofpacket -> Data_Memory_11_s1_agent:rf_sink_startofpacket
	wire         data_memory_11_s1_agent_rsp_fifo_out_endofpacket;                                    // Data_Memory_11_s1_agent_rsp_fifo:out_endofpacket -> Data_Memory_11_s1_agent:rf_sink_endofpacket
	wire         cmd_mux_004_src_valid;                                                               // cmd_mux_004:src_valid -> Data_Memory_11_s1_agent:cp_valid
	wire  [89:0] cmd_mux_004_src_data;                                                                // cmd_mux_004:src_data -> Data_Memory_11_s1_agent:cp_data
	wire         cmd_mux_004_src_ready;                                                               // Data_Memory_11_s1_agent:cp_ready -> cmd_mux_004:src_ready
	wire   [5:0] cmd_mux_004_src_channel;                                                             // cmd_mux_004:src_channel -> Data_Memory_11_s1_agent:cp_channel
	wire         cmd_mux_004_src_startofpacket;                                                       // cmd_mux_004:src_startofpacket -> Data_Memory_11_s1_agent:cp_startofpacket
	wire         cmd_mux_004_src_endofpacket;                                                         // cmd_mux_004:src_endofpacket -> Data_Memory_11_s1_agent:cp_endofpacket
	wire  [31:0] instruction_memory_11_s1_agent_m0_readdata;                                          // Instruction_Memory_11_s1_translator:uav_readdata -> Instruction_Memory_11_s1_agent:m0_readdata
	wire         instruction_memory_11_s1_agent_m0_waitrequest;                                       // Instruction_Memory_11_s1_translator:uav_waitrequest -> Instruction_Memory_11_s1_agent:m0_waitrequest
	wire         instruction_memory_11_s1_agent_m0_debugaccess;                                       // Instruction_Memory_11_s1_agent:m0_debugaccess -> Instruction_Memory_11_s1_translator:uav_debugaccess
	wire  [13:0] instruction_memory_11_s1_agent_m0_address;                                           // Instruction_Memory_11_s1_agent:m0_address -> Instruction_Memory_11_s1_translator:uav_address
	wire   [3:0] instruction_memory_11_s1_agent_m0_byteenable;                                        // Instruction_Memory_11_s1_agent:m0_byteenable -> Instruction_Memory_11_s1_translator:uav_byteenable
	wire         instruction_memory_11_s1_agent_m0_read;                                              // Instruction_Memory_11_s1_agent:m0_read -> Instruction_Memory_11_s1_translator:uav_read
	wire         instruction_memory_11_s1_agent_m0_readdatavalid;                                     // Instruction_Memory_11_s1_translator:uav_readdatavalid -> Instruction_Memory_11_s1_agent:m0_readdatavalid
	wire         instruction_memory_11_s1_agent_m0_lock;                                              // Instruction_Memory_11_s1_agent:m0_lock -> Instruction_Memory_11_s1_translator:uav_lock
	wire  [31:0] instruction_memory_11_s1_agent_m0_writedata;                                         // Instruction_Memory_11_s1_agent:m0_writedata -> Instruction_Memory_11_s1_translator:uav_writedata
	wire         instruction_memory_11_s1_agent_m0_write;                                             // Instruction_Memory_11_s1_agent:m0_write -> Instruction_Memory_11_s1_translator:uav_write
	wire   [2:0] instruction_memory_11_s1_agent_m0_burstcount;                                        // Instruction_Memory_11_s1_agent:m0_burstcount -> Instruction_Memory_11_s1_translator:uav_burstcount
	wire         instruction_memory_11_s1_agent_rf_source_valid;                                      // Instruction_Memory_11_s1_agent:rf_source_valid -> Instruction_Memory_11_s1_agent_rsp_fifo:in_valid
	wire  [90:0] instruction_memory_11_s1_agent_rf_source_data;                                       // Instruction_Memory_11_s1_agent:rf_source_data -> Instruction_Memory_11_s1_agent_rsp_fifo:in_data
	wire         instruction_memory_11_s1_agent_rf_source_ready;                                      // Instruction_Memory_11_s1_agent_rsp_fifo:in_ready -> Instruction_Memory_11_s1_agent:rf_source_ready
	wire         instruction_memory_11_s1_agent_rf_source_startofpacket;                              // Instruction_Memory_11_s1_agent:rf_source_startofpacket -> Instruction_Memory_11_s1_agent_rsp_fifo:in_startofpacket
	wire         instruction_memory_11_s1_agent_rf_source_endofpacket;                                // Instruction_Memory_11_s1_agent:rf_source_endofpacket -> Instruction_Memory_11_s1_agent_rsp_fifo:in_endofpacket
	wire         instruction_memory_11_s1_agent_rsp_fifo_out_valid;                                   // Instruction_Memory_11_s1_agent_rsp_fifo:out_valid -> Instruction_Memory_11_s1_agent:rf_sink_valid
	wire  [90:0] instruction_memory_11_s1_agent_rsp_fifo_out_data;                                    // Instruction_Memory_11_s1_agent_rsp_fifo:out_data -> Instruction_Memory_11_s1_agent:rf_sink_data
	wire         instruction_memory_11_s1_agent_rsp_fifo_out_ready;                                   // Instruction_Memory_11_s1_agent:rf_sink_ready -> Instruction_Memory_11_s1_agent_rsp_fifo:out_ready
	wire         instruction_memory_11_s1_agent_rsp_fifo_out_startofpacket;                           // Instruction_Memory_11_s1_agent_rsp_fifo:out_startofpacket -> Instruction_Memory_11_s1_agent:rf_sink_startofpacket
	wire         instruction_memory_11_s1_agent_rsp_fifo_out_endofpacket;                             // Instruction_Memory_11_s1_agent_rsp_fifo:out_endofpacket -> Instruction_Memory_11_s1_agent:rf_sink_endofpacket
	wire         cmd_mux_005_src_valid;                                                               // cmd_mux_005:src_valid -> Instruction_Memory_11_s1_agent:cp_valid
	wire  [89:0] cmd_mux_005_src_data;                                                                // cmd_mux_005:src_data -> Instruction_Memory_11_s1_agent:cp_data
	wire         cmd_mux_005_src_ready;                                                               // Instruction_Memory_11_s1_agent:cp_ready -> cmd_mux_005:src_ready
	wire   [5:0] cmd_mux_005_src_channel;                                                             // cmd_mux_005:src_channel -> Instruction_Memory_11_s1_agent:cp_channel
	wire         cmd_mux_005_src_startofpacket;                                                       // cmd_mux_005:src_startofpacket -> Instruction_Memory_11_s1_agent:cp_startofpacket
	wire         cmd_mux_005_src_endofpacket;                                                         // cmd_mux_005:src_endofpacket -> Instruction_Memory_11_s1_agent:cp_endofpacket
	wire         nios2_gen2_11_data_master_agent_cp_valid;                                            // nios2_gen2_11_data_master_agent:cp_valid -> router:sink_valid
	wire  [89:0] nios2_gen2_11_data_master_agent_cp_data;                                             // nios2_gen2_11_data_master_agent:cp_data -> router:sink_data
	wire         nios2_gen2_11_data_master_agent_cp_ready;                                            // router:sink_ready -> nios2_gen2_11_data_master_agent:cp_ready
	wire         nios2_gen2_11_data_master_agent_cp_startofpacket;                                    // nios2_gen2_11_data_master_agent:cp_startofpacket -> router:sink_startofpacket
	wire         nios2_gen2_11_data_master_agent_cp_endofpacket;                                      // nios2_gen2_11_data_master_agent:cp_endofpacket -> router:sink_endofpacket
	wire         router_src_valid;                                                                    // router:src_valid -> cmd_demux:sink_valid
	wire  [89:0] router_src_data;                                                                     // router:src_data -> cmd_demux:sink_data
	wire         router_src_ready;                                                                    // cmd_demux:sink_ready -> router:src_ready
	wire   [5:0] router_src_channel;                                                                  // router:src_channel -> cmd_demux:sink_channel
	wire         router_src_startofpacket;                                                            // router:src_startofpacket -> cmd_demux:sink_startofpacket
	wire         router_src_endofpacket;                                                              // router:src_endofpacket -> cmd_demux:sink_endofpacket
	wire         nios2_gen2_11_instruction_master_agent_cp_valid;                                     // nios2_gen2_11_instruction_master_agent:cp_valid -> router_001:sink_valid
	wire  [89:0] nios2_gen2_11_instruction_master_agent_cp_data;                                      // nios2_gen2_11_instruction_master_agent:cp_data -> router_001:sink_data
	wire         nios2_gen2_11_instruction_master_agent_cp_ready;                                     // router_001:sink_ready -> nios2_gen2_11_instruction_master_agent:cp_ready
	wire         nios2_gen2_11_instruction_master_agent_cp_startofpacket;                             // nios2_gen2_11_instruction_master_agent:cp_startofpacket -> router_001:sink_startofpacket
	wire         nios2_gen2_11_instruction_master_agent_cp_endofpacket;                               // nios2_gen2_11_instruction_master_agent:cp_endofpacket -> router_001:sink_endofpacket
	wire         router_001_src_valid;                                                                // router_001:src_valid -> cmd_demux_001:sink_valid
	wire  [89:0] router_001_src_data;                                                                 // router_001:src_data -> cmd_demux_001:sink_data
	wire         router_001_src_ready;                                                                // cmd_demux_001:sink_ready -> router_001:src_ready
	wire   [5:0] router_001_src_channel;                                                              // router_001:src_channel -> cmd_demux_001:sink_channel
	wire         router_001_src_startofpacket;                                                        // router_001:src_startofpacket -> cmd_demux_001:sink_startofpacket
	wire         router_001_src_endofpacket;                                                          // router_001:src_endofpacket -> cmd_demux_001:sink_endofpacket
	wire         adaptor_2x2_0_input_11_agent_rp_valid;                                               // adaptor_2x2_0_Input_11_agent:rp_valid -> router_002:sink_valid
	wire  [62:0] adaptor_2x2_0_input_11_agent_rp_data;                                                // adaptor_2x2_0_Input_11_agent:rp_data -> router_002:sink_data
	wire         adaptor_2x2_0_input_11_agent_rp_ready;                                               // router_002:sink_ready -> adaptor_2x2_0_Input_11_agent:rp_ready
	wire         adaptor_2x2_0_input_11_agent_rp_startofpacket;                                       // adaptor_2x2_0_Input_11_agent:rp_startofpacket -> router_002:sink_startofpacket
	wire         adaptor_2x2_0_input_11_agent_rp_endofpacket;                                         // adaptor_2x2_0_Input_11_agent:rp_endofpacket -> router_002:sink_endofpacket
	wire         adaptor_2x2_0_output_11_agent_rp_valid;                                              // adaptor_2x2_0_Output_11_agent:rp_valid -> router_003:sink_valid
	wire  [62:0] adaptor_2x2_0_output_11_agent_rp_data;                                               // adaptor_2x2_0_Output_11_agent:rp_data -> router_003:sink_data
	wire         adaptor_2x2_0_output_11_agent_rp_ready;                                              // router_003:sink_ready -> adaptor_2x2_0_Output_11_agent:rp_ready
	wire         adaptor_2x2_0_output_11_agent_rp_startofpacket;                                      // adaptor_2x2_0_Output_11_agent:rp_startofpacket -> router_003:sink_startofpacket
	wire         adaptor_2x2_0_output_11_agent_rp_endofpacket;                                        // adaptor_2x2_0_Output_11_agent:rp_endofpacket -> router_003:sink_endofpacket
	wire         jtag_uart_11_avalon_jtag_slave_agent_rp_valid;                                       // jtag_uart_11_avalon_jtag_slave_agent:rp_valid -> router_004:sink_valid
	wire  [89:0] jtag_uart_11_avalon_jtag_slave_agent_rp_data;                                        // jtag_uart_11_avalon_jtag_slave_agent:rp_data -> router_004:sink_data
	wire         jtag_uart_11_avalon_jtag_slave_agent_rp_ready;                                       // router_004:sink_ready -> jtag_uart_11_avalon_jtag_slave_agent:rp_ready
	wire         jtag_uart_11_avalon_jtag_slave_agent_rp_startofpacket;                               // jtag_uart_11_avalon_jtag_slave_agent:rp_startofpacket -> router_004:sink_startofpacket
	wire         jtag_uart_11_avalon_jtag_slave_agent_rp_endofpacket;                                 // jtag_uart_11_avalon_jtag_slave_agent:rp_endofpacket -> router_004:sink_endofpacket
	wire         router_004_src_valid;                                                                // router_004:src_valid -> rsp_demux_002:sink_valid
	wire  [89:0] router_004_src_data;                                                                 // router_004:src_data -> rsp_demux_002:sink_data
	wire         router_004_src_ready;                                                                // rsp_demux_002:sink_ready -> router_004:src_ready
	wire   [5:0] router_004_src_channel;                                                              // router_004:src_channel -> rsp_demux_002:sink_channel
	wire         router_004_src_startofpacket;                                                        // router_004:src_startofpacket -> rsp_demux_002:sink_startofpacket
	wire         router_004_src_endofpacket;                                                          // router_004:src_endofpacket -> rsp_demux_002:sink_endofpacket
	wire         nios2_gen2_11_debug_mem_slave_agent_rp_valid;                                        // nios2_gen2_11_debug_mem_slave_agent:rp_valid -> router_005:sink_valid
	wire  [89:0] nios2_gen2_11_debug_mem_slave_agent_rp_data;                                         // nios2_gen2_11_debug_mem_slave_agent:rp_data -> router_005:sink_data
	wire         nios2_gen2_11_debug_mem_slave_agent_rp_ready;                                        // router_005:sink_ready -> nios2_gen2_11_debug_mem_slave_agent:rp_ready
	wire         nios2_gen2_11_debug_mem_slave_agent_rp_startofpacket;                                // nios2_gen2_11_debug_mem_slave_agent:rp_startofpacket -> router_005:sink_startofpacket
	wire         nios2_gen2_11_debug_mem_slave_agent_rp_endofpacket;                                  // nios2_gen2_11_debug_mem_slave_agent:rp_endofpacket -> router_005:sink_endofpacket
	wire         router_005_src_valid;                                                                // router_005:src_valid -> rsp_demux_003:sink_valid
	wire  [89:0] router_005_src_data;                                                                 // router_005:src_data -> rsp_demux_003:sink_data
	wire         router_005_src_ready;                                                                // rsp_demux_003:sink_ready -> router_005:src_ready
	wire   [5:0] router_005_src_channel;                                                              // router_005:src_channel -> rsp_demux_003:sink_channel
	wire         router_005_src_startofpacket;                                                        // router_005:src_startofpacket -> rsp_demux_003:sink_startofpacket
	wire         router_005_src_endofpacket;                                                          // router_005:src_endofpacket -> rsp_demux_003:sink_endofpacket
	wire         data_memory_11_s1_agent_rp_valid;                                                    // Data_Memory_11_s1_agent:rp_valid -> router_006:sink_valid
	wire  [89:0] data_memory_11_s1_agent_rp_data;                                                     // Data_Memory_11_s1_agent:rp_data -> router_006:sink_data
	wire         data_memory_11_s1_agent_rp_ready;                                                    // router_006:sink_ready -> Data_Memory_11_s1_agent:rp_ready
	wire         data_memory_11_s1_agent_rp_startofpacket;                                            // Data_Memory_11_s1_agent:rp_startofpacket -> router_006:sink_startofpacket
	wire         data_memory_11_s1_agent_rp_endofpacket;                                              // Data_Memory_11_s1_agent:rp_endofpacket -> router_006:sink_endofpacket
	wire         router_006_src_valid;                                                                // router_006:src_valid -> rsp_demux_004:sink_valid
	wire  [89:0] router_006_src_data;                                                                 // router_006:src_data -> rsp_demux_004:sink_data
	wire         router_006_src_ready;                                                                // rsp_demux_004:sink_ready -> router_006:src_ready
	wire   [5:0] router_006_src_channel;                                                              // router_006:src_channel -> rsp_demux_004:sink_channel
	wire         router_006_src_startofpacket;                                                        // router_006:src_startofpacket -> rsp_demux_004:sink_startofpacket
	wire         router_006_src_endofpacket;                                                          // router_006:src_endofpacket -> rsp_demux_004:sink_endofpacket
	wire         instruction_memory_11_s1_agent_rp_valid;                                             // Instruction_Memory_11_s1_agent:rp_valid -> router_007:sink_valid
	wire  [89:0] instruction_memory_11_s1_agent_rp_data;                                              // Instruction_Memory_11_s1_agent:rp_data -> router_007:sink_data
	wire         instruction_memory_11_s1_agent_rp_ready;                                             // router_007:sink_ready -> Instruction_Memory_11_s1_agent:rp_ready
	wire         instruction_memory_11_s1_agent_rp_startofpacket;                                     // Instruction_Memory_11_s1_agent:rp_startofpacket -> router_007:sink_startofpacket
	wire         instruction_memory_11_s1_agent_rp_endofpacket;                                       // Instruction_Memory_11_s1_agent:rp_endofpacket -> router_007:sink_endofpacket
	wire         router_007_src_valid;                                                                // router_007:src_valid -> rsp_demux_005:sink_valid
	wire  [89:0] router_007_src_data;                                                                 // router_007:src_data -> rsp_demux_005:sink_data
	wire         router_007_src_ready;                                                                // rsp_demux_005:sink_ready -> router_007:src_ready
	wire   [5:0] router_007_src_channel;                                                              // router_007:src_channel -> rsp_demux_005:sink_channel
	wire         router_007_src_startofpacket;                                                        // router_007:src_startofpacket -> rsp_demux_005:sink_startofpacket
	wire         router_007_src_endofpacket;                                                          // router_007:src_endofpacket -> rsp_demux_005:sink_endofpacket
	wire         adaptor_2x2_0_input_11_burst_adapter_source0_valid;                                  // adaptor_2x2_0_Input_11_burst_adapter:source0_valid -> adaptor_2x2_0_Input_11_agent:cp_valid
	wire  [62:0] adaptor_2x2_0_input_11_burst_adapter_source0_data;                                   // adaptor_2x2_0_Input_11_burst_adapter:source0_data -> adaptor_2x2_0_Input_11_agent:cp_data
	wire         adaptor_2x2_0_input_11_burst_adapter_source0_ready;                                  // adaptor_2x2_0_Input_11_agent:cp_ready -> adaptor_2x2_0_Input_11_burst_adapter:source0_ready
	wire   [5:0] adaptor_2x2_0_input_11_burst_adapter_source0_channel;                                // adaptor_2x2_0_Input_11_burst_adapter:source0_channel -> adaptor_2x2_0_Input_11_agent:cp_channel
	wire         adaptor_2x2_0_input_11_burst_adapter_source0_startofpacket;                          // adaptor_2x2_0_Input_11_burst_adapter:source0_startofpacket -> adaptor_2x2_0_Input_11_agent:cp_startofpacket
	wire         adaptor_2x2_0_input_11_burst_adapter_source0_endofpacket;                            // adaptor_2x2_0_Input_11_burst_adapter:source0_endofpacket -> adaptor_2x2_0_Input_11_agent:cp_endofpacket
	wire         adaptor_2x2_0_output_11_burst_adapter_source0_valid;                                 // adaptor_2x2_0_Output_11_burst_adapter:source0_valid -> adaptor_2x2_0_Output_11_agent:cp_valid
	wire  [62:0] adaptor_2x2_0_output_11_burst_adapter_source0_data;                                  // adaptor_2x2_0_Output_11_burst_adapter:source0_data -> adaptor_2x2_0_Output_11_agent:cp_data
	wire         adaptor_2x2_0_output_11_burst_adapter_source0_ready;                                 // adaptor_2x2_0_Output_11_agent:cp_ready -> adaptor_2x2_0_Output_11_burst_adapter:source0_ready
	wire   [5:0] adaptor_2x2_0_output_11_burst_adapter_source0_channel;                               // adaptor_2x2_0_Output_11_burst_adapter:source0_channel -> adaptor_2x2_0_Output_11_agent:cp_channel
	wire         adaptor_2x2_0_output_11_burst_adapter_source0_startofpacket;                         // adaptor_2x2_0_Output_11_burst_adapter:source0_startofpacket -> adaptor_2x2_0_Output_11_agent:cp_startofpacket
	wire         adaptor_2x2_0_output_11_burst_adapter_source0_endofpacket;                           // adaptor_2x2_0_Output_11_burst_adapter:source0_endofpacket -> adaptor_2x2_0_Output_11_agent:cp_endofpacket
	wire         cmd_demux_src0_valid;                                                                // cmd_demux:src0_valid -> cmd_mux:sink0_valid
	wire  [89:0] cmd_demux_src0_data;                                                                 // cmd_demux:src0_data -> cmd_mux:sink0_data
	wire         cmd_demux_src0_ready;                                                                // cmd_mux:sink0_ready -> cmd_demux:src0_ready
	wire   [5:0] cmd_demux_src0_channel;                                                              // cmd_demux:src0_channel -> cmd_mux:sink0_channel
	wire         cmd_demux_src0_startofpacket;                                                        // cmd_demux:src0_startofpacket -> cmd_mux:sink0_startofpacket
	wire         cmd_demux_src0_endofpacket;                                                          // cmd_demux:src0_endofpacket -> cmd_mux:sink0_endofpacket
	wire         cmd_demux_src1_valid;                                                                // cmd_demux:src1_valid -> cmd_mux_001:sink0_valid
	wire  [89:0] cmd_demux_src1_data;                                                                 // cmd_demux:src1_data -> cmd_mux_001:sink0_data
	wire         cmd_demux_src1_ready;                                                                // cmd_mux_001:sink0_ready -> cmd_demux:src1_ready
	wire   [5:0] cmd_demux_src1_channel;                                                              // cmd_demux:src1_channel -> cmd_mux_001:sink0_channel
	wire         cmd_demux_src1_startofpacket;                                                        // cmd_demux:src1_startofpacket -> cmd_mux_001:sink0_startofpacket
	wire         cmd_demux_src1_endofpacket;                                                          // cmd_demux:src1_endofpacket -> cmd_mux_001:sink0_endofpacket
	wire         cmd_demux_src2_valid;                                                                // cmd_demux:src2_valid -> cmd_mux_002:sink0_valid
	wire  [89:0] cmd_demux_src2_data;                                                                 // cmd_demux:src2_data -> cmd_mux_002:sink0_data
	wire         cmd_demux_src2_ready;                                                                // cmd_mux_002:sink0_ready -> cmd_demux:src2_ready
	wire   [5:0] cmd_demux_src2_channel;                                                              // cmd_demux:src2_channel -> cmd_mux_002:sink0_channel
	wire         cmd_demux_src2_startofpacket;                                                        // cmd_demux:src2_startofpacket -> cmd_mux_002:sink0_startofpacket
	wire         cmd_demux_src2_endofpacket;                                                          // cmd_demux:src2_endofpacket -> cmd_mux_002:sink0_endofpacket
	wire         cmd_demux_src3_valid;                                                                // cmd_demux:src3_valid -> cmd_mux_003:sink0_valid
	wire  [89:0] cmd_demux_src3_data;                                                                 // cmd_demux:src3_data -> cmd_mux_003:sink0_data
	wire         cmd_demux_src3_ready;                                                                // cmd_mux_003:sink0_ready -> cmd_demux:src3_ready
	wire   [5:0] cmd_demux_src3_channel;                                                              // cmd_demux:src3_channel -> cmd_mux_003:sink0_channel
	wire         cmd_demux_src3_startofpacket;                                                        // cmd_demux:src3_startofpacket -> cmd_mux_003:sink0_startofpacket
	wire         cmd_demux_src3_endofpacket;                                                          // cmd_demux:src3_endofpacket -> cmd_mux_003:sink0_endofpacket
	wire         cmd_demux_src4_valid;                                                                // cmd_demux:src4_valid -> cmd_mux_004:sink0_valid
	wire  [89:0] cmd_demux_src4_data;                                                                 // cmd_demux:src4_data -> cmd_mux_004:sink0_data
	wire         cmd_demux_src4_ready;                                                                // cmd_mux_004:sink0_ready -> cmd_demux:src4_ready
	wire   [5:0] cmd_demux_src4_channel;                                                              // cmd_demux:src4_channel -> cmd_mux_004:sink0_channel
	wire         cmd_demux_src4_startofpacket;                                                        // cmd_demux:src4_startofpacket -> cmd_mux_004:sink0_startofpacket
	wire         cmd_demux_src4_endofpacket;                                                          // cmd_demux:src4_endofpacket -> cmd_mux_004:sink0_endofpacket
	wire         cmd_demux_001_src0_valid;                                                            // cmd_demux_001:src0_valid -> cmd_mux_003:sink1_valid
	wire  [89:0] cmd_demux_001_src0_data;                                                             // cmd_demux_001:src0_data -> cmd_mux_003:sink1_data
	wire         cmd_demux_001_src0_ready;                                                            // cmd_mux_003:sink1_ready -> cmd_demux_001:src0_ready
	wire   [5:0] cmd_demux_001_src0_channel;                                                          // cmd_demux_001:src0_channel -> cmd_mux_003:sink1_channel
	wire         cmd_demux_001_src0_startofpacket;                                                    // cmd_demux_001:src0_startofpacket -> cmd_mux_003:sink1_startofpacket
	wire         cmd_demux_001_src0_endofpacket;                                                      // cmd_demux_001:src0_endofpacket -> cmd_mux_003:sink1_endofpacket
	wire         cmd_demux_001_src1_valid;                                                            // cmd_demux_001:src1_valid -> cmd_mux_005:sink0_valid
	wire  [89:0] cmd_demux_001_src1_data;                                                             // cmd_demux_001:src1_data -> cmd_mux_005:sink0_data
	wire         cmd_demux_001_src1_ready;                                                            // cmd_mux_005:sink0_ready -> cmd_demux_001:src1_ready
	wire   [5:0] cmd_demux_001_src1_channel;                                                          // cmd_demux_001:src1_channel -> cmd_mux_005:sink0_channel
	wire         cmd_demux_001_src1_startofpacket;                                                    // cmd_demux_001:src1_startofpacket -> cmd_mux_005:sink0_startofpacket
	wire         cmd_demux_001_src1_endofpacket;                                                      // cmd_demux_001:src1_endofpacket -> cmd_mux_005:sink0_endofpacket
	wire         rsp_demux_src0_valid;                                                                // rsp_demux:src0_valid -> rsp_mux:sink0_valid
	wire  [89:0] rsp_demux_src0_data;                                                                 // rsp_demux:src0_data -> rsp_mux:sink0_data
	wire         rsp_demux_src0_ready;                                                                // rsp_mux:sink0_ready -> rsp_demux:src0_ready
	wire   [5:0] rsp_demux_src0_channel;                                                              // rsp_demux:src0_channel -> rsp_mux:sink0_channel
	wire         rsp_demux_src0_startofpacket;                                                        // rsp_demux:src0_startofpacket -> rsp_mux:sink0_startofpacket
	wire         rsp_demux_src0_endofpacket;                                                          // rsp_demux:src0_endofpacket -> rsp_mux:sink0_endofpacket
	wire         rsp_demux_001_src0_valid;                                                            // rsp_demux_001:src0_valid -> rsp_mux:sink1_valid
	wire  [89:0] rsp_demux_001_src0_data;                                                             // rsp_demux_001:src0_data -> rsp_mux:sink1_data
	wire         rsp_demux_001_src0_ready;                                                            // rsp_mux:sink1_ready -> rsp_demux_001:src0_ready
	wire   [5:0] rsp_demux_001_src0_channel;                                                          // rsp_demux_001:src0_channel -> rsp_mux:sink1_channel
	wire         rsp_demux_001_src0_startofpacket;                                                    // rsp_demux_001:src0_startofpacket -> rsp_mux:sink1_startofpacket
	wire         rsp_demux_001_src0_endofpacket;                                                      // rsp_demux_001:src0_endofpacket -> rsp_mux:sink1_endofpacket
	wire         rsp_demux_002_src0_valid;                                                            // rsp_demux_002:src0_valid -> rsp_mux:sink2_valid
	wire  [89:0] rsp_demux_002_src0_data;                                                             // rsp_demux_002:src0_data -> rsp_mux:sink2_data
	wire         rsp_demux_002_src0_ready;                                                            // rsp_mux:sink2_ready -> rsp_demux_002:src0_ready
	wire   [5:0] rsp_demux_002_src0_channel;                                                          // rsp_demux_002:src0_channel -> rsp_mux:sink2_channel
	wire         rsp_demux_002_src0_startofpacket;                                                    // rsp_demux_002:src0_startofpacket -> rsp_mux:sink2_startofpacket
	wire         rsp_demux_002_src0_endofpacket;                                                      // rsp_demux_002:src0_endofpacket -> rsp_mux:sink2_endofpacket
	wire         rsp_demux_003_src0_valid;                                                            // rsp_demux_003:src0_valid -> rsp_mux:sink3_valid
	wire  [89:0] rsp_demux_003_src0_data;                                                             // rsp_demux_003:src0_data -> rsp_mux:sink3_data
	wire         rsp_demux_003_src0_ready;                                                            // rsp_mux:sink3_ready -> rsp_demux_003:src0_ready
	wire   [5:0] rsp_demux_003_src0_channel;                                                          // rsp_demux_003:src0_channel -> rsp_mux:sink3_channel
	wire         rsp_demux_003_src0_startofpacket;                                                    // rsp_demux_003:src0_startofpacket -> rsp_mux:sink3_startofpacket
	wire         rsp_demux_003_src0_endofpacket;                                                      // rsp_demux_003:src0_endofpacket -> rsp_mux:sink3_endofpacket
	wire         rsp_demux_003_src1_valid;                                                            // rsp_demux_003:src1_valid -> rsp_mux_001:sink0_valid
	wire  [89:0] rsp_demux_003_src1_data;                                                             // rsp_demux_003:src1_data -> rsp_mux_001:sink0_data
	wire         rsp_demux_003_src1_ready;                                                            // rsp_mux_001:sink0_ready -> rsp_demux_003:src1_ready
	wire   [5:0] rsp_demux_003_src1_channel;                                                          // rsp_demux_003:src1_channel -> rsp_mux_001:sink0_channel
	wire         rsp_demux_003_src1_startofpacket;                                                    // rsp_demux_003:src1_startofpacket -> rsp_mux_001:sink0_startofpacket
	wire         rsp_demux_003_src1_endofpacket;                                                      // rsp_demux_003:src1_endofpacket -> rsp_mux_001:sink0_endofpacket
	wire         rsp_demux_004_src0_valid;                                                            // rsp_demux_004:src0_valid -> rsp_mux:sink4_valid
	wire  [89:0] rsp_demux_004_src0_data;                                                             // rsp_demux_004:src0_data -> rsp_mux:sink4_data
	wire         rsp_demux_004_src0_ready;                                                            // rsp_mux:sink4_ready -> rsp_demux_004:src0_ready
	wire   [5:0] rsp_demux_004_src0_channel;                                                          // rsp_demux_004:src0_channel -> rsp_mux:sink4_channel
	wire         rsp_demux_004_src0_startofpacket;                                                    // rsp_demux_004:src0_startofpacket -> rsp_mux:sink4_startofpacket
	wire         rsp_demux_004_src0_endofpacket;                                                      // rsp_demux_004:src0_endofpacket -> rsp_mux:sink4_endofpacket
	wire         rsp_demux_005_src0_valid;                                                            // rsp_demux_005:src0_valid -> rsp_mux_001:sink1_valid
	wire  [89:0] rsp_demux_005_src0_data;                                                             // rsp_demux_005:src0_data -> rsp_mux_001:sink1_data
	wire         rsp_demux_005_src0_ready;                                                            // rsp_mux_001:sink1_ready -> rsp_demux_005:src0_ready
	wire   [5:0] rsp_demux_005_src0_channel;                                                          // rsp_demux_005:src0_channel -> rsp_mux_001:sink1_channel
	wire         rsp_demux_005_src0_startofpacket;                                                    // rsp_demux_005:src0_startofpacket -> rsp_mux_001:sink1_startofpacket
	wire         rsp_demux_005_src0_endofpacket;                                                      // rsp_demux_005:src0_endofpacket -> rsp_mux_001:sink1_endofpacket
	wire         router_002_src_valid;                                                                // router_002:src_valid -> adaptor_2x2_0_Input_11_rsp_width_adapter:in_valid
	wire  [62:0] router_002_src_data;                                                                 // router_002:src_data -> adaptor_2x2_0_Input_11_rsp_width_adapter:in_data
	wire         router_002_src_ready;                                                                // adaptor_2x2_0_Input_11_rsp_width_adapter:in_ready -> router_002:src_ready
	wire   [5:0] router_002_src_channel;                                                              // router_002:src_channel -> adaptor_2x2_0_Input_11_rsp_width_adapter:in_channel
	wire         router_002_src_startofpacket;                                                        // router_002:src_startofpacket -> adaptor_2x2_0_Input_11_rsp_width_adapter:in_startofpacket
	wire         router_002_src_endofpacket;                                                          // router_002:src_endofpacket -> adaptor_2x2_0_Input_11_rsp_width_adapter:in_endofpacket
	wire         adaptor_2x2_0_input_11_rsp_width_adapter_src_valid;                                  // adaptor_2x2_0_Input_11_rsp_width_adapter:out_valid -> rsp_demux:sink_valid
	wire  [89:0] adaptor_2x2_0_input_11_rsp_width_adapter_src_data;                                   // adaptor_2x2_0_Input_11_rsp_width_adapter:out_data -> rsp_demux:sink_data
	wire         adaptor_2x2_0_input_11_rsp_width_adapter_src_ready;                                  // rsp_demux:sink_ready -> adaptor_2x2_0_Input_11_rsp_width_adapter:out_ready
	wire   [5:0] adaptor_2x2_0_input_11_rsp_width_adapter_src_channel;                                // adaptor_2x2_0_Input_11_rsp_width_adapter:out_channel -> rsp_demux:sink_channel
	wire         adaptor_2x2_0_input_11_rsp_width_adapter_src_startofpacket;                          // adaptor_2x2_0_Input_11_rsp_width_adapter:out_startofpacket -> rsp_demux:sink_startofpacket
	wire         adaptor_2x2_0_input_11_rsp_width_adapter_src_endofpacket;                            // adaptor_2x2_0_Input_11_rsp_width_adapter:out_endofpacket -> rsp_demux:sink_endofpacket
	wire         router_003_src_valid;                                                                // router_003:src_valid -> adaptor_2x2_0_Output_11_rsp_width_adapter:in_valid
	wire  [62:0] router_003_src_data;                                                                 // router_003:src_data -> adaptor_2x2_0_Output_11_rsp_width_adapter:in_data
	wire         router_003_src_ready;                                                                // adaptor_2x2_0_Output_11_rsp_width_adapter:in_ready -> router_003:src_ready
	wire   [5:0] router_003_src_channel;                                                              // router_003:src_channel -> adaptor_2x2_0_Output_11_rsp_width_adapter:in_channel
	wire         router_003_src_startofpacket;                                                        // router_003:src_startofpacket -> adaptor_2x2_0_Output_11_rsp_width_adapter:in_startofpacket
	wire         router_003_src_endofpacket;                                                          // router_003:src_endofpacket -> adaptor_2x2_0_Output_11_rsp_width_adapter:in_endofpacket
	wire         adaptor_2x2_0_output_11_rsp_width_adapter_src_valid;                                 // adaptor_2x2_0_Output_11_rsp_width_adapter:out_valid -> rsp_demux_001:sink_valid
	wire  [89:0] adaptor_2x2_0_output_11_rsp_width_adapter_src_data;                                  // adaptor_2x2_0_Output_11_rsp_width_adapter:out_data -> rsp_demux_001:sink_data
	wire         adaptor_2x2_0_output_11_rsp_width_adapter_src_ready;                                 // rsp_demux_001:sink_ready -> adaptor_2x2_0_Output_11_rsp_width_adapter:out_ready
	wire   [5:0] adaptor_2x2_0_output_11_rsp_width_adapter_src_channel;                               // adaptor_2x2_0_Output_11_rsp_width_adapter:out_channel -> rsp_demux_001:sink_channel
	wire         adaptor_2x2_0_output_11_rsp_width_adapter_src_startofpacket;                         // adaptor_2x2_0_Output_11_rsp_width_adapter:out_startofpacket -> rsp_demux_001:sink_startofpacket
	wire         adaptor_2x2_0_output_11_rsp_width_adapter_src_endofpacket;                           // adaptor_2x2_0_Output_11_rsp_width_adapter:out_endofpacket -> rsp_demux_001:sink_endofpacket
	wire         cmd_mux_src_valid;                                                                   // cmd_mux:src_valid -> adaptor_2x2_0_Input_11_cmd_width_adapter:in_valid
	wire  [89:0] cmd_mux_src_data;                                                                    // cmd_mux:src_data -> adaptor_2x2_0_Input_11_cmd_width_adapter:in_data
	wire         cmd_mux_src_ready;                                                                   // adaptor_2x2_0_Input_11_cmd_width_adapter:in_ready -> cmd_mux:src_ready
	wire   [5:0] cmd_mux_src_channel;                                                                 // cmd_mux:src_channel -> adaptor_2x2_0_Input_11_cmd_width_adapter:in_channel
	wire         cmd_mux_src_startofpacket;                                                           // cmd_mux:src_startofpacket -> adaptor_2x2_0_Input_11_cmd_width_adapter:in_startofpacket
	wire         cmd_mux_src_endofpacket;                                                             // cmd_mux:src_endofpacket -> adaptor_2x2_0_Input_11_cmd_width_adapter:in_endofpacket
	wire         adaptor_2x2_0_input_11_cmd_width_adapter_src_valid;                                  // adaptor_2x2_0_Input_11_cmd_width_adapter:out_valid -> adaptor_2x2_0_Input_11_burst_adapter:sink0_valid
	wire  [62:0] adaptor_2x2_0_input_11_cmd_width_adapter_src_data;                                   // adaptor_2x2_0_Input_11_cmd_width_adapter:out_data -> adaptor_2x2_0_Input_11_burst_adapter:sink0_data
	wire         adaptor_2x2_0_input_11_cmd_width_adapter_src_ready;                                  // adaptor_2x2_0_Input_11_burst_adapter:sink0_ready -> adaptor_2x2_0_Input_11_cmd_width_adapter:out_ready
	wire   [5:0] adaptor_2x2_0_input_11_cmd_width_adapter_src_channel;                                // adaptor_2x2_0_Input_11_cmd_width_adapter:out_channel -> adaptor_2x2_0_Input_11_burst_adapter:sink0_channel
	wire         adaptor_2x2_0_input_11_cmd_width_adapter_src_startofpacket;                          // adaptor_2x2_0_Input_11_cmd_width_adapter:out_startofpacket -> adaptor_2x2_0_Input_11_burst_adapter:sink0_startofpacket
	wire         adaptor_2x2_0_input_11_cmd_width_adapter_src_endofpacket;                            // adaptor_2x2_0_Input_11_cmd_width_adapter:out_endofpacket -> adaptor_2x2_0_Input_11_burst_adapter:sink0_endofpacket
	wire         cmd_mux_001_src_valid;                                                               // cmd_mux_001:src_valid -> adaptor_2x2_0_Output_11_cmd_width_adapter:in_valid
	wire  [89:0] cmd_mux_001_src_data;                                                                // cmd_mux_001:src_data -> adaptor_2x2_0_Output_11_cmd_width_adapter:in_data
	wire         cmd_mux_001_src_ready;                                                               // adaptor_2x2_0_Output_11_cmd_width_adapter:in_ready -> cmd_mux_001:src_ready
	wire   [5:0] cmd_mux_001_src_channel;                                                             // cmd_mux_001:src_channel -> adaptor_2x2_0_Output_11_cmd_width_adapter:in_channel
	wire         cmd_mux_001_src_startofpacket;                                                       // cmd_mux_001:src_startofpacket -> adaptor_2x2_0_Output_11_cmd_width_adapter:in_startofpacket
	wire         cmd_mux_001_src_endofpacket;                                                         // cmd_mux_001:src_endofpacket -> adaptor_2x2_0_Output_11_cmd_width_adapter:in_endofpacket
	wire         adaptor_2x2_0_output_11_cmd_width_adapter_src_valid;                                 // adaptor_2x2_0_Output_11_cmd_width_adapter:out_valid -> adaptor_2x2_0_Output_11_burst_adapter:sink0_valid
	wire  [62:0] adaptor_2x2_0_output_11_cmd_width_adapter_src_data;                                  // adaptor_2x2_0_Output_11_cmd_width_adapter:out_data -> adaptor_2x2_0_Output_11_burst_adapter:sink0_data
	wire         adaptor_2x2_0_output_11_cmd_width_adapter_src_ready;                                 // adaptor_2x2_0_Output_11_burst_adapter:sink0_ready -> adaptor_2x2_0_Output_11_cmd_width_adapter:out_ready
	wire   [5:0] adaptor_2x2_0_output_11_cmd_width_adapter_src_channel;                               // adaptor_2x2_0_Output_11_cmd_width_adapter:out_channel -> adaptor_2x2_0_Output_11_burst_adapter:sink0_channel
	wire         adaptor_2x2_0_output_11_cmd_width_adapter_src_startofpacket;                         // adaptor_2x2_0_Output_11_cmd_width_adapter:out_startofpacket -> adaptor_2x2_0_Output_11_burst_adapter:sink0_startofpacket
	wire         adaptor_2x2_0_output_11_cmd_width_adapter_src_endofpacket;                           // adaptor_2x2_0_Output_11_cmd_width_adapter:out_endofpacket -> adaptor_2x2_0_Output_11_burst_adapter:sink0_endofpacket
	wire         adaptor_2x2_0_input_11_agent_rdata_fifo_src_valid;                                   // adaptor_2x2_0_Input_11_agent:rdata_fifo_src_valid -> avalon_st_adapter:in_0_valid
	wire   [9:0] adaptor_2x2_0_input_11_agent_rdata_fifo_src_data;                                    // adaptor_2x2_0_Input_11_agent:rdata_fifo_src_data -> avalon_st_adapter:in_0_data
	wire         adaptor_2x2_0_input_11_agent_rdata_fifo_src_ready;                                   // avalon_st_adapter:in_0_ready -> adaptor_2x2_0_Input_11_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_out_0_valid;                                                       // avalon_st_adapter:out_0_valid -> adaptor_2x2_0_Input_11_agent:rdata_fifo_sink_valid
	wire   [9:0] avalon_st_adapter_out_0_data;                                                        // avalon_st_adapter:out_0_data -> adaptor_2x2_0_Input_11_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_out_0_ready;                                                       // adaptor_2x2_0_Input_11_agent:rdata_fifo_sink_ready -> avalon_st_adapter:out_0_ready
	wire   [0:0] avalon_st_adapter_out_0_error;                                                       // avalon_st_adapter:out_0_error -> adaptor_2x2_0_Input_11_agent:rdata_fifo_sink_error
	wire         adaptor_2x2_0_output_11_agent_rdata_fifo_src_valid;                                  // adaptor_2x2_0_Output_11_agent:rdata_fifo_src_valid -> avalon_st_adapter_001:in_0_valid
	wire   [9:0] adaptor_2x2_0_output_11_agent_rdata_fifo_src_data;                                   // adaptor_2x2_0_Output_11_agent:rdata_fifo_src_data -> avalon_st_adapter_001:in_0_data
	wire         adaptor_2x2_0_output_11_agent_rdata_fifo_src_ready;                                  // avalon_st_adapter_001:in_0_ready -> adaptor_2x2_0_Output_11_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_001_out_0_valid;                                                   // avalon_st_adapter_001:out_0_valid -> adaptor_2x2_0_Output_11_agent:rdata_fifo_sink_valid
	wire   [9:0] avalon_st_adapter_001_out_0_data;                                                    // avalon_st_adapter_001:out_0_data -> adaptor_2x2_0_Output_11_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_001_out_0_ready;                                                   // adaptor_2x2_0_Output_11_agent:rdata_fifo_sink_ready -> avalon_st_adapter_001:out_0_ready
	wire   [0:0] avalon_st_adapter_001_out_0_error;                                                   // avalon_st_adapter_001:out_0_error -> adaptor_2x2_0_Output_11_agent:rdata_fifo_sink_error
	wire         jtag_uart_11_avalon_jtag_slave_agent_rdata_fifo_src_valid;                           // jtag_uart_11_avalon_jtag_slave_agent:rdata_fifo_src_valid -> avalon_st_adapter_002:in_0_valid
	wire  [33:0] jtag_uart_11_avalon_jtag_slave_agent_rdata_fifo_src_data;                            // jtag_uart_11_avalon_jtag_slave_agent:rdata_fifo_src_data -> avalon_st_adapter_002:in_0_data
	wire         jtag_uart_11_avalon_jtag_slave_agent_rdata_fifo_src_ready;                           // avalon_st_adapter_002:in_0_ready -> jtag_uart_11_avalon_jtag_slave_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_002_out_0_valid;                                                   // avalon_st_adapter_002:out_0_valid -> jtag_uart_11_avalon_jtag_slave_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_002_out_0_data;                                                    // avalon_st_adapter_002:out_0_data -> jtag_uart_11_avalon_jtag_slave_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_002_out_0_ready;                                                   // jtag_uart_11_avalon_jtag_slave_agent:rdata_fifo_sink_ready -> avalon_st_adapter_002:out_0_ready
	wire   [0:0] avalon_st_adapter_002_out_0_error;                                                   // avalon_st_adapter_002:out_0_error -> jtag_uart_11_avalon_jtag_slave_agent:rdata_fifo_sink_error
	wire         nios2_gen2_11_debug_mem_slave_agent_rdata_fifo_src_valid;                            // nios2_gen2_11_debug_mem_slave_agent:rdata_fifo_src_valid -> avalon_st_adapter_003:in_0_valid
	wire  [33:0] nios2_gen2_11_debug_mem_slave_agent_rdata_fifo_src_data;                             // nios2_gen2_11_debug_mem_slave_agent:rdata_fifo_src_data -> avalon_st_adapter_003:in_0_data
	wire         nios2_gen2_11_debug_mem_slave_agent_rdata_fifo_src_ready;                            // avalon_st_adapter_003:in_0_ready -> nios2_gen2_11_debug_mem_slave_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_003_out_0_valid;                                                   // avalon_st_adapter_003:out_0_valid -> nios2_gen2_11_debug_mem_slave_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_003_out_0_data;                                                    // avalon_st_adapter_003:out_0_data -> nios2_gen2_11_debug_mem_slave_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_003_out_0_ready;                                                   // nios2_gen2_11_debug_mem_slave_agent:rdata_fifo_sink_ready -> avalon_st_adapter_003:out_0_ready
	wire   [0:0] avalon_st_adapter_003_out_0_error;                                                   // avalon_st_adapter_003:out_0_error -> nios2_gen2_11_debug_mem_slave_agent:rdata_fifo_sink_error
	wire         data_memory_11_s1_agent_rdata_fifo_src_valid;                                        // Data_Memory_11_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter_004:in_0_valid
	wire  [33:0] data_memory_11_s1_agent_rdata_fifo_src_data;                                         // Data_Memory_11_s1_agent:rdata_fifo_src_data -> avalon_st_adapter_004:in_0_data
	wire         data_memory_11_s1_agent_rdata_fifo_src_ready;                                        // avalon_st_adapter_004:in_0_ready -> Data_Memory_11_s1_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_004_out_0_valid;                                                   // avalon_st_adapter_004:out_0_valid -> Data_Memory_11_s1_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_004_out_0_data;                                                    // avalon_st_adapter_004:out_0_data -> Data_Memory_11_s1_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_004_out_0_ready;                                                   // Data_Memory_11_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_004:out_0_ready
	wire   [0:0] avalon_st_adapter_004_out_0_error;                                                   // avalon_st_adapter_004:out_0_error -> Data_Memory_11_s1_agent:rdata_fifo_sink_error
	wire         instruction_memory_11_s1_agent_rdata_fifo_src_valid;                                 // Instruction_Memory_11_s1_agent:rdata_fifo_src_valid -> avalon_st_adapter_005:in_0_valid
	wire  [33:0] instruction_memory_11_s1_agent_rdata_fifo_src_data;                                  // Instruction_Memory_11_s1_agent:rdata_fifo_src_data -> avalon_st_adapter_005:in_0_data
	wire         instruction_memory_11_s1_agent_rdata_fifo_src_ready;                                 // avalon_st_adapter_005:in_0_ready -> Instruction_Memory_11_s1_agent:rdata_fifo_src_ready
	wire         avalon_st_adapter_005_out_0_valid;                                                   // avalon_st_adapter_005:out_0_valid -> Instruction_Memory_11_s1_agent:rdata_fifo_sink_valid
	wire  [33:0] avalon_st_adapter_005_out_0_data;                                                    // avalon_st_adapter_005:out_0_data -> Instruction_Memory_11_s1_agent:rdata_fifo_sink_data
	wire         avalon_st_adapter_005_out_0_ready;                                                   // Instruction_Memory_11_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_005:out_0_ready
	wire   [0:0] avalon_st_adapter_005_out_0_error;                                                   // avalon_st_adapter_005:out_0_error -> Instruction_Memory_11_s1_agent:rdata_fifo_sink_error

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (14),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (14),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (1)
	) nios2_gen2_11_data_master_translator (
		.clk                    (clk_0_clk_clk),                                                                //                       clk.clk
		.reset                  (nios2_gen2_11_reset_reset_bridge_in_reset_reset),                              //                     reset.reset
		.uav_address            (nios2_gen2_11_data_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount         (nios2_gen2_11_data_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read               (nios2_gen2_11_data_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write              (nios2_gen2_11_data_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest        (nios2_gen2_11_data_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid      (nios2_gen2_11_data_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable         (nios2_gen2_11_data_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata           (nios2_gen2_11_data_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata          (nios2_gen2_11_data_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock               (nios2_gen2_11_data_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess        (nios2_gen2_11_data_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address             (nios2_gen2_11_data_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest         (nios2_gen2_11_data_master_waitrequest),                                        //                          .waitrequest
		.av_byteenable          (nios2_gen2_11_data_master_byteenable),                                         //                          .byteenable
		.av_read                (nios2_gen2_11_data_master_read),                                               //                          .read
		.av_readdata            (nios2_gen2_11_data_master_readdata),                                           //                          .readdata
		.av_write               (nios2_gen2_11_data_master_write),                                              //                          .write
		.av_writedata           (nios2_gen2_11_data_master_writedata),                                          //                          .writedata
		.av_debugaccess         (nios2_gen2_11_data_master_debugaccess),                                        //                          .debugaccess
		.av_burstcount          (1'b1),                                                                         //               (terminated)
		.av_beginbursttransfer  (1'b0),                                                                         //               (terminated)
		.av_begintransfer       (1'b0),                                                                         //               (terminated)
		.av_chipselect          (1'b0),                                                                         //               (terminated)
		.av_readdatavalid       (),                                                                             //               (terminated)
		.av_lock                (1'b0),                                                                         //               (terminated)
		.uav_clken              (),                                                                             //               (terminated)
		.av_clken               (1'b1),                                                                         //               (terminated)
		.uav_response           (2'b00),                                                                        //               (terminated)
		.av_response            (),                                                                             //               (terminated)
		.uav_writeresponsevalid (1'b0),                                                                         //               (terminated)
		.av_writeresponsevalid  ()                                                                              //               (terminated)
	);

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (14),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (14),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (0),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (1),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) nios2_gen2_11_instruction_master_translator (
		.clk                    (clk_0_clk_clk),                                                                       //                       clk.clk
		.reset                  (nios2_gen2_11_reset_reset_bridge_in_reset_reset),                                     //                     reset.reset
		.uav_address            (nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount         (nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read               (nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write              (nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest        (nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid      (nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable         (nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata           (nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata          (nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock               (nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess        (nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address             (nios2_gen2_11_instruction_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest         (nios2_gen2_11_instruction_master_waitrequest),                                        //                          .waitrequest
		.av_read                (nios2_gen2_11_instruction_master_read),                                               //                          .read
		.av_readdata            (nios2_gen2_11_instruction_master_readdata),                                           //                          .readdata
		.av_burstcount          (1'b1),                                                                                //               (terminated)
		.av_byteenable          (4'b1111),                                                                             //               (terminated)
		.av_beginbursttransfer  (1'b0),                                                                                //               (terminated)
		.av_begintransfer       (1'b0),                                                                                //               (terminated)
		.av_chipselect          (1'b0),                                                                                //               (terminated)
		.av_readdatavalid       (),                                                                                    //               (terminated)
		.av_write               (1'b0),                                                                                //               (terminated)
		.av_writedata           (32'b00000000000000000000000000000000),                                                //               (terminated)
		.av_lock                (1'b0),                                                                                //               (terminated)
		.av_debugaccess         (1'b0),                                                                                //               (terminated)
		.uav_clken              (),                                                                                    //               (terminated)
		.av_clken               (1'b1),                                                                                //               (terminated)
		.uav_response           (2'b00),                                                                               //               (terminated)
		.av_response            (),                                                                                    //               (terminated)
		.uav_writeresponsevalid (1'b0),                                                                                //               (terminated)
		.av_writeresponsevalid  ()                                                                                     //               (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (8),
		.UAV_DATA_W                     (8),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (1),
		.UAV_ADDRESS_W                  (14),
		.UAV_BURSTCOUNT_W               (1),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (1),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) adaptor_2x2_0_input_11_translator (
		.clk                    (clk_0_clk_clk),                                   //                      clk.clk
		.reset                  (nios2_gen2_11_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (adaptor_2x2_0_input_11_agent_m0_address),         // avalon_universal_slave_0.address
		.uav_burstcount         (adaptor_2x2_0_input_11_agent_m0_burstcount),      //                         .burstcount
		.uav_read               (adaptor_2x2_0_input_11_agent_m0_read),            //                         .read
		.uav_write              (adaptor_2x2_0_input_11_agent_m0_write),           //                         .write
		.uav_waitrequest        (adaptor_2x2_0_input_11_agent_m0_waitrequest),     //                         .waitrequest
		.uav_readdatavalid      (adaptor_2x2_0_input_11_agent_m0_readdatavalid),   //                         .readdatavalid
		.uav_byteenable         (adaptor_2x2_0_input_11_agent_m0_byteenable),      //                         .byteenable
		.uav_readdata           (adaptor_2x2_0_input_11_agent_m0_readdata),        //                         .readdata
		.uav_writedata          (adaptor_2x2_0_input_11_agent_m0_writedata),       //                         .writedata
		.uav_lock               (adaptor_2x2_0_input_11_agent_m0_lock),            //                         .lock
		.uav_debugaccess        (adaptor_2x2_0_input_11_agent_m0_debugaccess),     //                         .debugaccess
		.av_read                (adaptor_2x2_0_Input_11_read),                     //      avalon_anti_slave_0.read
		.av_readdata            (adaptor_2x2_0_Input_11_readdata),                 //                         .readdata
		.av_address             (),                                                //              (terminated)
		.av_write               (),                                                //              (terminated)
		.av_writedata           (),                                                //              (terminated)
		.av_begintransfer       (),                                                //              (terminated)
		.av_beginbursttransfer  (),                                                //              (terminated)
		.av_burstcount          (),                                                //              (terminated)
		.av_byteenable          (),                                                //              (terminated)
		.av_readdatavalid       (1'b0),                                            //              (terminated)
		.av_waitrequest         (1'b0),                                            //              (terminated)
		.av_writebyteenable     (),                                                //              (terminated)
		.av_lock                (),                                                //              (terminated)
		.av_chipselect          (),                                                //              (terminated)
		.av_clken               (),                                                //              (terminated)
		.uav_clken              (1'b0),                                            //              (terminated)
		.av_debugaccess         (),                                                //              (terminated)
		.av_outputenable        (),                                                //              (terminated)
		.uav_response           (),                                                //              (terminated)
		.av_response            (2'b00),                                           //              (terminated)
		.uav_writeresponsevalid (),                                                //              (terminated)
		.av_writeresponsevalid  (1'b0)                                             //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (8),
		.UAV_DATA_W                     (8),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (1),
		.UAV_ADDRESS_W                  (14),
		.UAV_BURSTCOUNT_W               (1),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (1),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) adaptor_2x2_0_output_11_translator (
		.clk                    (clk_0_clk_clk),                                   //                      clk.clk
		.reset                  (nios2_gen2_11_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (adaptor_2x2_0_output_11_agent_m0_address),        // avalon_universal_slave_0.address
		.uav_burstcount         (adaptor_2x2_0_output_11_agent_m0_burstcount),     //                         .burstcount
		.uav_read               (adaptor_2x2_0_output_11_agent_m0_read),           //                         .read
		.uav_write              (adaptor_2x2_0_output_11_agent_m0_write),          //                         .write
		.uav_waitrequest        (adaptor_2x2_0_output_11_agent_m0_waitrequest),    //                         .waitrequest
		.uav_readdatavalid      (adaptor_2x2_0_output_11_agent_m0_readdatavalid),  //                         .readdatavalid
		.uav_byteenable         (adaptor_2x2_0_output_11_agent_m0_byteenable),     //                         .byteenable
		.uav_readdata           (adaptor_2x2_0_output_11_agent_m0_readdata),       //                         .readdata
		.uav_writedata          (adaptor_2x2_0_output_11_agent_m0_writedata),      //                         .writedata
		.uav_lock               (adaptor_2x2_0_output_11_agent_m0_lock),           //                         .lock
		.uav_debugaccess        (adaptor_2x2_0_output_11_agent_m0_debugaccess),    //                         .debugaccess
		.av_write               (adaptor_2x2_0_Output_11_write),                   //      avalon_anti_slave_0.write
		.av_writedata           (adaptor_2x2_0_Output_11_writedata),               //                         .writedata
		.av_waitrequest         (adaptor_2x2_0_Output_11_waitrequest),             //                         .waitrequest
		.av_address             (),                                                //              (terminated)
		.av_read                (),                                                //              (terminated)
		.av_readdata            (8'b10101101),                                     //              (terminated)
		.av_begintransfer       (),                                                //              (terminated)
		.av_beginbursttransfer  (),                                                //              (terminated)
		.av_burstcount          (),                                                //              (terminated)
		.av_byteenable          (),                                                //              (terminated)
		.av_readdatavalid       (1'b0),                                            //              (terminated)
		.av_writebyteenable     (),                                                //              (terminated)
		.av_lock                (),                                                //              (terminated)
		.av_chipselect          (),                                                //              (terminated)
		.av_clken               (),                                                //              (terminated)
		.uav_clken              (1'b0),                                            //              (terminated)
		.av_debugaccess         (),                                                //              (terminated)
		.av_outputenable        (),                                                //              (terminated)
		.uav_response           (),                                                //              (terminated)
		.av_response            (2'b00),                                           //              (terminated)
		.uav_writeresponsevalid (),                                                //              (terminated)
		.av_writeresponsevalid  (1'b0)                                             //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (14),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) jtag_uart_11_avalon_jtag_slave_translator (
		.clk                    (clk_0_clk_clk),                                         //                      clk.clk
		.reset                  (nios2_gen2_11_reset_reset_bridge_in_reset_reset),       //                    reset.reset
		.uav_address            (jtag_uart_11_avalon_jtag_slave_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (jtag_uart_11_avalon_jtag_slave_agent_m0_burstcount),    //                         .burstcount
		.uav_read               (jtag_uart_11_avalon_jtag_slave_agent_m0_read),          //                         .read
		.uav_write              (jtag_uart_11_avalon_jtag_slave_agent_m0_write),         //                         .write
		.uav_waitrequest        (jtag_uart_11_avalon_jtag_slave_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (jtag_uart_11_avalon_jtag_slave_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (jtag_uart_11_avalon_jtag_slave_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata           (jtag_uart_11_avalon_jtag_slave_agent_m0_readdata),      //                         .readdata
		.uav_writedata          (jtag_uart_11_avalon_jtag_slave_agent_m0_writedata),     //                         .writedata
		.uav_lock               (jtag_uart_11_avalon_jtag_slave_agent_m0_lock),          //                         .lock
		.uav_debugaccess        (jtag_uart_11_avalon_jtag_slave_agent_m0_debugaccess),   //                         .debugaccess
		.av_address             (jtag_uart_11_avalon_jtag_slave_address),                //      avalon_anti_slave_0.address
		.av_write               (jtag_uart_11_avalon_jtag_slave_write),                  //                         .write
		.av_read                (jtag_uart_11_avalon_jtag_slave_read),                   //                         .read
		.av_readdata            (jtag_uart_11_avalon_jtag_slave_readdata),               //                         .readdata
		.av_writedata           (jtag_uart_11_avalon_jtag_slave_writedata),              //                         .writedata
		.av_waitrequest         (jtag_uart_11_avalon_jtag_slave_waitrequest),            //                         .waitrequest
		.av_chipselect          (jtag_uart_11_avalon_jtag_slave_chipselect),             //                         .chipselect
		.av_begintransfer       (),                                                      //              (terminated)
		.av_beginbursttransfer  (),                                                      //              (terminated)
		.av_burstcount          (),                                                      //              (terminated)
		.av_byteenable          (),                                                      //              (terminated)
		.av_readdatavalid       (1'b0),                                                  //              (terminated)
		.av_writebyteenable     (),                                                      //              (terminated)
		.av_lock                (),                                                      //              (terminated)
		.av_clken               (),                                                      //              (terminated)
		.uav_clken              (1'b0),                                                  //              (terminated)
		.av_debugaccess         (),                                                      //              (terminated)
		.av_outputenable        (),                                                      //              (terminated)
		.uav_response           (),                                                      //              (terminated)
		.av_response            (2'b00),                                                 //              (terminated)
		.uav_writeresponsevalid (),                                                      //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (9),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (14),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) nios2_gen2_11_debug_mem_slave_translator (
		.clk                    (clk_0_clk_clk),                                        //                      clk.clk
		.reset                  (nios2_gen2_11_reset_reset_bridge_in_reset_reset),      //                    reset.reset
		.uav_address            (nios2_gen2_11_debug_mem_slave_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (nios2_gen2_11_debug_mem_slave_agent_m0_burstcount),    //                         .burstcount
		.uav_read               (nios2_gen2_11_debug_mem_slave_agent_m0_read),          //                         .read
		.uav_write              (nios2_gen2_11_debug_mem_slave_agent_m0_write),         //                         .write
		.uav_waitrequest        (nios2_gen2_11_debug_mem_slave_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (nios2_gen2_11_debug_mem_slave_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (nios2_gen2_11_debug_mem_slave_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata           (nios2_gen2_11_debug_mem_slave_agent_m0_readdata),      //                         .readdata
		.uav_writedata          (nios2_gen2_11_debug_mem_slave_agent_m0_writedata),     //                         .writedata
		.uav_lock               (nios2_gen2_11_debug_mem_slave_agent_m0_lock),          //                         .lock
		.uav_debugaccess        (nios2_gen2_11_debug_mem_slave_agent_m0_debugaccess),   //                         .debugaccess
		.av_address             (nios2_gen2_11_debug_mem_slave_address),                //      avalon_anti_slave_0.address
		.av_write               (nios2_gen2_11_debug_mem_slave_write),                  //                         .write
		.av_read                (nios2_gen2_11_debug_mem_slave_read),                   //                         .read
		.av_readdata            (nios2_gen2_11_debug_mem_slave_readdata),               //                         .readdata
		.av_writedata           (nios2_gen2_11_debug_mem_slave_writedata),              //                         .writedata
		.av_byteenable          (nios2_gen2_11_debug_mem_slave_byteenable),             //                         .byteenable
		.av_waitrequest         (nios2_gen2_11_debug_mem_slave_waitrequest),            //                         .waitrequest
		.av_debugaccess         (nios2_gen2_11_debug_mem_slave_debugaccess),            //                         .debugaccess
		.av_begintransfer       (),                                                     //              (terminated)
		.av_beginbursttransfer  (),                                                     //              (terminated)
		.av_burstcount          (),                                                     //              (terminated)
		.av_readdatavalid       (1'b0),                                                 //              (terminated)
		.av_writebyteenable     (),                                                     //              (terminated)
		.av_lock                (),                                                     //              (terminated)
		.av_chipselect          (),                                                     //              (terminated)
		.av_clken               (),                                                     //              (terminated)
		.uav_clken              (1'b0),                                                 //              (terminated)
		.av_outputenable        (),                                                     //              (terminated)
		.uav_response           (),                                                     //              (terminated)
		.av_response            (2'b00),                                                //              (terminated)
		.uav_writeresponsevalid (),                                                     //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                  //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (10),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (14),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) data_memory_11_s1_translator (
		.clk                    (clk_0_clk_clk),                                   //                      clk.clk
		.reset                  (nios2_gen2_11_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (data_memory_11_s1_agent_m0_address),              // avalon_universal_slave_0.address
		.uav_burstcount         (data_memory_11_s1_agent_m0_burstcount),           //                         .burstcount
		.uav_read               (data_memory_11_s1_agent_m0_read),                 //                         .read
		.uav_write              (data_memory_11_s1_agent_m0_write),                //                         .write
		.uav_waitrequest        (data_memory_11_s1_agent_m0_waitrequest),          //                         .waitrequest
		.uav_readdatavalid      (data_memory_11_s1_agent_m0_readdatavalid),        //                         .readdatavalid
		.uav_byteenable         (data_memory_11_s1_agent_m0_byteenable),           //                         .byteenable
		.uav_readdata           (data_memory_11_s1_agent_m0_readdata),             //                         .readdata
		.uav_writedata          (data_memory_11_s1_agent_m0_writedata),            //                         .writedata
		.uav_lock               (data_memory_11_s1_agent_m0_lock),                 //                         .lock
		.uav_debugaccess        (data_memory_11_s1_agent_m0_debugaccess),          //                         .debugaccess
		.av_address             (Data_Memory_11_s1_address),                       //      avalon_anti_slave_0.address
		.av_write               (Data_Memory_11_s1_write),                         //                         .write
		.av_readdata            (Data_Memory_11_s1_readdata),                      //                         .readdata
		.av_writedata           (Data_Memory_11_s1_writedata),                     //                         .writedata
		.av_byteenable          (Data_Memory_11_s1_byteenable),                    //                         .byteenable
		.av_chipselect          (Data_Memory_11_s1_chipselect),                    //                         .chipselect
		.av_clken               (Data_Memory_11_s1_clken),                         //                         .clken
		.av_read                (),                                                //              (terminated)
		.av_begintransfer       (),                                                //              (terminated)
		.av_beginbursttransfer  (),                                                //              (terminated)
		.av_burstcount          (),                                                //              (terminated)
		.av_readdatavalid       (1'b0),                                            //              (terminated)
		.av_waitrequest         (1'b0),                                            //              (terminated)
		.av_writebyteenable     (),                                                //              (terminated)
		.av_lock                (),                                                //              (terminated)
		.uav_clken              (1'b0),                                            //              (terminated)
		.av_debugaccess         (),                                                //              (terminated)
		.av_outputenable        (),                                                //              (terminated)
		.uav_response           (),                                                //              (terminated)
		.av_response            (2'b00),                                           //              (terminated)
		.uav_writeresponsevalid (),                                                //              (terminated)
		.av_writeresponsevalid  (1'b0)                                             //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (10),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (14),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) instruction_memory_11_s1_translator (
		.clk                    (clk_0_clk_clk),                                   //                      clk.clk
		.reset                  (nios2_gen2_11_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (instruction_memory_11_s1_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (instruction_memory_11_s1_agent_m0_burstcount),    //                         .burstcount
		.uav_read               (instruction_memory_11_s1_agent_m0_read),          //                         .read
		.uav_write              (instruction_memory_11_s1_agent_m0_write),         //                         .write
		.uav_waitrequest        (instruction_memory_11_s1_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (instruction_memory_11_s1_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (instruction_memory_11_s1_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata           (instruction_memory_11_s1_agent_m0_readdata),      //                         .readdata
		.uav_writedata          (instruction_memory_11_s1_agent_m0_writedata),     //                         .writedata
		.uav_lock               (instruction_memory_11_s1_agent_m0_lock),          //                         .lock
		.uav_debugaccess        (instruction_memory_11_s1_agent_m0_debugaccess),   //                         .debugaccess
		.av_address             (Instruction_Memory_11_s1_address),                //      avalon_anti_slave_0.address
		.av_write               (Instruction_Memory_11_s1_write),                  //                         .write
		.av_readdata            (Instruction_Memory_11_s1_readdata),               //                         .readdata
		.av_writedata           (Instruction_Memory_11_s1_writedata),              //                         .writedata
		.av_byteenable          (Instruction_Memory_11_s1_byteenable),             //                         .byteenable
		.av_chipselect          (Instruction_Memory_11_s1_chipselect),             //                         .chipselect
		.av_clken               (Instruction_Memory_11_s1_clken),                  //                         .clken
		.av_read                (),                                                //              (terminated)
		.av_begintransfer       (),                                                //              (terminated)
		.av_beginbursttransfer  (),                                                //              (terminated)
		.av_burstcount          (),                                                //              (terminated)
		.av_readdatavalid       (1'b0),                                            //              (terminated)
		.av_waitrequest         (1'b0),                                            //              (terminated)
		.av_writebyteenable     (),                                                //              (terminated)
		.av_lock                (),                                                //              (terminated)
		.uav_clken              (1'b0),                                            //              (terminated)
		.av_debugaccess         (),                                                //              (terminated)
		.av_outputenable        (),                                                //              (terminated)
		.uav_response           (),                                                //              (terminated)
		.av_response            (2'b00),                                           //              (terminated)
		.uav_writeresponsevalid (),                                                //              (terminated)
		.av_writeresponsevalid  (1'b0)                                             //              (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_ORI_BURST_SIZE_H      (89),
		.PKT_ORI_BURST_SIZE_L      (87),
		.PKT_RESPONSE_STATUS_H     (86),
		.PKT_RESPONSE_STATUS_L     (85),
		.PKT_QOS_H                 (70),
		.PKT_QOS_L                 (70),
		.PKT_DATA_SIDEBAND_H       (68),
		.PKT_DATA_SIDEBAND_L       (68),
		.PKT_ADDR_SIDEBAND_H       (67),
		.PKT_ADDR_SIDEBAND_L       (67),
		.PKT_BURST_TYPE_H          (66),
		.PKT_BURST_TYPE_L          (65),
		.PKT_CACHE_H               (84),
		.PKT_CACHE_L               (81),
		.PKT_THREAD_ID_H           (77),
		.PKT_THREAD_ID_L           (77),
		.PKT_BURST_SIZE_H          (64),
		.PKT_BURST_SIZE_L          (62),
		.PKT_TRANS_EXCLUSIVE       (55),
		.PKT_TRANS_LOCK            (54),
		.PKT_BEGIN_BURST           (69),
		.PKT_PROTECTION_H          (80),
		.PKT_PROTECTION_L          (78),
		.PKT_BURSTWRAP_H           (61),
		.PKT_BURSTWRAP_L           (59),
		.PKT_BYTE_CNT_H            (58),
		.PKT_BYTE_CNT_L            (56),
		.PKT_ADDR_H                (49),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (50),
		.PKT_TRANS_POSTED          (51),
		.PKT_TRANS_WRITE           (52),
		.PKT_TRANS_READ            (53),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (73),
		.PKT_SRC_ID_L              (71),
		.PKT_DEST_ID_H             (76),
		.PKT_DEST_ID_L             (74),
		.ST_DATA_W                 (90),
		.ST_CHANNEL_W              (6),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (0),
		.BURSTWRAP_VALUE           (7),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) nios2_gen2_11_data_master_agent (
		.clk                   (clk_0_clk_clk),                                                                //       clk.clk
		.reset                 (nios2_gen2_11_reset_reset_bridge_in_reset_reset),                              // clk_reset.reset
		.av_address            (nios2_gen2_11_data_master_translator_avalon_universal_master_0_address),       //        av.address
		.av_write              (nios2_gen2_11_data_master_translator_avalon_universal_master_0_write),         //          .write
		.av_read               (nios2_gen2_11_data_master_translator_avalon_universal_master_0_read),          //          .read
		.av_writedata          (nios2_gen2_11_data_master_translator_avalon_universal_master_0_writedata),     //          .writedata
		.av_readdata           (nios2_gen2_11_data_master_translator_avalon_universal_master_0_readdata),      //          .readdata
		.av_waitrequest        (nios2_gen2_11_data_master_translator_avalon_universal_master_0_waitrequest),   //          .waitrequest
		.av_readdatavalid      (nios2_gen2_11_data_master_translator_avalon_universal_master_0_readdatavalid), //          .readdatavalid
		.av_byteenable         (nios2_gen2_11_data_master_translator_avalon_universal_master_0_byteenable),    //          .byteenable
		.av_burstcount         (nios2_gen2_11_data_master_translator_avalon_universal_master_0_burstcount),    //          .burstcount
		.av_debugaccess        (nios2_gen2_11_data_master_translator_avalon_universal_master_0_debugaccess),   //          .debugaccess
		.av_lock               (nios2_gen2_11_data_master_translator_avalon_universal_master_0_lock),          //          .lock
		.cp_valid              (nios2_gen2_11_data_master_agent_cp_valid),                                     //        cp.valid
		.cp_data               (nios2_gen2_11_data_master_agent_cp_data),                                      //          .data
		.cp_startofpacket      (nios2_gen2_11_data_master_agent_cp_startofpacket),                             //          .startofpacket
		.cp_endofpacket        (nios2_gen2_11_data_master_agent_cp_endofpacket),                               //          .endofpacket
		.cp_ready              (nios2_gen2_11_data_master_agent_cp_ready),                                     //          .ready
		.rp_valid              (rsp_mux_src_valid),                                                            //        rp.valid
		.rp_data               (rsp_mux_src_data),                                                             //          .data
		.rp_channel            (rsp_mux_src_channel),                                                          //          .channel
		.rp_startofpacket      (rsp_mux_src_startofpacket),                                                    //          .startofpacket
		.rp_endofpacket        (rsp_mux_src_endofpacket),                                                      //          .endofpacket
		.rp_ready              (rsp_mux_src_ready),                                                            //          .ready
		.av_response           (),                                                                             // (terminated)
		.av_writeresponsevalid ()                                                                              // (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_ORI_BURST_SIZE_H      (89),
		.PKT_ORI_BURST_SIZE_L      (87),
		.PKT_RESPONSE_STATUS_H     (86),
		.PKT_RESPONSE_STATUS_L     (85),
		.PKT_QOS_H                 (70),
		.PKT_QOS_L                 (70),
		.PKT_DATA_SIDEBAND_H       (68),
		.PKT_DATA_SIDEBAND_L       (68),
		.PKT_ADDR_SIDEBAND_H       (67),
		.PKT_ADDR_SIDEBAND_L       (67),
		.PKT_BURST_TYPE_H          (66),
		.PKT_BURST_TYPE_L          (65),
		.PKT_CACHE_H               (84),
		.PKT_CACHE_L               (81),
		.PKT_THREAD_ID_H           (77),
		.PKT_THREAD_ID_L           (77),
		.PKT_BURST_SIZE_H          (64),
		.PKT_BURST_SIZE_L          (62),
		.PKT_TRANS_EXCLUSIVE       (55),
		.PKT_TRANS_LOCK            (54),
		.PKT_BEGIN_BURST           (69),
		.PKT_PROTECTION_H          (80),
		.PKT_PROTECTION_L          (78),
		.PKT_BURSTWRAP_H           (61),
		.PKT_BURSTWRAP_L           (59),
		.PKT_BYTE_CNT_H            (58),
		.PKT_BYTE_CNT_L            (56),
		.PKT_ADDR_H                (49),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (50),
		.PKT_TRANS_POSTED          (51),
		.PKT_TRANS_WRITE           (52),
		.PKT_TRANS_READ            (53),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (73),
		.PKT_SRC_ID_L              (71),
		.PKT_DEST_ID_H             (76),
		.PKT_DEST_ID_L             (74),
		.ST_DATA_W                 (90),
		.ST_CHANNEL_W              (6),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (1),
		.BURSTWRAP_VALUE           (3),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) nios2_gen2_11_instruction_master_agent (
		.clk                   (clk_0_clk_clk),                                                                       //       clk.clk
		.reset                 (nios2_gen2_11_reset_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.av_address            (nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_address),       //        av.address
		.av_write              (nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_write),         //          .write
		.av_read               (nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_read),          //          .read
		.av_writedata          (nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_writedata),     //          .writedata
		.av_readdata           (nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_readdata),      //          .readdata
		.av_waitrequest        (nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_waitrequest),   //          .waitrequest
		.av_readdatavalid      (nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_readdatavalid), //          .readdatavalid
		.av_byteenable         (nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_byteenable),    //          .byteenable
		.av_burstcount         (nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_burstcount),    //          .burstcount
		.av_debugaccess        (nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_debugaccess),   //          .debugaccess
		.av_lock               (nios2_gen2_11_instruction_master_translator_avalon_universal_master_0_lock),          //          .lock
		.cp_valid              (nios2_gen2_11_instruction_master_agent_cp_valid),                                     //        cp.valid
		.cp_data               (nios2_gen2_11_instruction_master_agent_cp_data),                                      //          .data
		.cp_startofpacket      (nios2_gen2_11_instruction_master_agent_cp_startofpacket),                             //          .startofpacket
		.cp_endofpacket        (nios2_gen2_11_instruction_master_agent_cp_endofpacket),                               //          .endofpacket
		.cp_ready              (nios2_gen2_11_instruction_master_agent_cp_ready),                                     //          .ready
		.rp_valid              (rsp_mux_001_src_valid),                                                               //        rp.valid
		.rp_data               (rsp_mux_001_src_data),                                                                //          .data
		.rp_channel            (rsp_mux_001_src_channel),                                                             //          .channel
		.rp_startofpacket      (rsp_mux_001_src_startofpacket),                                                       //          .startofpacket
		.rp_endofpacket        (rsp_mux_001_src_endofpacket),                                                         //          .endofpacket
		.rp_ready              (rsp_mux_001_src_ready),                                                               //          .ready
		.av_response           (),                                                                                    // (terminated)
		.av_writeresponsevalid ()                                                                                     // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (62),
		.PKT_ORI_BURST_SIZE_L      (60),
		.PKT_RESPONSE_STATUS_H     (59),
		.PKT_RESPONSE_STATUS_L     (58),
		.PKT_BURST_SIZE_H          (37),
		.PKT_BURST_SIZE_L          (35),
		.PKT_TRANS_LOCK            (27),
		.PKT_BEGIN_BURST           (42),
		.PKT_PROTECTION_H          (53),
		.PKT_PROTECTION_L          (51),
		.PKT_BURSTWRAP_H           (34),
		.PKT_BURSTWRAP_L           (32),
		.PKT_BYTE_CNT_H            (31),
		.PKT_BYTE_CNT_L            (29),
		.PKT_ADDR_H                (22),
		.PKT_ADDR_L                (9),
		.PKT_TRANS_COMPRESSED_READ (23),
		.PKT_TRANS_POSTED          (24),
		.PKT_TRANS_WRITE           (25),
		.PKT_TRANS_READ            (26),
		.PKT_DATA_H                (7),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_SRC_ID_H              (46),
		.PKT_SRC_ID_L              (44),
		.PKT_DEST_ID_H             (49),
		.PKT_DEST_ID_L             (47),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (6),
		.ST_DATA_W                 (63),
		.AVS_BURSTCOUNT_W          (1),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) adaptor_2x2_0_input_11_agent (
		.clk                     (clk_0_clk_clk),                                              //             clk.clk
		.reset                   (nios2_gen2_11_reset_reset_bridge_in_reset_reset),            //       clk_reset.reset
		.m0_address              (adaptor_2x2_0_input_11_agent_m0_address),                    //              m0.address
		.m0_burstcount           (adaptor_2x2_0_input_11_agent_m0_burstcount),                 //                .burstcount
		.m0_byteenable           (adaptor_2x2_0_input_11_agent_m0_byteenable),                 //                .byteenable
		.m0_debugaccess          (adaptor_2x2_0_input_11_agent_m0_debugaccess),                //                .debugaccess
		.m0_lock                 (adaptor_2x2_0_input_11_agent_m0_lock),                       //                .lock
		.m0_readdata             (adaptor_2x2_0_input_11_agent_m0_readdata),                   //                .readdata
		.m0_readdatavalid        (adaptor_2x2_0_input_11_agent_m0_readdatavalid),              //                .readdatavalid
		.m0_read                 (adaptor_2x2_0_input_11_agent_m0_read),                       //                .read
		.m0_waitrequest          (adaptor_2x2_0_input_11_agent_m0_waitrequest),                //                .waitrequest
		.m0_writedata            (adaptor_2x2_0_input_11_agent_m0_writedata),                  //                .writedata
		.m0_write                (adaptor_2x2_0_input_11_agent_m0_write),                      //                .write
		.rp_endofpacket          (adaptor_2x2_0_input_11_agent_rp_endofpacket),                //              rp.endofpacket
		.rp_ready                (adaptor_2x2_0_input_11_agent_rp_ready),                      //                .ready
		.rp_valid                (adaptor_2x2_0_input_11_agent_rp_valid),                      //                .valid
		.rp_data                 (adaptor_2x2_0_input_11_agent_rp_data),                       //                .data
		.rp_startofpacket        (adaptor_2x2_0_input_11_agent_rp_startofpacket),              //                .startofpacket
		.cp_ready                (adaptor_2x2_0_input_11_burst_adapter_source0_ready),         //              cp.ready
		.cp_valid                (adaptor_2x2_0_input_11_burst_adapter_source0_valid),         //                .valid
		.cp_data                 (adaptor_2x2_0_input_11_burst_adapter_source0_data),          //                .data
		.cp_startofpacket        (adaptor_2x2_0_input_11_burst_adapter_source0_startofpacket), //                .startofpacket
		.cp_endofpacket          (adaptor_2x2_0_input_11_burst_adapter_source0_endofpacket),   //                .endofpacket
		.cp_channel              (adaptor_2x2_0_input_11_burst_adapter_source0_channel),       //                .channel
		.rf_sink_ready           (adaptor_2x2_0_input_11_agent_rsp_fifo_out_ready),            //         rf_sink.ready
		.rf_sink_valid           (adaptor_2x2_0_input_11_agent_rsp_fifo_out_valid),            //                .valid
		.rf_sink_startofpacket   (adaptor_2x2_0_input_11_agent_rsp_fifo_out_startofpacket),    //                .startofpacket
		.rf_sink_endofpacket     (adaptor_2x2_0_input_11_agent_rsp_fifo_out_endofpacket),      //                .endofpacket
		.rf_sink_data            (adaptor_2x2_0_input_11_agent_rsp_fifo_out_data),             //                .data
		.rf_source_ready         (adaptor_2x2_0_input_11_agent_rf_source_ready),               //       rf_source.ready
		.rf_source_valid         (adaptor_2x2_0_input_11_agent_rf_source_valid),               //                .valid
		.rf_source_startofpacket (adaptor_2x2_0_input_11_agent_rf_source_startofpacket),       //                .startofpacket
		.rf_source_endofpacket   (adaptor_2x2_0_input_11_agent_rf_source_endofpacket),         //                .endofpacket
		.rf_source_data          (adaptor_2x2_0_input_11_agent_rf_source_data),                //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_out_0_ready),                              // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_out_0_valid),                              //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_out_0_data),                               //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_out_0_error),                              //                .error
		.rdata_fifo_src_ready    (adaptor_2x2_0_input_11_agent_rdata_fifo_src_ready),          //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (adaptor_2x2_0_input_11_agent_rdata_fifo_src_valid),          //                .valid
		.rdata_fifo_src_data     (adaptor_2x2_0_input_11_agent_rdata_fifo_src_data),           //                .data
		.m0_response             (2'b00),                                                      //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                        //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (64),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) adaptor_2x2_0_input_11_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                           //       clk.clk
		.reset             (nios2_gen2_11_reset_reset_bridge_in_reset_reset),         // clk_reset.reset
		.in_data           (adaptor_2x2_0_input_11_agent_rf_source_data),             //        in.data
		.in_valid          (adaptor_2x2_0_input_11_agent_rf_source_valid),            //          .valid
		.in_ready          (adaptor_2x2_0_input_11_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (adaptor_2x2_0_input_11_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (adaptor_2x2_0_input_11_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (adaptor_2x2_0_input_11_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (adaptor_2x2_0_input_11_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (adaptor_2x2_0_input_11_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (adaptor_2x2_0_input_11_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (adaptor_2x2_0_input_11_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                   // (terminated)
		.csr_read          (1'b0),                                                    // (terminated)
		.csr_write         (1'b0),                                                    // (terminated)
		.csr_readdata      (),                                                        // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                    // (terminated)
		.almost_full_data  (),                                                        // (terminated)
		.almost_empty_data (),                                                        // (terminated)
		.in_empty          (1'b0),                                                    // (terminated)
		.out_empty         (),                                                        // (terminated)
		.in_error          (1'b0),                                                    // (terminated)
		.out_error         (),                                                        // (terminated)
		.in_channel        (1'b0),                                                    // (terminated)
		.out_channel       ()                                                         // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (62),
		.PKT_ORI_BURST_SIZE_L      (60),
		.PKT_RESPONSE_STATUS_H     (59),
		.PKT_RESPONSE_STATUS_L     (58),
		.PKT_BURST_SIZE_H          (37),
		.PKT_BURST_SIZE_L          (35),
		.PKT_TRANS_LOCK            (27),
		.PKT_BEGIN_BURST           (42),
		.PKT_PROTECTION_H          (53),
		.PKT_PROTECTION_L          (51),
		.PKT_BURSTWRAP_H           (34),
		.PKT_BURSTWRAP_L           (32),
		.PKT_BYTE_CNT_H            (31),
		.PKT_BYTE_CNT_L            (29),
		.PKT_ADDR_H                (22),
		.PKT_ADDR_L                (9),
		.PKT_TRANS_COMPRESSED_READ (23),
		.PKT_TRANS_POSTED          (24),
		.PKT_TRANS_WRITE           (25),
		.PKT_TRANS_READ            (26),
		.PKT_DATA_H                (7),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_SRC_ID_H              (46),
		.PKT_SRC_ID_L              (44),
		.PKT_DEST_ID_H             (49),
		.PKT_DEST_ID_L             (47),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (6),
		.ST_DATA_W                 (63),
		.AVS_BURSTCOUNT_W          (1),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) adaptor_2x2_0_output_11_agent (
		.clk                     (clk_0_clk_clk),                                               //             clk.clk
		.reset                   (nios2_gen2_11_reset_reset_bridge_in_reset_reset),             //       clk_reset.reset
		.m0_address              (adaptor_2x2_0_output_11_agent_m0_address),                    //              m0.address
		.m0_burstcount           (adaptor_2x2_0_output_11_agent_m0_burstcount),                 //                .burstcount
		.m0_byteenable           (adaptor_2x2_0_output_11_agent_m0_byteenable),                 //                .byteenable
		.m0_debugaccess          (adaptor_2x2_0_output_11_agent_m0_debugaccess),                //                .debugaccess
		.m0_lock                 (adaptor_2x2_0_output_11_agent_m0_lock),                       //                .lock
		.m0_readdata             (adaptor_2x2_0_output_11_agent_m0_readdata),                   //                .readdata
		.m0_readdatavalid        (adaptor_2x2_0_output_11_agent_m0_readdatavalid),              //                .readdatavalid
		.m0_read                 (adaptor_2x2_0_output_11_agent_m0_read),                       //                .read
		.m0_waitrequest          (adaptor_2x2_0_output_11_agent_m0_waitrequest),                //                .waitrequest
		.m0_writedata            (adaptor_2x2_0_output_11_agent_m0_writedata),                  //                .writedata
		.m0_write                (adaptor_2x2_0_output_11_agent_m0_write),                      //                .write
		.rp_endofpacket          (adaptor_2x2_0_output_11_agent_rp_endofpacket),                //              rp.endofpacket
		.rp_ready                (adaptor_2x2_0_output_11_agent_rp_ready),                      //                .ready
		.rp_valid                (adaptor_2x2_0_output_11_agent_rp_valid),                      //                .valid
		.rp_data                 (adaptor_2x2_0_output_11_agent_rp_data),                       //                .data
		.rp_startofpacket        (adaptor_2x2_0_output_11_agent_rp_startofpacket),              //                .startofpacket
		.cp_ready                (adaptor_2x2_0_output_11_burst_adapter_source0_ready),         //              cp.ready
		.cp_valid                (adaptor_2x2_0_output_11_burst_adapter_source0_valid),         //                .valid
		.cp_data                 (adaptor_2x2_0_output_11_burst_adapter_source0_data),          //                .data
		.cp_startofpacket        (adaptor_2x2_0_output_11_burst_adapter_source0_startofpacket), //                .startofpacket
		.cp_endofpacket          (adaptor_2x2_0_output_11_burst_adapter_source0_endofpacket),   //                .endofpacket
		.cp_channel              (adaptor_2x2_0_output_11_burst_adapter_source0_channel),       //                .channel
		.rf_sink_ready           (adaptor_2x2_0_output_11_agent_rsp_fifo_out_ready),            //         rf_sink.ready
		.rf_sink_valid           (adaptor_2x2_0_output_11_agent_rsp_fifo_out_valid),            //                .valid
		.rf_sink_startofpacket   (adaptor_2x2_0_output_11_agent_rsp_fifo_out_startofpacket),    //                .startofpacket
		.rf_sink_endofpacket     (adaptor_2x2_0_output_11_agent_rsp_fifo_out_endofpacket),      //                .endofpacket
		.rf_sink_data            (adaptor_2x2_0_output_11_agent_rsp_fifo_out_data),             //                .data
		.rf_source_ready         (adaptor_2x2_0_output_11_agent_rf_source_ready),               //       rf_source.ready
		.rf_source_valid         (adaptor_2x2_0_output_11_agent_rf_source_valid),               //                .valid
		.rf_source_startofpacket (adaptor_2x2_0_output_11_agent_rf_source_startofpacket),       //                .startofpacket
		.rf_source_endofpacket   (adaptor_2x2_0_output_11_agent_rf_source_endofpacket),         //                .endofpacket
		.rf_source_data          (adaptor_2x2_0_output_11_agent_rf_source_data),                //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_001_out_0_ready),                           // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_001_out_0_valid),                           //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_001_out_0_data),                            //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_001_out_0_error),                           //                .error
		.rdata_fifo_src_ready    (adaptor_2x2_0_output_11_agent_rdata_fifo_src_ready),          //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (adaptor_2x2_0_output_11_agent_rdata_fifo_src_valid),          //                .valid
		.rdata_fifo_src_data     (adaptor_2x2_0_output_11_agent_rdata_fifo_src_data),           //                .data
		.m0_response             (2'b00),                                                       //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                         //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (64),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) adaptor_2x2_0_output_11_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                            //       clk.clk
		.reset             (nios2_gen2_11_reset_reset_bridge_in_reset_reset),          // clk_reset.reset
		.in_data           (adaptor_2x2_0_output_11_agent_rf_source_data),             //        in.data
		.in_valid          (adaptor_2x2_0_output_11_agent_rf_source_valid),            //          .valid
		.in_ready          (adaptor_2x2_0_output_11_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (adaptor_2x2_0_output_11_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (adaptor_2x2_0_output_11_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (adaptor_2x2_0_output_11_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (adaptor_2x2_0_output_11_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (adaptor_2x2_0_output_11_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (adaptor_2x2_0_output_11_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (adaptor_2x2_0_output_11_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                    // (terminated)
		.csr_read          (1'b0),                                                     // (terminated)
		.csr_write         (1'b0),                                                     // (terminated)
		.csr_readdata      (),                                                         // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                     // (terminated)
		.almost_full_data  (),                                                         // (terminated)
		.almost_empty_data (),                                                         // (terminated)
		.in_empty          (1'b0),                                                     // (terminated)
		.out_empty         (),                                                         // (terminated)
		.in_error          (1'b0),                                                     // (terminated)
		.out_error         (),                                                         // (terminated)
		.in_channel        (1'b0),                                                     // (terminated)
		.out_channel       ()                                                          // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (89),
		.PKT_ORI_BURST_SIZE_L      (87),
		.PKT_RESPONSE_STATUS_H     (86),
		.PKT_RESPONSE_STATUS_L     (85),
		.PKT_BURST_SIZE_H          (64),
		.PKT_BURST_SIZE_L          (62),
		.PKT_TRANS_LOCK            (54),
		.PKT_BEGIN_BURST           (69),
		.PKT_PROTECTION_H          (80),
		.PKT_PROTECTION_L          (78),
		.PKT_BURSTWRAP_H           (61),
		.PKT_BURSTWRAP_L           (59),
		.PKT_BYTE_CNT_H            (58),
		.PKT_BYTE_CNT_L            (56),
		.PKT_ADDR_H                (49),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (50),
		.PKT_TRANS_POSTED          (51),
		.PKT_TRANS_WRITE           (52),
		.PKT_TRANS_READ            (53),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (73),
		.PKT_SRC_ID_L              (71),
		.PKT_DEST_ID_H             (76),
		.PKT_DEST_ID_L             (74),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (6),
		.ST_DATA_W                 (90),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) jtag_uart_11_avalon_jtag_slave_agent (
		.clk                     (clk_0_clk_clk),                                                   //             clk.clk
		.reset                   (nios2_gen2_11_reset_reset_bridge_in_reset_reset),                 //       clk_reset.reset
		.m0_address              (jtag_uart_11_avalon_jtag_slave_agent_m0_address),                 //              m0.address
		.m0_burstcount           (jtag_uart_11_avalon_jtag_slave_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (jtag_uart_11_avalon_jtag_slave_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (jtag_uart_11_avalon_jtag_slave_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (jtag_uart_11_avalon_jtag_slave_agent_m0_lock),                    //                .lock
		.m0_readdata             (jtag_uart_11_avalon_jtag_slave_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (jtag_uart_11_avalon_jtag_slave_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (jtag_uart_11_avalon_jtag_slave_agent_m0_read),                    //                .read
		.m0_waitrequest          (jtag_uart_11_avalon_jtag_slave_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (jtag_uart_11_avalon_jtag_slave_agent_m0_writedata),               //                .writedata
		.m0_write                (jtag_uart_11_avalon_jtag_slave_agent_m0_write),                   //                .write
		.rp_endofpacket          (jtag_uart_11_avalon_jtag_slave_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (jtag_uart_11_avalon_jtag_slave_agent_rp_ready),                   //                .ready
		.rp_valid                (jtag_uart_11_avalon_jtag_slave_agent_rp_valid),                   //                .valid
		.rp_data                 (jtag_uart_11_avalon_jtag_slave_agent_rp_data),                    //                .data
		.rp_startofpacket        (jtag_uart_11_avalon_jtag_slave_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_002_src_ready),                                           //              cp.ready
		.cp_valid                (cmd_mux_002_src_valid),                                           //                .valid
		.cp_data                 (cmd_mux_002_src_data),                                            //                .data
		.cp_startofpacket        (cmd_mux_002_src_startofpacket),                                   //                .startofpacket
		.cp_endofpacket          (cmd_mux_002_src_endofpacket),                                     //                .endofpacket
		.cp_channel              (cmd_mux_002_src_channel),                                         //                .channel
		.rf_sink_ready           (jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (jtag_uart_11_avalon_jtag_slave_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (jtag_uart_11_avalon_jtag_slave_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (jtag_uart_11_avalon_jtag_slave_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (jtag_uart_11_avalon_jtag_slave_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (jtag_uart_11_avalon_jtag_slave_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_002_out_0_ready),                               // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_002_out_0_valid),                               //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_002_out_0_data),                                //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_002_out_0_error),                               //                .error
		.rdata_fifo_src_ready    (jtag_uart_11_avalon_jtag_slave_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (jtag_uart_11_avalon_jtag_slave_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (jtag_uart_11_avalon_jtag_slave_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                           //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (91),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                   //       clk.clk
		.reset             (nios2_gen2_11_reset_reset_bridge_in_reset_reset),                 // clk_reset.reset
		.in_data           (jtag_uart_11_avalon_jtag_slave_agent_rf_source_data),             //        in.data
		.in_valid          (jtag_uart_11_avalon_jtag_slave_agent_rf_source_valid),            //          .valid
		.in_ready          (jtag_uart_11_avalon_jtag_slave_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (jtag_uart_11_avalon_jtag_slave_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (jtag_uart_11_avalon_jtag_slave_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (jtag_uart_11_avalon_jtag_slave_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                           // (terminated)
		.csr_read          (1'b0),                                                            // (terminated)
		.csr_write         (1'b0),                                                            // (terminated)
		.csr_readdata      (),                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                            // (terminated)
		.almost_full_data  (),                                                                // (terminated)
		.almost_empty_data (),                                                                // (terminated)
		.in_empty          (1'b0),                                                            // (terminated)
		.out_empty         (),                                                                // (terminated)
		.in_error          (1'b0),                                                            // (terminated)
		.out_error         (),                                                                // (terminated)
		.in_channel        (1'b0),                                                            // (terminated)
		.out_channel       ()                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (89),
		.PKT_ORI_BURST_SIZE_L      (87),
		.PKT_RESPONSE_STATUS_H     (86),
		.PKT_RESPONSE_STATUS_L     (85),
		.PKT_BURST_SIZE_H          (64),
		.PKT_BURST_SIZE_L          (62),
		.PKT_TRANS_LOCK            (54),
		.PKT_BEGIN_BURST           (69),
		.PKT_PROTECTION_H          (80),
		.PKT_PROTECTION_L          (78),
		.PKT_BURSTWRAP_H           (61),
		.PKT_BURSTWRAP_L           (59),
		.PKT_BYTE_CNT_H            (58),
		.PKT_BYTE_CNT_L            (56),
		.PKT_ADDR_H                (49),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (50),
		.PKT_TRANS_POSTED          (51),
		.PKT_TRANS_WRITE           (52),
		.PKT_TRANS_READ            (53),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (73),
		.PKT_SRC_ID_L              (71),
		.PKT_DEST_ID_H             (76),
		.PKT_DEST_ID_L             (74),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (6),
		.ST_DATA_W                 (90),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) nios2_gen2_11_debug_mem_slave_agent (
		.clk                     (clk_0_clk_clk),                                                  //             clk.clk
		.reset                   (nios2_gen2_11_reset_reset_bridge_in_reset_reset),                //       clk_reset.reset
		.m0_address              (nios2_gen2_11_debug_mem_slave_agent_m0_address),                 //              m0.address
		.m0_burstcount           (nios2_gen2_11_debug_mem_slave_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (nios2_gen2_11_debug_mem_slave_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (nios2_gen2_11_debug_mem_slave_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (nios2_gen2_11_debug_mem_slave_agent_m0_lock),                    //                .lock
		.m0_readdata             (nios2_gen2_11_debug_mem_slave_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (nios2_gen2_11_debug_mem_slave_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (nios2_gen2_11_debug_mem_slave_agent_m0_read),                    //                .read
		.m0_waitrequest          (nios2_gen2_11_debug_mem_slave_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (nios2_gen2_11_debug_mem_slave_agent_m0_writedata),               //                .writedata
		.m0_write                (nios2_gen2_11_debug_mem_slave_agent_m0_write),                   //                .write
		.rp_endofpacket          (nios2_gen2_11_debug_mem_slave_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (nios2_gen2_11_debug_mem_slave_agent_rp_ready),                   //                .ready
		.rp_valid                (nios2_gen2_11_debug_mem_slave_agent_rp_valid),                   //                .valid
		.rp_data                 (nios2_gen2_11_debug_mem_slave_agent_rp_data),                    //                .data
		.rp_startofpacket        (nios2_gen2_11_debug_mem_slave_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_003_src_ready),                                          //              cp.ready
		.cp_valid                (cmd_mux_003_src_valid),                                          //                .valid
		.cp_data                 (cmd_mux_003_src_data),                                           //                .data
		.cp_startofpacket        (cmd_mux_003_src_startofpacket),                                  //                .startofpacket
		.cp_endofpacket          (cmd_mux_003_src_endofpacket),                                    //                .endofpacket
		.cp_channel              (cmd_mux_003_src_channel),                                        //                .channel
		.rf_sink_ready           (nios2_gen2_11_debug_mem_slave_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (nios2_gen2_11_debug_mem_slave_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (nios2_gen2_11_debug_mem_slave_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (nios2_gen2_11_debug_mem_slave_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (nios2_gen2_11_debug_mem_slave_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (nios2_gen2_11_debug_mem_slave_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (nios2_gen2_11_debug_mem_slave_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (nios2_gen2_11_debug_mem_slave_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (nios2_gen2_11_debug_mem_slave_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (nios2_gen2_11_debug_mem_slave_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_003_out_0_ready),                              // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_003_out_0_valid),                              //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_003_out_0_data),                               //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_003_out_0_error),                              //                .error
		.rdata_fifo_src_ready    (nios2_gen2_11_debug_mem_slave_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (nios2_gen2_11_debug_mem_slave_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (nios2_gen2_11_debug_mem_slave_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                          //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                            //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (91),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) nios2_gen2_11_debug_mem_slave_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                  //       clk.clk
		.reset             (nios2_gen2_11_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.in_data           (nios2_gen2_11_debug_mem_slave_agent_rf_source_data),             //        in.data
		.in_valid          (nios2_gen2_11_debug_mem_slave_agent_rf_source_valid),            //          .valid
		.in_ready          (nios2_gen2_11_debug_mem_slave_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (nios2_gen2_11_debug_mem_slave_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (nios2_gen2_11_debug_mem_slave_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (nios2_gen2_11_debug_mem_slave_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (nios2_gen2_11_debug_mem_slave_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (nios2_gen2_11_debug_mem_slave_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (nios2_gen2_11_debug_mem_slave_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (nios2_gen2_11_debug_mem_slave_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                          // (terminated)
		.csr_read          (1'b0),                                                           // (terminated)
		.csr_write         (1'b0),                                                           // (terminated)
		.csr_readdata      (),                                                               // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                           // (terminated)
		.almost_full_data  (),                                                               // (terminated)
		.almost_empty_data (),                                                               // (terminated)
		.in_empty          (1'b0),                                                           // (terminated)
		.out_empty         (),                                                               // (terminated)
		.in_error          (1'b0),                                                           // (terminated)
		.out_error         (),                                                               // (terminated)
		.in_channel        (1'b0),                                                           // (terminated)
		.out_channel       ()                                                                // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (89),
		.PKT_ORI_BURST_SIZE_L      (87),
		.PKT_RESPONSE_STATUS_H     (86),
		.PKT_RESPONSE_STATUS_L     (85),
		.PKT_BURST_SIZE_H          (64),
		.PKT_BURST_SIZE_L          (62),
		.PKT_TRANS_LOCK            (54),
		.PKT_BEGIN_BURST           (69),
		.PKT_PROTECTION_H          (80),
		.PKT_PROTECTION_L          (78),
		.PKT_BURSTWRAP_H           (61),
		.PKT_BURSTWRAP_L           (59),
		.PKT_BYTE_CNT_H            (58),
		.PKT_BYTE_CNT_L            (56),
		.PKT_ADDR_H                (49),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (50),
		.PKT_TRANS_POSTED          (51),
		.PKT_TRANS_WRITE           (52),
		.PKT_TRANS_READ            (53),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (73),
		.PKT_SRC_ID_L              (71),
		.PKT_DEST_ID_H             (76),
		.PKT_DEST_ID_L             (74),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (6),
		.ST_DATA_W                 (90),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) data_memory_11_s1_agent (
		.clk                     (clk_0_clk_clk),                                      //             clk.clk
		.reset                   (nios2_gen2_11_reset_reset_bridge_in_reset_reset),    //       clk_reset.reset
		.m0_address              (data_memory_11_s1_agent_m0_address),                 //              m0.address
		.m0_burstcount           (data_memory_11_s1_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (data_memory_11_s1_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (data_memory_11_s1_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (data_memory_11_s1_agent_m0_lock),                    //                .lock
		.m0_readdata             (data_memory_11_s1_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (data_memory_11_s1_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (data_memory_11_s1_agent_m0_read),                    //                .read
		.m0_waitrequest          (data_memory_11_s1_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (data_memory_11_s1_agent_m0_writedata),               //                .writedata
		.m0_write                (data_memory_11_s1_agent_m0_write),                   //                .write
		.rp_endofpacket          (data_memory_11_s1_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (data_memory_11_s1_agent_rp_ready),                   //                .ready
		.rp_valid                (data_memory_11_s1_agent_rp_valid),                   //                .valid
		.rp_data                 (data_memory_11_s1_agent_rp_data),                    //                .data
		.rp_startofpacket        (data_memory_11_s1_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_004_src_ready),                              //              cp.ready
		.cp_valid                (cmd_mux_004_src_valid),                              //                .valid
		.cp_data                 (cmd_mux_004_src_data),                               //                .data
		.cp_startofpacket        (cmd_mux_004_src_startofpacket),                      //                .startofpacket
		.cp_endofpacket          (cmd_mux_004_src_endofpacket),                        //                .endofpacket
		.cp_channel              (cmd_mux_004_src_channel),                            //                .channel
		.rf_sink_ready           (data_memory_11_s1_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (data_memory_11_s1_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (data_memory_11_s1_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (data_memory_11_s1_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (data_memory_11_s1_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (data_memory_11_s1_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (data_memory_11_s1_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (data_memory_11_s1_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (data_memory_11_s1_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (data_memory_11_s1_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_004_out_0_ready),                  // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_004_out_0_valid),                  //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_004_out_0_data),                   //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_004_out_0_error),                  //                .error
		.rdata_fifo_src_ready    (data_memory_11_s1_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (data_memory_11_s1_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (data_memory_11_s1_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (91),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) data_memory_11_s1_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                      //       clk.clk
		.reset             (nios2_gen2_11_reset_reset_bridge_in_reset_reset),    // clk_reset.reset
		.in_data           (data_memory_11_s1_agent_rf_source_data),             //        in.data
		.in_valid          (data_memory_11_s1_agent_rf_source_valid),            //          .valid
		.in_ready          (data_memory_11_s1_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (data_memory_11_s1_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (data_memory_11_s1_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (data_memory_11_s1_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (data_memory_11_s1_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (data_memory_11_s1_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (data_memory_11_s1_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (data_memory_11_s1_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                              // (terminated)
		.csr_read          (1'b0),                                               // (terminated)
		.csr_write         (1'b0),                                               // (terminated)
		.csr_readdata      (),                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),               // (terminated)
		.almost_full_data  (),                                                   // (terminated)
		.almost_empty_data (),                                                   // (terminated)
		.in_empty          (1'b0),                                               // (terminated)
		.out_empty         (),                                                   // (terminated)
		.in_error          (1'b0),                                               // (terminated)
		.out_error         (),                                                   // (terminated)
		.in_channel        (1'b0),                                               // (terminated)
		.out_channel       ()                                                    // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (89),
		.PKT_ORI_BURST_SIZE_L      (87),
		.PKT_RESPONSE_STATUS_H     (86),
		.PKT_RESPONSE_STATUS_L     (85),
		.PKT_BURST_SIZE_H          (64),
		.PKT_BURST_SIZE_L          (62),
		.PKT_TRANS_LOCK            (54),
		.PKT_BEGIN_BURST           (69),
		.PKT_PROTECTION_H          (80),
		.PKT_PROTECTION_L          (78),
		.PKT_BURSTWRAP_H           (61),
		.PKT_BURSTWRAP_L           (59),
		.PKT_BYTE_CNT_H            (58),
		.PKT_BYTE_CNT_L            (56),
		.PKT_ADDR_H                (49),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (50),
		.PKT_TRANS_POSTED          (51),
		.PKT_TRANS_WRITE           (52),
		.PKT_TRANS_READ            (53),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (73),
		.PKT_SRC_ID_L              (71),
		.PKT_DEST_ID_H             (76),
		.PKT_DEST_ID_L             (74),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (6),
		.ST_DATA_W                 (90),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) instruction_memory_11_s1_agent (
		.clk                     (clk_0_clk_clk),                                             //             clk.clk
		.reset                   (nios2_gen2_11_reset_reset_bridge_in_reset_reset),           //       clk_reset.reset
		.m0_address              (instruction_memory_11_s1_agent_m0_address),                 //              m0.address
		.m0_burstcount           (instruction_memory_11_s1_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (instruction_memory_11_s1_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (instruction_memory_11_s1_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (instruction_memory_11_s1_agent_m0_lock),                    //                .lock
		.m0_readdata             (instruction_memory_11_s1_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (instruction_memory_11_s1_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (instruction_memory_11_s1_agent_m0_read),                    //                .read
		.m0_waitrequest          (instruction_memory_11_s1_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (instruction_memory_11_s1_agent_m0_writedata),               //                .writedata
		.m0_write                (instruction_memory_11_s1_agent_m0_write),                   //                .write
		.rp_endofpacket          (instruction_memory_11_s1_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (instruction_memory_11_s1_agent_rp_ready),                   //                .ready
		.rp_valid                (instruction_memory_11_s1_agent_rp_valid),                   //                .valid
		.rp_data                 (instruction_memory_11_s1_agent_rp_data),                    //                .data
		.rp_startofpacket        (instruction_memory_11_s1_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_mux_005_src_ready),                                     //              cp.ready
		.cp_valid                (cmd_mux_005_src_valid),                                     //                .valid
		.cp_data                 (cmd_mux_005_src_data),                                      //                .data
		.cp_startofpacket        (cmd_mux_005_src_startofpacket),                             //                .startofpacket
		.cp_endofpacket          (cmd_mux_005_src_endofpacket),                               //                .endofpacket
		.cp_channel              (cmd_mux_005_src_channel),                                   //                .channel
		.rf_sink_ready           (instruction_memory_11_s1_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (instruction_memory_11_s1_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (instruction_memory_11_s1_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (instruction_memory_11_s1_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (instruction_memory_11_s1_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (instruction_memory_11_s1_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (instruction_memory_11_s1_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (instruction_memory_11_s1_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (instruction_memory_11_s1_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (instruction_memory_11_s1_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_005_out_0_ready),                         // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_005_out_0_valid),                         //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_005_out_0_data),                          //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_005_out_0_error),                         //                .error
		.rdata_fifo_src_ready    (instruction_memory_11_s1_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (instruction_memory_11_s1_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (instruction_memory_11_s1_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                     //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                       //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (91),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) instruction_memory_11_s1_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                             //       clk.clk
		.reset             (nios2_gen2_11_reset_reset_bridge_in_reset_reset),           // clk_reset.reset
		.in_data           (instruction_memory_11_s1_agent_rf_source_data),             //        in.data
		.in_valid          (instruction_memory_11_s1_agent_rf_source_valid),            //          .valid
		.in_ready          (instruction_memory_11_s1_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (instruction_memory_11_s1_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (instruction_memory_11_s1_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (instruction_memory_11_s1_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (instruction_memory_11_s1_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (instruction_memory_11_s1_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (instruction_memory_11_s1_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (instruction_memory_11_s1_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                     // (terminated)
		.csr_read          (1'b0),                                                      // (terminated)
		.csr_write         (1'b0),                                                      // (terminated)
		.csr_readdata      (),                                                          // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                      // (terminated)
		.almost_full_data  (),                                                          // (terminated)
		.almost_empty_data (),                                                          // (terminated)
		.in_empty          (1'b0),                                                      // (terminated)
		.out_empty         (),                                                          // (terminated)
		.in_error          (1'b0),                                                      // (terminated)
		.out_error         (),                                                          // (terminated)
		.in_channel        (1'b0),                                                      // (terminated)
		.out_channel       ()                                                           // (terminated)
	);

	adaptor2x2_mm_interconnect_1_router router (
		.sink_ready         (nios2_gen2_11_data_master_agent_cp_ready),         //      sink.ready
		.sink_valid         (nios2_gen2_11_data_master_agent_cp_valid),         //          .valid
		.sink_data          (nios2_gen2_11_data_master_agent_cp_data),          //          .data
		.sink_startofpacket (nios2_gen2_11_data_master_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios2_gen2_11_data_master_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                    //       clk.clk
		.reset              (nios2_gen2_11_reset_reset_bridge_in_reset_reset),  // clk_reset.reset
		.src_ready          (router_src_ready),                                 //       src.ready
		.src_valid          (router_src_valid),                                 //          .valid
		.src_data           (router_src_data),                                  //          .data
		.src_channel        (router_src_channel),                               //          .channel
		.src_startofpacket  (router_src_startofpacket),                         //          .startofpacket
		.src_endofpacket    (router_src_endofpacket)                            //          .endofpacket
	);

	adaptor2x2_mm_interconnect_0_router_001 router_001 (
		.sink_ready         (nios2_gen2_11_instruction_master_agent_cp_ready),         //      sink.ready
		.sink_valid         (nios2_gen2_11_instruction_master_agent_cp_valid),         //          .valid
		.sink_data          (nios2_gen2_11_instruction_master_agent_cp_data),          //          .data
		.sink_startofpacket (nios2_gen2_11_instruction_master_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios2_gen2_11_instruction_master_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                           //       clk.clk
		.reset              (nios2_gen2_11_reset_reset_bridge_in_reset_reset),         // clk_reset.reset
		.src_ready          (router_001_src_ready),                                    //       src.ready
		.src_valid          (router_001_src_valid),                                    //          .valid
		.src_data           (router_001_src_data),                                     //          .data
		.src_channel        (router_001_src_channel),                                  //          .channel
		.src_startofpacket  (router_001_src_startofpacket),                            //          .startofpacket
		.src_endofpacket    (router_001_src_endofpacket)                               //          .endofpacket
	);

	adaptor2x2_mm_interconnect_0_router_002 router_002 (
		.sink_ready         (adaptor_2x2_0_input_11_agent_rp_ready),           //      sink.ready
		.sink_valid         (adaptor_2x2_0_input_11_agent_rp_valid),           //          .valid
		.sink_data          (adaptor_2x2_0_input_11_agent_rp_data),            //          .data
		.sink_startofpacket (adaptor_2x2_0_input_11_agent_rp_startofpacket),   //          .startofpacket
		.sink_endofpacket   (adaptor_2x2_0_input_11_agent_rp_endofpacket),     //          .endofpacket
		.clk                (clk_0_clk_clk),                                   //       clk.clk
		.reset              (nios2_gen2_11_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_002_src_ready),                            //       src.ready
		.src_valid          (router_002_src_valid),                            //          .valid
		.src_data           (router_002_src_data),                             //          .data
		.src_channel        (router_002_src_channel),                          //          .channel
		.src_startofpacket  (router_002_src_startofpacket),                    //          .startofpacket
		.src_endofpacket    (router_002_src_endofpacket)                       //          .endofpacket
	);

	adaptor2x2_mm_interconnect_0_router_002 router_003 (
		.sink_ready         (adaptor_2x2_0_output_11_agent_rp_ready),          //      sink.ready
		.sink_valid         (adaptor_2x2_0_output_11_agent_rp_valid),          //          .valid
		.sink_data          (adaptor_2x2_0_output_11_agent_rp_data),           //          .data
		.sink_startofpacket (adaptor_2x2_0_output_11_agent_rp_startofpacket),  //          .startofpacket
		.sink_endofpacket   (adaptor_2x2_0_output_11_agent_rp_endofpacket),    //          .endofpacket
		.clk                (clk_0_clk_clk),                                   //       clk.clk
		.reset              (nios2_gen2_11_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_003_src_ready),                            //       src.ready
		.src_valid          (router_003_src_valid),                            //          .valid
		.src_data           (router_003_src_data),                             //          .data
		.src_channel        (router_003_src_channel),                          //          .channel
		.src_startofpacket  (router_003_src_startofpacket),                    //          .startofpacket
		.src_endofpacket    (router_003_src_endofpacket)                       //          .endofpacket
	);

	adaptor2x2_mm_interconnect_0_router_004 router_004 (
		.sink_ready         (jtag_uart_11_avalon_jtag_slave_agent_rp_ready),         //      sink.ready
		.sink_valid         (jtag_uart_11_avalon_jtag_slave_agent_rp_valid),         //          .valid
		.sink_data          (jtag_uart_11_avalon_jtag_slave_agent_rp_data),          //          .data
		.sink_startofpacket (jtag_uart_11_avalon_jtag_slave_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (jtag_uart_11_avalon_jtag_slave_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                         //       clk.clk
		.reset              (nios2_gen2_11_reset_reset_bridge_in_reset_reset),       // clk_reset.reset
		.src_ready          (router_004_src_ready),                                  //       src.ready
		.src_valid          (router_004_src_valid),                                  //          .valid
		.src_data           (router_004_src_data),                                   //          .data
		.src_channel        (router_004_src_channel),                                //          .channel
		.src_startofpacket  (router_004_src_startofpacket),                          //          .startofpacket
		.src_endofpacket    (router_004_src_endofpacket)                             //          .endofpacket
	);

	adaptor2x2_mm_interconnect_0_router_005 router_005 (
		.sink_ready         (nios2_gen2_11_debug_mem_slave_agent_rp_ready),         //      sink.ready
		.sink_valid         (nios2_gen2_11_debug_mem_slave_agent_rp_valid),         //          .valid
		.sink_data          (nios2_gen2_11_debug_mem_slave_agent_rp_data),          //          .data
		.sink_startofpacket (nios2_gen2_11_debug_mem_slave_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (nios2_gen2_11_debug_mem_slave_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                        //       clk.clk
		.reset              (nios2_gen2_11_reset_reset_bridge_in_reset_reset),      // clk_reset.reset
		.src_ready          (router_005_src_ready),                                 //       src.ready
		.src_valid          (router_005_src_valid),                                 //          .valid
		.src_data           (router_005_src_data),                                  //          .data
		.src_channel        (router_005_src_channel),                               //          .channel
		.src_startofpacket  (router_005_src_startofpacket),                         //          .startofpacket
		.src_endofpacket    (router_005_src_endofpacket)                            //          .endofpacket
	);

	adaptor2x2_mm_interconnect_0_router_004 router_006 (
		.sink_ready         (data_memory_11_s1_agent_rp_ready),                //      sink.ready
		.sink_valid         (data_memory_11_s1_agent_rp_valid),                //          .valid
		.sink_data          (data_memory_11_s1_agent_rp_data),                 //          .data
		.sink_startofpacket (data_memory_11_s1_agent_rp_startofpacket),        //          .startofpacket
		.sink_endofpacket   (data_memory_11_s1_agent_rp_endofpacket),          //          .endofpacket
		.clk                (clk_0_clk_clk),                                   //       clk.clk
		.reset              (nios2_gen2_11_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_006_src_ready),                            //       src.ready
		.src_valid          (router_006_src_valid),                            //          .valid
		.src_data           (router_006_src_data),                             //          .data
		.src_channel        (router_006_src_channel),                          //          .channel
		.src_startofpacket  (router_006_src_startofpacket),                    //          .startofpacket
		.src_endofpacket    (router_006_src_endofpacket)                       //          .endofpacket
	);

	adaptor2x2_mm_interconnect_0_router_007 router_007 (
		.sink_ready         (instruction_memory_11_s1_agent_rp_ready),         //      sink.ready
		.sink_valid         (instruction_memory_11_s1_agent_rp_valid),         //          .valid
		.sink_data          (instruction_memory_11_s1_agent_rp_data),          //          .data
		.sink_startofpacket (instruction_memory_11_s1_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (instruction_memory_11_s1_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                   //       clk.clk
		.reset              (nios2_gen2_11_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_007_src_ready),                            //       src.ready
		.src_valid          (router_007_src_valid),                            //          .valid
		.src_data           (router_007_src_data),                             //          .data
		.src_channel        (router_007_src_channel),                          //          .channel
		.src_startofpacket  (router_007_src_startofpacket),                    //          .startofpacket
		.src_endofpacket    (router_007_src_endofpacket)                       //          .endofpacket
	);

	altera_merlin_burst_adapter #(
		.PKT_ADDR_H                (22),
		.PKT_ADDR_L                (9),
		.PKT_BEGIN_BURST           (42),
		.PKT_BYTE_CNT_H            (31),
		.PKT_BYTE_CNT_L            (29),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_BURST_SIZE_H          (37),
		.PKT_BURST_SIZE_L          (35),
		.PKT_BURST_TYPE_H          (39),
		.PKT_BURST_TYPE_L          (38),
		.PKT_BURSTWRAP_H           (34),
		.PKT_BURSTWRAP_L           (32),
		.PKT_TRANS_COMPRESSED_READ (23),
		.PKT_TRANS_WRITE           (25),
		.PKT_TRANS_READ            (26),
		.OUT_NARROW_SIZE           (0),
		.IN_NARROW_SIZE            (0),
		.OUT_FIXED                 (0),
		.OUT_COMPLETE_WRAP         (0),
		.ST_DATA_W                 (63),
		.ST_CHANNEL_W              (6),
		.OUT_BYTE_CNT_H            (29),
		.OUT_BURSTWRAP_H           (34),
		.COMPRESSED_READ_SUPPORT   (0),
		.BYTEENABLE_SYNTHESIS      (1),
		.PIPE_INPUTS               (0),
		.NO_WRAP_SUPPORT           (0),
		.INCOMPLETE_WRAP_SUPPORT   (0),
		.BURSTWRAP_CONST_MASK      (7),
		.BURSTWRAP_CONST_VALUE     (7),
		.ADAPTER_VERSION           ("13.1")
	) adaptor_2x2_0_input_11_burst_adapter (
		.clk                   (clk_0_clk_clk),                                              //       cr0.clk
		.reset                 (nios2_gen2_11_reset_reset_bridge_in_reset_reset),            // cr0_reset.reset
		.sink0_valid           (adaptor_2x2_0_input_11_cmd_width_adapter_src_valid),         //     sink0.valid
		.sink0_data            (adaptor_2x2_0_input_11_cmd_width_adapter_src_data),          //          .data
		.sink0_channel         (adaptor_2x2_0_input_11_cmd_width_adapter_src_channel),       //          .channel
		.sink0_startofpacket   (adaptor_2x2_0_input_11_cmd_width_adapter_src_startofpacket), //          .startofpacket
		.sink0_endofpacket     (adaptor_2x2_0_input_11_cmd_width_adapter_src_endofpacket),   //          .endofpacket
		.sink0_ready           (adaptor_2x2_0_input_11_cmd_width_adapter_src_ready),         //          .ready
		.source0_valid         (adaptor_2x2_0_input_11_burst_adapter_source0_valid),         //   source0.valid
		.source0_data          (adaptor_2x2_0_input_11_burst_adapter_source0_data),          //          .data
		.source0_channel       (adaptor_2x2_0_input_11_burst_adapter_source0_channel),       //          .channel
		.source0_startofpacket (adaptor_2x2_0_input_11_burst_adapter_source0_startofpacket), //          .startofpacket
		.source0_endofpacket   (adaptor_2x2_0_input_11_burst_adapter_source0_endofpacket),   //          .endofpacket
		.source0_ready         (adaptor_2x2_0_input_11_burst_adapter_source0_ready)          //          .ready
	);

	altera_merlin_burst_adapter #(
		.PKT_ADDR_H                (22),
		.PKT_ADDR_L                (9),
		.PKT_BEGIN_BURST           (42),
		.PKT_BYTE_CNT_H            (31),
		.PKT_BYTE_CNT_L            (29),
		.PKT_BYTEEN_H              (8),
		.PKT_BYTEEN_L              (8),
		.PKT_BURST_SIZE_H          (37),
		.PKT_BURST_SIZE_L          (35),
		.PKT_BURST_TYPE_H          (39),
		.PKT_BURST_TYPE_L          (38),
		.PKT_BURSTWRAP_H           (34),
		.PKT_BURSTWRAP_L           (32),
		.PKT_TRANS_COMPRESSED_READ (23),
		.PKT_TRANS_WRITE           (25),
		.PKT_TRANS_READ            (26),
		.OUT_NARROW_SIZE           (0),
		.IN_NARROW_SIZE            (0),
		.OUT_FIXED                 (0),
		.OUT_COMPLETE_WRAP         (0),
		.ST_DATA_W                 (63),
		.ST_CHANNEL_W              (6),
		.OUT_BYTE_CNT_H            (29),
		.OUT_BURSTWRAP_H           (34),
		.COMPRESSED_READ_SUPPORT   (0),
		.BYTEENABLE_SYNTHESIS      (1),
		.PIPE_INPUTS               (0),
		.NO_WRAP_SUPPORT           (0),
		.INCOMPLETE_WRAP_SUPPORT   (0),
		.BURSTWRAP_CONST_MASK      (7),
		.BURSTWRAP_CONST_VALUE     (7),
		.ADAPTER_VERSION           ("13.1")
	) adaptor_2x2_0_output_11_burst_adapter (
		.clk                   (clk_0_clk_clk),                                               //       cr0.clk
		.reset                 (nios2_gen2_11_reset_reset_bridge_in_reset_reset),             // cr0_reset.reset
		.sink0_valid           (adaptor_2x2_0_output_11_cmd_width_adapter_src_valid),         //     sink0.valid
		.sink0_data            (adaptor_2x2_0_output_11_cmd_width_adapter_src_data),          //          .data
		.sink0_channel         (adaptor_2x2_0_output_11_cmd_width_adapter_src_channel),       //          .channel
		.sink0_startofpacket   (adaptor_2x2_0_output_11_cmd_width_adapter_src_startofpacket), //          .startofpacket
		.sink0_endofpacket     (adaptor_2x2_0_output_11_cmd_width_adapter_src_endofpacket),   //          .endofpacket
		.sink0_ready           (adaptor_2x2_0_output_11_cmd_width_adapter_src_ready),         //          .ready
		.source0_valid         (adaptor_2x2_0_output_11_burst_adapter_source0_valid),         //   source0.valid
		.source0_data          (adaptor_2x2_0_output_11_burst_adapter_source0_data),          //          .data
		.source0_channel       (adaptor_2x2_0_output_11_burst_adapter_source0_channel),       //          .channel
		.source0_startofpacket (adaptor_2x2_0_output_11_burst_adapter_source0_startofpacket), //          .startofpacket
		.source0_endofpacket   (adaptor_2x2_0_output_11_burst_adapter_source0_endofpacket),   //          .endofpacket
		.source0_ready         (adaptor_2x2_0_output_11_burst_adapter_source0_ready)          //          .ready
	);

	adaptor2x2_mm_interconnect_0_cmd_demux cmd_demux (
		.clk                (clk_0_clk_clk),                                   //       clk.clk
		.reset              (nios2_gen2_11_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_src_ready),                                //      sink.ready
		.sink_channel       (router_src_channel),                              //          .channel
		.sink_data          (router_src_data),                                 //          .data
		.sink_startofpacket (router_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (router_src_endofpacket),                          //          .endofpacket
		.sink_valid         (router_src_valid),                                //          .valid
		.src0_ready         (cmd_demux_src0_ready),                            //      src0.ready
		.src0_valid         (cmd_demux_src0_valid),                            //          .valid
		.src0_data          (cmd_demux_src0_data),                             //          .data
		.src0_channel       (cmd_demux_src0_channel),                          //          .channel
		.src0_startofpacket (cmd_demux_src0_startofpacket),                    //          .startofpacket
		.src0_endofpacket   (cmd_demux_src0_endofpacket),                      //          .endofpacket
		.src1_ready         (cmd_demux_src1_ready),                            //      src1.ready
		.src1_valid         (cmd_demux_src1_valid),                            //          .valid
		.src1_data          (cmd_demux_src1_data),                             //          .data
		.src1_channel       (cmd_demux_src1_channel),                          //          .channel
		.src1_startofpacket (cmd_demux_src1_startofpacket),                    //          .startofpacket
		.src1_endofpacket   (cmd_demux_src1_endofpacket),                      //          .endofpacket
		.src2_ready         (cmd_demux_src2_ready),                            //      src2.ready
		.src2_valid         (cmd_demux_src2_valid),                            //          .valid
		.src2_data          (cmd_demux_src2_data),                             //          .data
		.src2_channel       (cmd_demux_src2_channel),                          //          .channel
		.src2_startofpacket (cmd_demux_src2_startofpacket),                    //          .startofpacket
		.src2_endofpacket   (cmd_demux_src2_endofpacket),                      //          .endofpacket
		.src3_ready         (cmd_demux_src3_ready),                            //      src3.ready
		.src3_valid         (cmd_demux_src3_valid),                            //          .valid
		.src3_data          (cmd_demux_src3_data),                             //          .data
		.src3_channel       (cmd_demux_src3_channel),                          //          .channel
		.src3_startofpacket (cmd_demux_src3_startofpacket),                    //          .startofpacket
		.src3_endofpacket   (cmd_demux_src3_endofpacket),                      //          .endofpacket
		.src4_ready         (cmd_demux_src4_ready),                            //      src4.ready
		.src4_valid         (cmd_demux_src4_valid),                            //          .valid
		.src4_data          (cmd_demux_src4_data),                             //          .data
		.src4_channel       (cmd_demux_src4_channel),                          //          .channel
		.src4_startofpacket (cmd_demux_src4_startofpacket),                    //          .startofpacket
		.src4_endofpacket   (cmd_demux_src4_endofpacket)                       //          .endofpacket
	);

	adaptor2x2_mm_interconnect_0_cmd_demux_001 cmd_demux_001 (
		.clk                (clk_0_clk_clk),                                   //       clk.clk
		.reset              (nios2_gen2_11_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_001_src_ready),                            //      sink.ready
		.sink_channel       (router_001_src_channel),                          //          .channel
		.sink_data          (router_001_src_data),                             //          .data
		.sink_startofpacket (router_001_src_startofpacket),                    //          .startofpacket
		.sink_endofpacket   (router_001_src_endofpacket),                      //          .endofpacket
		.sink_valid         (router_001_src_valid),                            //          .valid
		.src0_ready         (cmd_demux_001_src0_ready),                        //      src0.ready
		.src0_valid         (cmd_demux_001_src0_valid),                        //          .valid
		.src0_data          (cmd_demux_001_src0_data),                         //          .data
		.src0_channel       (cmd_demux_001_src0_channel),                      //          .channel
		.src0_startofpacket (cmd_demux_001_src0_startofpacket),                //          .startofpacket
		.src0_endofpacket   (cmd_demux_001_src0_endofpacket),                  //          .endofpacket
		.src1_ready         (cmd_demux_001_src1_ready),                        //      src1.ready
		.src1_valid         (cmd_demux_001_src1_valid),                        //          .valid
		.src1_data          (cmd_demux_001_src1_data),                         //          .data
		.src1_channel       (cmd_demux_001_src1_channel),                      //          .channel
		.src1_startofpacket (cmd_demux_001_src1_startofpacket),                //          .startofpacket
		.src1_endofpacket   (cmd_demux_001_src1_endofpacket)                   //          .endofpacket
	);

	adaptor2x2_mm_interconnect_0_cmd_mux cmd_mux (
		.clk                 (clk_0_clk_clk),                                   //       clk.clk
		.reset               (nios2_gen2_11_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_src_ready),                               //       src.ready
		.src_valid           (cmd_mux_src_valid),                               //          .valid
		.src_data            (cmd_mux_src_data),                                //          .data
		.src_channel         (cmd_mux_src_channel),                             //          .channel
		.src_startofpacket   (cmd_mux_src_startofpacket),                       //          .startofpacket
		.src_endofpacket     (cmd_mux_src_endofpacket),                         //          .endofpacket
		.sink0_ready         (cmd_demux_src0_ready),                            //     sink0.ready
		.sink0_valid         (cmd_demux_src0_valid),                            //          .valid
		.sink0_channel       (cmd_demux_src0_channel),                          //          .channel
		.sink0_data          (cmd_demux_src0_data),                             //          .data
		.sink0_startofpacket (cmd_demux_src0_startofpacket),                    //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src0_endofpacket)                       //          .endofpacket
	);

	adaptor2x2_mm_interconnect_0_cmd_mux cmd_mux_001 (
		.clk                 (clk_0_clk_clk),                                   //       clk.clk
		.reset               (nios2_gen2_11_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_001_src_ready),                           //       src.ready
		.src_valid           (cmd_mux_001_src_valid),                           //          .valid
		.src_data            (cmd_mux_001_src_data),                            //          .data
		.src_channel         (cmd_mux_001_src_channel),                         //          .channel
		.src_startofpacket   (cmd_mux_001_src_startofpacket),                   //          .startofpacket
		.src_endofpacket     (cmd_mux_001_src_endofpacket),                     //          .endofpacket
		.sink0_ready         (cmd_demux_src1_ready),                            //     sink0.ready
		.sink0_valid         (cmd_demux_src1_valid),                            //          .valid
		.sink0_channel       (cmd_demux_src1_channel),                          //          .channel
		.sink0_data          (cmd_demux_src1_data),                             //          .data
		.sink0_startofpacket (cmd_demux_src1_startofpacket),                    //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src1_endofpacket)                       //          .endofpacket
	);

	adaptor2x2_mm_interconnect_0_cmd_mux cmd_mux_002 (
		.clk                 (clk_0_clk_clk),                                   //       clk.clk
		.reset               (nios2_gen2_11_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_002_src_ready),                           //       src.ready
		.src_valid           (cmd_mux_002_src_valid),                           //          .valid
		.src_data            (cmd_mux_002_src_data),                            //          .data
		.src_channel         (cmd_mux_002_src_channel),                         //          .channel
		.src_startofpacket   (cmd_mux_002_src_startofpacket),                   //          .startofpacket
		.src_endofpacket     (cmd_mux_002_src_endofpacket),                     //          .endofpacket
		.sink0_ready         (cmd_demux_src2_ready),                            //     sink0.ready
		.sink0_valid         (cmd_demux_src2_valid),                            //          .valid
		.sink0_channel       (cmd_demux_src2_channel),                          //          .channel
		.sink0_data          (cmd_demux_src2_data),                             //          .data
		.sink0_startofpacket (cmd_demux_src2_startofpacket),                    //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src2_endofpacket)                       //          .endofpacket
	);

	adaptor2x2_mm_interconnect_0_cmd_mux_003 cmd_mux_003 (
		.clk                 (clk_0_clk_clk),                                   //       clk.clk
		.reset               (nios2_gen2_11_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_003_src_ready),                           //       src.ready
		.src_valid           (cmd_mux_003_src_valid),                           //          .valid
		.src_data            (cmd_mux_003_src_data),                            //          .data
		.src_channel         (cmd_mux_003_src_channel),                         //          .channel
		.src_startofpacket   (cmd_mux_003_src_startofpacket),                   //          .startofpacket
		.src_endofpacket     (cmd_mux_003_src_endofpacket),                     //          .endofpacket
		.sink0_ready         (cmd_demux_src3_ready),                            //     sink0.ready
		.sink0_valid         (cmd_demux_src3_valid),                            //          .valid
		.sink0_channel       (cmd_demux_src3_channel),                          //          .channel
		.sink0_data          (cmd_demux_src3_data),                             //          .data
		.sink0_startofpacket (cmd_demux_src3_startofpacket),                    //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src3_endofpacket),                      //          .endofpacket
		.sink1_ready         (cmd_demux_001_src0_ready),                        //     sink1.ready
		.sink1_valid         (cmd_demux_001_src0_valid),                        //          .valid
		.sink1_channel       (cmd_demux_001_src0_channel),                      //          .channel
		.sink1_data          (cmd_demux_001_src0_data),                         //          .data
		.sink1_startofpacket (cmd_demux_001_src0_startofpacket),                //          .startofpacket
		.sink1_endofpacket   (cmd_demux_001_src0_endofpacket)                   //          .endofpacket
	);

	adaptor2x2_mm_interconnect_0_cmd_mux cmd_mux_004 (
		.clk                 (clk_0_clk_clk),                                   //       clk.clk
		.reset               (nios2_gen2_11_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_004_src_ready),                           //       src.ready
		.src_valid           (cmd_mux_004_src_valid),                           //          .valid
		.src_data            (cmd_mux_004_src_data),                            //          .data
		.src_channel         (cmd_mux_004_src_channel),                         //          .channel
		.src_startofpacket   (cmd_mux_004_src_startofpacket),                   //          .startofpacket
		.src_endofpacket     (cmd_mux_004_src_endofpacket),                     //          .endofpacket
		.sink0_ready         (cmd_demux_src4_ready),                            //     sink0.ready
		.sink0_valid         (cmd_demux_src4_valid),                            //          .valid
		.sink0_channel       (cmd_demux_src4_channel),                          //          .channel
		.sink0_data          (cmd_demux_src4_data),                             //          .data
		.sink0_startofpacket (cmd_demux_src4_startofpacket),                    //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src4_endofpacket)                       //          .endofpacket
	);

	adaptor2x2_mm_interconnect_0_cmd_mux cmd_mux_005 (
		.clk                 (clk_0_clk_clk),                                   //       clk.clk
		.reset               (nios2_gen2_11_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_005_src_ready),                           //       src.ready
		.src_valid           (cmd_mux_005_src_valid),                           //          .valid
		.src_data            (cmd_mux_005_src_data),                            //          .data
		.src_channel         (cmd_mux_005_src_channel),                         //          .channel
		.src_startofpacket   (cmd_mux_005_src_startofpacket),                   //          .startofpacket
		.src_endofpacket     (cmd_mux_005_src_endofpacket),                     //          .endofpacket
		.sink0_ready         (cmd_demux_001_src1_ready),                        //     sink0.ready
		.sink0_valid         (cmd_demux_001_src1_valid),                        //          .valid
		.sink0_channel       (cmd_demux_001_src1_channel),                      //          .channel
		.sink0_data          (cmd_demux_001_src1_data),                         //          .data
		.sink0_startofpacket (cmd_demux_001_src1_startofpacket),                //          .startofpacket
		.sink0_endofpacket   (cmd_demux_001_src1_endofpacket)                   //          .endofpacket
	);

	adaptor2x2_mm_interconnect_0_rsp_demux rsp_demux (
		.clk                (clk_0_clk_clk),                                              //       clk.clk
		.reset              (nios2_gen2_11_reset_reset_bridge_in_reset_reset),            // clk_reset.reset
		.sink_ready         (adaptor_2x2_0_input_11_rsp_width_adapter_src_ready),         //      sink.ready
		.sink_channel       (adaptor_2x2_0_input_11_rsp_width_adapter_src_channel),       //          .channel
		.sink_data          (adaptor_2x2_0_input_11_rsp_width_adapter_src_data),          //          .data
		.sink_startofpacket (adaptor_2x2_0_input_11_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.sink_endofpacket   (adaptor_2x2_0_input_11_rsp_width_adapter_src_endofpacket),   //          .endofpacket
		.sink_valid         (adaptor_2x2_0_input_11_rsp_width_adapter_src_valid),         //          .valid
		.src0_ready         (rsp_demux_src0_ready),                                       //      src0.ready
		.src0_valid         (rsp_demux_src0_valid),                                       //          .valid
		.src0_data          (rsp_demux_src0_data),                                        //          .data
		.src0_channel       (rsp_demux_src0_channel),                                     //          .channel
		.src0_startofpacket (rsp_demux_src0_startofpacket),                               //          .startofpacket
		.src0_endofpacket   (rsp_demux_src0_endofpacket)                                  //          .endofpacket
	);

	adaptor2x2_mm_interconnect_0_rsp_demux rsp_demux_001 (
		.clk                (clk_0_clk_clk),                                               //       clk.clk
		.reset              (nios2_gen2_11_reset_reset_bridge_in_reset_reset),             // clk_reset.reset
		.sink_ready         (adaptor_2x2_0_output_11_rsp_width_adapter_src_ready),         //      sink.ready
		.sink_channel       (adaptor_2x2_0_output_11_rsp_width_adapter_src_channel),       //          .channel
		.sink_data          (adaptor_2x2_0_output_11_rsp_width_adapter_src_data),          //          .data
		.sink_startofpacket (adaptor_2x2_0_output_11_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.sink_endofpacket   (adaptor_2x2_0_output_11_rsp_width_adapter_src_endofpacket),   //          .endofpacket
		.sink_valid         (adaptor_2x2_0_output_11_rsp_width_adapter_src_valid),         //          .valid
		.src0_ready         (rsp_demux_001_src0_ready),                                    //      src0.ready
		.src0_valid         (rsp_demux_001_src0_valid),                                    //          .valid
		.src0_data          (rsp_demux_001_src0_data),                                     //          .data
		.src0_channel       (rsp_demux_001_src0_channel),                                  //          .channel
		.src0_startofpacket (rsp_demux_001_src0_startofpacket),                            //          .startofpacket
		.src0_endofpacket   (rsp_demux_001_src0_endofpacket)                               //          .endofpacket
	);

	adaptor2x2_mm_interconnect_0_rsp_demux rsp_demux_002 (
		.clk                (clk_0_clk_clk),                                   //       clk.clk
		.reset              (nios2_gen2_11_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_004_src_ready),                            //      sink.ready
		.sink_channel       (router_004_src_channel),                          //          .channel
		.sink_data          (router_004_src_data),                             //          .data
		.sink_startofpacket (router_004_src_startofpacket),                    //          .startofpacket
		.sink_endofpacket   (router_004_src_endofpacket),                      //          .endofpacket
		.sink_valid         (router_004_src_valid),                            //          .valid
		.src0_ready         (rsp_demux_002_src0_ready),                        //      src0.ready
		.src0_valid         (rsp_demux_002_src0_valid),                        //          .valid
		.src0_data          (rsp_demux_002_src0_data),                         //          .data
		.src0_channel       (rsp_demux_002_src0_channel),                      //          .channel
		.src0_startofpacket (rsp_demux_002_src0_startofpacket),                //          .startofpacket
		.src0_endofpacket   (rsp_demux_002_src0_endofpacket)                   //          .endofpacket
	);

	adaptor2x2_mm_interconnect_0_cmd_demux_001 rsp_demux_003 (
		.clk                (clk_0_clk_clk),                                   //       clk.clk
		.reset              (nios2_gen2_11_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_005_src_ready),                            //      sink.ready
		.sink_channel       (router_005_src_channel),                          //          .channel
		.sink_data          (router_005_src_data),                             //          .data
		.sink_startofpacket (router_005_src_startofpacket),                    //          .startofpacket
		.sink_endofpacket   (router_005_src_endofpacket),                      //          .endofpacket
		.sink_valid         (router_005_src_valid),                            //          .valid
		.src0_ready         (rsp_demux_003_src0_ready),                        //      src0.ready
		.src0_valid         (rsp_demux_003_src0_valid),                        //          .valid
		.src0_data          (rsp_demux_003_src0_data),                         //          .data
		.src0_channel       (rsp_demux_003_src0_channel),                      //          .channel
		.src0_startofpacket (rsp_demux_003_src0_startofpacket),                //          .startofpacket
		.src0_endofpacket   (rsp_demux_003_src0_endofpacket),                  //          .endofpacket
		.src1_ready         (rsp_demux_003_src1_ready),                        //      src1.ready
		.src1_valid         (rsp_demux_003_src1_valid),                        //          .valid
		.src1_data          (rsp_demux_003_src1_data),                         //          .data
		.src1_channel       (rsp_demux_003_src1_channel),                      //          .channel
		.src1_startofpacket (rsp_demux_003_src1_startofpacket),                //          .startofpacket
		.src1_endofpacket   (rsp_demux_003_src1_endofpacket)                   //          .endofpacket
	);

	adaptor2x2_mm_interconnect_0_rsp_demux rsp_demux_004 (
		.clk                (clk_0_clk_clk),                                   //       clk.clk
		.reset              (nios2_gen2_11_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_006_src_ready),                            //      sink.ready
		.sink_channel       (router_006_src_channel),                          //          .channel
		.sink_data          (router_006_src_data),                             //          .data
		.sink_startofpacket (router_006_src_startofpacket),                    //          .startofpacket
		.sink_endofpacket   (router_006_src_endofpacket),                      //          .endofpacket
		.sink_valid         (router_006_src_valid),                            //          .valid
		.src0_ready         (rsp_demux_004_src0_ready),                        //      src0.ready
		.src0_valid         (rsp_demux_004_src0_valid),                        //          .valid
		.src0_data          (rsp_demux_004_src0_data),                         //          .data
		.src0_channel       (rsp_demux_004_src0_channel),                      //          .channel
		.src0_startofpacket (rsp_demux_004_src0_startofpacket),                //          .startofpacket
		.src0_endofpacket   (rsp_demux_004_src0_endofpacket)                   //          .endofpacket
	);

	adaptor2x2_mm_interconnect_0_rsp_demux rsp_demux_005 (
		.clk                (clk_0_clk_clk),                                   //       clk.clk
		.reset              (nios2_gen2_11_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_007_src_ready),                            //      sink.ready
		.sink_channel       (router_007_src_channel),                          //          .channel
		.sink_data          (router_007_src_data),                             //          .data
		.sink_startofpacket (router_007_src_startofpacket),                    //          .startofpacket
		.sink_endofpacket   (router_007_src_endofpacket),                      //          .endofpacket
		.sink_valid         (router_007_src_valid),                            //          .valid
		.src0_ready         (rsp_demux_005_src0_ready),                        //      src0.ready
		.src0_valid         (rsp_demux_005_src0_valid),                        //          .valid
		.src0_data          (rsp_demux_005_src0_data),                         //          .data
		.src0_channel       (rsp_demux_005_src0_channel),                      //          .channel
		.src0_startofpacket (rsp_demux_005_src0_startofpacket),                //          .startofpacket
		.src0_endofpacket   (rsp_demux_005_src0_endofpacket)                   //          .endofpacket
	);

	adaptor2x2_mm_interconnect_0_rsp_mux rsp_mux (
		.clk                 (clk_0_clk_clk),                                   //       clk.clk
		.reset               (nios2_gen2_11_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_src_ready),                               //       src.ready
		.src_valid           (rsp_mux_src_valid),                               //          .valid
		.src_data            (rsp_mux_src_data),                                //          .data
		.src_channel         (rsp_mux_src_channel),                             //          .channel
		.src_startofpacket   (rsp_mux_src_startofpacket),                       //          .startofpacket
		.src_endofpacket     (rsp_mux_src_endofpacket),                         //          .endofpacket
		.sink0_ready         (rsp_demux_src0_ready),                            //     sink0.ready
		.sink0_valid         (rsp_demux_src0_valid),                            //          .valid
		.sink0_channel       (rsp_demux_src0_channel),                          //          .channel
		.sink0_data          (rsp_demux_src0_data),                             //          .data
		.sink0_startofpacket (rsp_demux_src0_startofpacket),                    //          .startofpacket
		.sink0_endofpacket   (rsp_demux_src0_endofpacket),                      //          .endofpacket
		.sink1_ready         (rsp_demux_001_src0_ready),                        //     sink1.ready
		.sink1_valid         (rsp_demux_001_src0_valid),                        //          .valid
		.sink1_channel       (rsp_demux_001_src0_channel),                      //          .channel
		.sink1_data          (rsp_demux_001_src0_data),                         //          .data
		.sink1_startofpacket (rsp_demux_001_src0_startofpacket),                //          .startofpacket
		.sink1_endofpacket   (rsp_demux_001_src0_endofpacket),                  //          .endofpacket
		.sink2_ready         (rsp_demux_002_src0_ready),                        //     sink2.ready
		.sink2_valid         (rsp_demux_002_src0_valid),                        //          .valid
		.sink2_channel       (rsp_demux_002_src0_channel),                      //          .channel
		.sink2_data          (rsp_demux_002_src0_data),                         //          .data
		.sink2_startofpacket (rsp_demux_002_src0_startofpacket),                //          .startofpacket
		.sink2_endofpacket   (rsp_demux_002_src0_endofpacket),                  //          .endofpacket
		.sink3_ready         (rsp_demux_003_src0_ready),                        //     sink3.ready
		.sink3_valid         (rsp_demux_003_src0_valid),                        //          .valid
		.sink3_channel       (rsp_demux_003_src0_channel),                      //          .channel
		.sink3_data          (rsp_demux_003_src0_data),                         //          .data
		.sink3_startofpacket (rsp_demux_003_src0_startofpacket),                //          .startofpacket
		.sink3_endofpacket   (rsp_demux_003_src0_endofpacket),                  //          .endofpacket
		.sink4_ready         (rsp_demux_004_src0_ready),                        //     sink4.ready
		.sink4_valid         (rsp_demux_004_src0_valid),                        //          .valid
		.sink4_channel       (rsp_demux_004_src0_channel),                      //          .channel
		.sink4_data          (rsp_demux_004_src0_data),                         //          .data
		.sink4_startofpacket (rsp_demux_004_src0_startofpacket),                //          .startofpacket
		.sink4_endofpacket   (rsp_demux_004_src0_endofpacket)                   //          .endofpacket
	);

	adaptor2x2_mm_interconnect_0_rsp_mux_001 rsp_mux_001 (
		.clk                 (clk_0_clk_clk),                                   //       clk.clk
		.reset               (nios2_gen2_11_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_001_src_ready),                           //       src.ready
		.src_valid           (rsp_mux_001_src_valid),                           //          .valid
		.src_data            (rsp_mux_001_src_data),                            //          .data
		.src_channel         (rsp_mux_001_src_channel),                         //          .channel
		.src_startofpacket   (rsp_mux_001_src_startofpacket),                   //          .startofpacket
		.src_endofpacket     (rsp_mux_001_src_endofpacket),                     //          .endofpacket
		.sink0_ready         (rsp_demux_003_src1_ready),                        //     sink0.ready
		.sink0_valid         (rsp_demux_003_src1_valid),                        //          .valid
		.sink0_channel       (rsp_demux_003_src1_channel),                      //          .channel
		.sink0_data          (rsp_demux_003_src1_data),                         //          .data
		.sink0_startofpacket (rsp_demux_003_src1_startofpacket),                //          .startofpacket
		.sink0_endofpacket   (rsp_demux_003_src1_endofpacket),                  //          .endofpacket
		.sink1_ready         (rsp_demux_005_src0_ready),                        //     sink1.ready
		.sink1_valid         (rsp_demux_005_src0_valid),                        //          .valid
		.sink1_channel       (rsp_demux_005_src0_channel),                      //          .channel
		.sink1_data          (rsp_demux_005_src0_data),                         //          .data
		.sink1_startofpacket (rsp_demux_005_src0_startofpacket),                //          .startofpacket
		.sink1_endofpacket   (rsp_demux_005_src0_endofpacket)                   //          .endofpacket
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (22),
		.IN_PKT_ADDR_L                 (9),
		.IN_PKT_DATA_H                 (7),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (8),
		.IN_PKT_BYTEEN_L               (8),
		.IN_PKT_BYTE_CNT_H             (31),
		.IN_PKT_BYTE_CNT_L             (29),
		.IN_PKT_TRANS_COMPRESSED_READ  (23),
		.IN_PKT_TRANS_WRITE            (25),
		.IN_PKT_BURSTWRAP_H            (34),
		.IN_PKT_BURSTWRAP_L            (32),
		.IN_PKT_BURST_SIZE_H           (37),
		.IN_PKT_BURST_SIZE_L           (35),
		.IN_PKT_RESPONSE_STATUS_H      (59),
		.IN_PKT_RESPONSE_STATUS_L      (58),
		.IN_PKT_TRANS_EXCLUSIVE        (28),
		.IN_PKT_BURST_TYPE_H           (39),
		.IN_PKT_BURST_TYPE_L           (38),
		.IN_PKT_ORI_BURST_SIZE_L       (60),
		.IN_PKT_ORI_BURST_SIZE_H       (62),
		.IN_ST_DATA_W                  (63),
		.OUT_PKT_ADDR_H                (49),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (58),
		.OUT_PKT_BYTE_CNT_L            (56),
		.OUT_PKT_TRANS_COMPRESSED_READ (50),
		.OUT_PKT_BURST_SIZE_H          (64),
		.OUT_PKT_BURST_SIZE_L          (62),
		.OUT_PKT_RESPONSE_STATUS_H     (86),
		.OUT_PKT_RESPONSE_STATUS_L     (85),
		.OUT_PKT_TRANS_EXCLUSIVE       (55),
		.OUT_PKT_BURST_TYPE_H          (66),
		.OUT_PKT_BURST_TYPE_L          (65),
		.OUT_PKT_ORI_BURST_SIZE_L      (87),
		.OUT_PKT_ORI_BURST_SIZE_H      (89),
		.OUT_ST_DATA_W                 (90),
		.ST_CHANNEL_W                  (6),
		.OPTIMIZE_FOR_RSP              (1),
		.RESPONSE_PATH                 (1),
		.CONSTANT_BURST_SIZE           (1),
		.PACKING                       (1),
		.ENABLE_ADDRESS_ALIGNMENT      (0)
	) adaptor_2x2_0_input_11_rsp_width_adapter (
		.clk                  (clk_0_clk_clk),                                              //       clk.clk
		.reset                (nios2_gen2_11_reset_reset_bridge_in_reset_reset),            // clk_reset.reset
		.in_valid             (router_002_src_valid),                                       //      sink.valid
		.in_channel           (router_002_src_channel),                                     //          .channel
		.in_startofpacket     (router_002_src_startofpacket),                               //          .startofpacket
		.in_endofpacket       (router_002_src_endofpacket),                                 //          .endofpacket
		.in_ready             (router_002_src_ready),                                       //          .ready
		.in_data              (router_002_src_data),                                        //          .data
		.out_endofpacket      (adaptor_2x2_0_input_11_rsp_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (adaptor_2x2_0_input_11_rsp_width_adapter_src_data),          //          .data
		.out_channel          (adaptor_2x2_0_input_11_rsp_width_adapter_src_channel),       //          .channel
		.out_valid            (adaptor_2x2_0_input_11_rsp_width_adapter_src_valid),         //          .valid
		.out_ready            (adaptor_2x2_0_input_11_rsp_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (adaptor_2x2_0_input_11_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                      // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (22),
		.IN_PKT_ADDR_L                 (9),
		.IN_PKT_DATA_H                 (7),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (8),
		.IN_PKT_BYTEEN_L               (8),
		.IN_PKT_BYTE_CNT_H             (31),
		.IN_PKT_BYTE_CNT_L             (29),
		.IN_PKT_TRANS_COMPRESSED_READ  (23),
		.IN_PKT_TRANS_WRITE            (25),
		.IN_PKT_BURSTWRAP_H            (34),
		.IN_PKT_BURSTWRAP_L            (32),
		.IN_PKT_BURST_SIZE_H           (37),
		.IN_PKT_BURST_SIZE_L           (35),
		.IN_PKT_RESPONSE_STATUS_H      (59),
		.IN_PKT_RESPONSE_STATUS_L      (58),
		.IN_PKT_TRANS_EXCLUSIVE        (28),
		.IN_PKT_BURST_TYPE_H           (39),
		.IN_PKT_BURST_TYPE_L           (38),
		.IN_PKT_ORI_BURST_SIZE_L       (60),
		.IN_PKT_ORI_BURST_SIZE_H       (62),
		.IN_ST_DATA_W                  (63),
		.OUT_PKT_ADDR_H                (49),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (58),
		.OUT_PKT_BYTE_CNT_L            (56),
		.OUT_PKT_TRANS_COMPRESSED_READ (50),
		.OUT_PKT_BURST_SIZE_H          (64),
		.OUT_PKT_BURST_SIZE_L          (62),
		.OUT_PKT_RESPONSE_STATUS_H     (86),
		.OUT_PKT_RESPONSE_STATUS_L     (85),
		.OUT_PKT_TRANS_EXCLUSIVE       (55),
		.OUT_PKT_BURST_TYPE_H          (66),
		.OUT_PKT_BURST_TYPE_L          (65),
		.OUT_PKT_ORI_BURST_SIZE_L      (87),
		.OUT_PKT_ORI_BURST_SIZE_H      (89),
		.OUT_ST_DATA_W                 (90),
		.ST_CHANNEL_W                  (6),
		.OPTIMIZE_FOR_RSP              (1),
		.RESPONSE_PATH                 (1),
		.CONSTANT_BURST_SIZE           (1),
		.PACKING                       (1),
		.ENABLE_ADDRESS_ALIGNMENT      (0)
	) adaptor_2x2_0_output_11_rsp_width_adapter (
		.clk                  (clk_0_clk_clk),                                               //       clk.clk
		.reset                (nios2_gen2_11_reset_reset_bridge_in_reset_reset),             // clk_reset.reset
		.in_valid             (router_003_src_valid),                                        //      sink.valid
		.in_channel           (router_003_src_channel),                                      //          .channel
		.in_startofpacket     (router_003_src_startofpacket),                                //          .startofpacket
		.in_endofpacket       (router_003_src_endofpacket),                                  //          .endofpacket
		.in_ready             (router_003_src_ready),                                        //          .ready
		.in_data              (router_003_src_data),                                         //          .data
		.out_endofpacket      (adaptor_2x2_0_output_11_rsp_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (adaptor_2x2_0_output_11_rsp_width_adapter_src_data),          //          .data
		.out_channel          (adaptor_2x2_0_output_11_rsp_width_adapter_src_channel),       //          .channel
		.out_valid            (adaptor_2x2_0_output_11_rsp_width_adapter_src_valid),         //          .valid
		.out_ready            (adaptor_2x2_0_output_11_rsp_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (adaptor_2x2_0_output_11_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                       // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (49),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (58),
		.IN_PKT_BYTE_CNT_L             (56),
		.IN_PKT_TRANS_COMPRESSED_READ  (50),
		.IN_PKT_TRANS_WRITE            (52),
		.IN_PKT_BURSTWRAP_H            (61),
		.IN_PKT_BURSTWRAP_L            (59),
		.IN_PKT_BURST_SIZE_H           (64),
		.IN_PKT_BURST_SIZE_L           (62),
		.IN_PKT_RESPONSE_STATUS_H      (86),
		.IN_PKT_RESPONSE_STATUS_L      (85),
		.IN_PKT_TRANS_EXCLUSIVE        (55),
		.IN_PKT_BURST_TYPE_H           (66),
		.IN_PKT_BURST_TYPE_L           (65),
		.IN_PKT_ORI_BURST_SIZE_L       (87),
		.IN_PKT_ORI_BURST_SIZE_H       (89),
		.IN_ST_DATA_W                  (90),
		.OUT_PKT_ADDR_H                (22),
		.OUT_PKT_ADDR_L                (9),
		.OUT_PKT_DATA_H                (7),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (8),
		.OUT_PKT_BYTEEN_L              (8),
		.OUT_PKT_BYTE_CNT_H            (31),
		.OUT_PKT_BYTE_CNT_L            (29),
		.OUT_PKT_TRANS_COMPRESSED_READ (23),
		.OUT_PKT_BURST_SIZE_H          (37),
		.OUT_PKT_BURST_SIZE_L          (35),
		.OUT_PKT_RESPONSE_STATUS_H     (59),
		.OUT_PKT_RESPONSE_STATUS_L     (58),
		.OUT_PKT_TRANS_EXCLUSIVE       (28),
		.OUT_PKT_BURST_TYPE_H          (39),
		.OUT_PKT_BURST_TYPE_L          (38),
		.OUT_PKT_ORI_BURST_SIZE_L      (60),
		.OUT_PKT_ORI_BURST_SIZE_H      (62),
		.OUT_ST_DATA_W                 (63),
		.ST_CHANNEL_W                  (6),
		.OPTIMIZE_FOR_RSP              (0),
		.RESPONSE_PATH                 (0),
		.CONSTANT_BURST_SIZE           (1),
		.PACKING                       (1),
		.ENABLE_ADDRESS_ALIGNMENT      (0)
	) adaptor_2x2_0_input_11_cmd_width_adapter (
		.clk                  (clk_0_clk_clk),                                              //       clk.clk
		.reset                (nios2_gen2_11_reset_reset_bridge_in_reset_reset),            // clk_reset.reset
		.in_valid             (cmd_mux_src_valid),                                          //      sink.valid
		.in_channel           (cmd_mux_src_channel),                                        //          .channel
		.in_startofpacket     (cmd_mux_src_startofpacket),                                  //          .startofpacket
		.in_endofpacket       (cmd_mux_src_endofpacket),                                    //          .endofpacket
		.in_ready             (cmd_mux_src_ready),                                          //          .ready
		.in_data              (cmd_mux_src_data),                                           //          .data
		.out_endofpacket      (adaptor_2x2_0_input_11_cmd_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (adaptor_2x2_0_input_11_cmd_width_adapter_src_data),          //          .data
		.out_channel          (adaptor_2x2_0_input_11_cmd_width_adapter_src_channel),       //          .channel
		.out_valid            (adaptor_2x2_0_input_11_cmd_width_adapter_src_valid),         //          .valid
		.out_ready            (adaptor_2x2_0_input_11_cmd_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (adaptor_2x2_0_input_11_cmd_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                      // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (49),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (58),
		.IN_PKT_BYTE_CNT_L             (56),
		.IN_PKT_TRANS_COMPRESSED_READ  (50),
		.IN_PKT_TRANS_WRITE            (52),
		.IN_PKT_BURSTWRAP_H            (61),
		.IN_PKT_BURSTWRAP_L            (59),
		.IN_PKT_BURST_SIZE_H           (64),
		.IN_PKT_BURST_SIZE_L           (62),
		.IN_PKT_RESPONSE_STATUS_H      (86),
		.IN_PKT_RESPONSE_STATUS_L      (85),
		.IN_PKT_TRANS_EXCLUSIVE        (55),
		.IN_PKT_BURST_TYPE_H           (66),
		.IN_PKT_BURST_TYPE_L           (65),
		.IN_PKT_ORI_BURST_SIZE_L       (87),
		.IN_PKT_ORI_BURST_SIZE_H       (89),
		.IN_ST_DATA_W                  (90),
		.OUT_PKT_ADDR_H                (22),
		.OUT_PKT_ADDR_L                (9),
		.OUT_PKT_DATA_H                (7),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (8),
		.OUT_PKT_BYTEEN_L              (8),
		.OUT_PKT_BYTE_CNT_H            (31),
		.OUT_PKT_BYTE_CNT_L            (29),
		.OUT_PKT_TRANS_COMPRESSED_READ (23),
		.OUT_PKT_BURST_SIZE_H          (37),
		.OUT_PKT_BURST_SIZE_L          (35),
		.OUT_PKT_RESPONSE_STATUS_H     (59),
		.OUT_PKT_RESPONSE_STATUS_L     (58),
		.OUT_PKT_TRANS_EXCLUSIVE       (28),
		.OUT_PKT_BURST_TYPE_H          (39),
		.OUT_PKT_BURST_TYPE_L          (38),
		.OUT_PKT_ORI_BURST_SIZE_L      (60),
		.OUT_PKT_ORI_BURST_SIZE_H      (62),
		.OUT_ST_DATA_W                 (63),
		.ST_CHANNEL_W                  (6),
		.OPTIMIZE_FOR_RSP              (0),
		.RESPONSE_PATH                 (0),
		.CONSTANT_BURST_SIZE           (1),
		.PACKING                       (1),
		.ENABLE_ADDRESS_ALIGNMENT      (0)
	) adaptor_2x2_0_output_11_cmd_width_adapter (
		.clk                  (clk_0_clk_clk),                                               //       clk.clk
		.reset                (nios2_gen2_11_reset_reset_bridge_in_reset_reset),             // clk_reset.reset
		.in_valid             (cmd_mux_001_src_valid),                                       //      sink.valid
		.in_channel           (cmd_mux_001_src_channel),                                     //          .channel
		.in_startofpacket     (cmd_mux_001_src_startofpacket),                               //          .startofpacket
		.in_endofpacket       (cmd_mux_001_src_endofpacket),                                 //          .endofpacket
		.in_ready             (cmd_mux_001_src_ready),                                       //          .ready
		.in_data              (cmd_mux_001_src_data),                                        //          .data
		.out_endofpacket      (adaptor_2x2_0_output_11_cmd_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (adaptor_2x2_0_output_11_cmd_width_adapter_src_data),          //          .data
		.out_channel          (adaptor_2x2_0_output_11_cmd_width_adapter_src_channel),       //          .channel
		.out_valid            (adaptor_2x2_0_output_11_cmd_width_adapter_src_valid),         //          .valid
		.out_ready            (adaptor_2x2_0_output_11_cmd_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (adaptor_2x2_0_output_11_cmd_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                       // (terminated)
	);

	adaptor2x2_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (10),
		.inUsePackets    (0),
		.inDataWidth     (10),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (10),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter (
		.in_clk_0_clk   (clk_0_clk_clk),                                     // in_clk_0.clk
		.in_rst_0_reset (nios2_gen2_11_reset_reset_bridge_in_reset_reset),   // in_rst_0.reset
		.in_0_data      (adaptor_2x2_0_input_11_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (adaptor_2x2_0_input_11_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (adaptor_2x2_0_input_11_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_out_0_data),                      //    out_0.data
		.out_0_valid    (avalon_st_adapter_out_0_valid),                     //         .valid
		.out_0_ready    (avalon_st_adapter_out_0_ready),                     //         .ready
		.out_0_error    (avalon_st_adapter_out_0_error)                      //         .error
	);

	adaptor2x2_mm_interconnect_0_avalon_st_adapter #(
		.inBitsPerSymbol (10),
		.inUsePackets    (0),
		.inDataWidth     (10),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (10),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_001 (
		.in_clk_0_clk   (clk_0_clk_clk),                                      // in_clk_0.clk
		.in_rst_0_reset (nios2_gen2_11_reset_reset_bridge_in_reset_reset),    // in_rst_0.reset
		.in_0_data      (adaptor_2x2_0_output_11_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (adaptor_2x2_0_output_11_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (adaptor_2x2_0_output_11_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_001_out_0_data),                   //    out_0.data
		.out_0_valid    (avalon_st_adapter_001_out_0_valid),                  //         .valid
		.out_0_ready    (avalon_st_adapter_001_out_0_ready),                  //         .ready
		.out_0_error    (avalon_st_adapter_001_out_0_error)                   //         .error
	);

	adaptor2x2_mm_interconnect_0_avalon_st_adapter_002 #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_002 (
		.in_clk_0_clk   (clk_0_clk_clk),                                             // in_clk_0.clk
		.in_rst_0_reset (nios2_gen2_11_reset_reset_bridge_in_reset_reset),           // in_rst_0.reset
		.in_0_data      (jtag_uart_11_avalon_jtag_slave_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (jtag_uart_11_avalon_jtag_slave_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (jtag_uart_11_avalon_jtag_slave_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_002_out_0_data),                          //    out_0.data
		.out_0_valid    (avalon_st_adapter_002_out_0_valid),                         //         .valid
		.out_0_ready    (avalon_st_adapter_002_out_0_ready),                         //         .ready
		.out_0_error    (avalon_st_adapter_002_out_0_error)                          //         .error
	);

	adaptor2x2_mm_interconnect_0_avalon_st_adapter_002 #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_003 (
		.in_clk_0_clk   (clk_0_clk_clk),                                            // in_clk_0.clk
		.in_rst_0_reset (nios2_gen2_11_reset_reset_bridge_in_reset_reset),          // in_rst_0.reset
		.in_0_data      (nios2_gen2_11_debug_mem_slave_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (nios2_gen2_11_debug_mem_slave_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (nios2_gen2_11_debug_mem_slave_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_003_out_0_data),                         //    out_0.data
		.out_0_valid    (avalon_st_adapter_003_out_0_valid),                        //         .valid
		.out_0_ready    (avalon_st_adapter_003_out_0_ready),                        //         .ready
		.out_0_error    (avalon_st_adapter_003_out_0_error)                         //         .error
	);

	adaptor2x2_mm_interconnect_0_avalon_st_adapter_002 #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_004 (
		.in_clk_0_clk   (clk_0_clk_clk),                                   // in_clk_0.clk
		.in_rst_0_reset (nios2_gen2_11_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (data_memory_11_s1_agent_rdata_fifo_src_data),     //     in_0.data
		.in_0_valid     (data_memory_11_s1_agent_rdata_fifo_src_valid),    //         .valid
		.in_0_ready     (data_memory_11_s1_agent_rdata_fifo_src_ready),    //         .ready
		.out_0_data     (avalon_st_adapter_004_out_0_data),                //    out_0.data
		.out_0_valid    (avalon_st_adapter_004_out_0_valid),               //         .valid
		.out_0_ready    (avalon_st_adapter_004_out_0_ready),               //         .ready
		.out_0_error    (avalon_st_adapter_004_out_0_error)                //         .error
	);

	adaptor2x2_mm_interconnect_0_avalon_st_adapter_002 #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_005 (
		.in_clk_0_clk   (clk_0_clk_clk),                                       // in_clk_0.clk
		.in_rst_0_reset (nios2_gen2_11_reset_reset_bridge_in_reset_reset),     // in_rst_0.reset
		.in_0_data      (instruction_memory_11_s1_agent_rdata_fifo_src_data),  //     in_0.data
		.in_0_valid     (instruction_memory_11_s1_agent_rdata_fifo_src_valid), //         .valid
		.in_0_ready     (instruction_memory_11_s1_agent_rdata_fifo_src_ready), //         .ready
		.out_0_data     (avalon_st_adapter_005_out_0_data),                    //    out_0.data
		.out_0_valid    (avalon_st_adapter_005_out_0_valid),                   //         .valid
		.out_0_ready    (avalon_st_adapter_005_out_0_ready),                   //         .ready
		.out_0_error    (avalon_st_adapter_005_out_0_error)                    //         .error
	);

endmodule
